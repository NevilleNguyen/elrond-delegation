{"version":3,"sources":["components/Heading/components/Identity/Identity.tsx","components/Nodes/Nodes.tsx","components/Nodes/styles.module.scss","components/Toggles/components/Switch/Switch.tsx","components/Nodes/components/Dropzone/helpers.ts","pages/Admin/styles.module.scss","pages/Dashboard/styles.module.scss","components/Nodes/components/Dropzone/Dropzone.tsx","components/Nodes/components/Add/Add.tsx","components/Action/Action.tsx","../node_modules/@multiversx/sdk-bls-wasm sync /^/.//.*/.js$","components/PageTitle/index.tsx","assets/MultiversX.tsx","helpers/denominate.ts","helpers/getPercentage.ts","helpers/nominate.ts","components/Cards/components/ChangeDelegationCap/ChangeDelegationCap.tsx","components/Cards/components/ChangeServiceFee/ChangeServiceFee.tsx","components/Cards/helpers/calculateAnnualPercentage.ts","components/Cards/Cards.tsx","components/Heading/Heading.tsx","components/Toggles/Toggles.tsx","hooks/useGlobalData.ts","components/Stake/helpers/delegationValidators.ts","components/Stake/hooks/index.ts","components/Stake/components/Delegate/Delegate.tsx","components/Stake/components/Undelegate/Undelegate.tsx","components/Stake/Stake.tsx","components/Withdrawals/components/Withdrawal/Withdrawal.tsx","components/Withdrawals/Withdrawals.tsx","routes.ts","pages/Home/Home.tsx","pages/Dashboard/Dashboard.tsx","pages/Admin/Admin.tsx","components/Layout/components/Navbar/Navbar.tsx","components/Layout/Layout.tsx","pages/PageNotFound/PageNotFound.tsx","assets/Extension.tsx","assets/Ledger.tsx","assets/Wallet.tsx","assets/xPortal.tsx","pages/Unlock/Unlock.tsx","App.tsx","index.tsx","components/Stake/styles.module.scss","components/Withdrawals/components/Withdrawal/styles.module.scss","config.ts","helpers/useTransaction.ts","components/Stake/components/Delegate/styles.module.scss","components/Action/styles.module.scss","components/Stake/components/Undelegate/styles.module.scss","components/Heading/styles.module.scss","components/Cards/styles.module.scss","components/Toggles/components/Switch/styles.module.scss","components/Layout/components/Navbar/styles.module.scss","components/Cards/components/ChangeServiceFee/styles.module.scss","components/Nodes/components/Dropzone/styles.module.scss","components/Cards/components/ChangeDelegationCap/styles.module.scss","components/Toggles/styles.module.scss","components/Action/context/index.tsx","components/Heading/components/Identity/styles.module.scss","components/Withdrawals/styles.module.scss","context/reducer.tsx","context/state.tsx","context/index.tsx","pages/Unlock/styles.module.scss","components/Nodes/components/Add/styles.module.scss"],"names":["Identity","agencyMetaData","useGlobalContext","sendTransaction","useTransaction","_useGetSuccessfulTran","useGetSuccessfulTransactions","hasSuccessfulTransactions","successfulTransactionsArray","dispatch","useDispatch","fields","name","label","validationSchema","object","shape","string","required","keybase","website","test","value","includes","Boolean","URL","error","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","_Object$keys$reduce","wrap","_context","prev","next","Object","keys","reduce","data","key","_objectSpread","_defineProperty","Buffer","from","toString","args","concat","type","t0","console","stop","_x","apply","arguments","getAgencyMetaData","_ref2","_callee2","provider","query","_data$getReturnDataPa","_data$getReturnDataPa2","_context2","status","ProxyNetworkProvider","network","gatewayAddress","Query","address","Address","delegationContract","func","ContractFunction","queryContract","sent","getReturnDataParts","map","decodeString","_slicedToArray","useEffect","length","_jsx","Formik","enableReinitialize","initialValues","children","_ref3","errors","values","touched","handleChange","handleBlur","handleSubmit","_jsxs","className","styles","identity","field","htmlFor","autoComplete","onChange","onBlur","classNames","input","invalid","Submit","close","submit","actions","callback","Nodes","_useGlobalContext","nodesNumber","nodesStates","pending","useGetActiveTransactionsStatus","_useState","useState","_useState2","setData","isLoading","onAct","useCallback","parameters","fetchQueue","_callee3","queue","_payload$map","_payload$map2","position","size","_context3","apiAddress","stakingContract","caller","auctionContract","BytesValue","fromHex","decode","response","item","abrupt","returnData","_x3","Promise","all","_ref4","String","_x2","calculateNodes","nodes","result","index","array","_array$slice","slice","_array$slice2","code","_toConsumableArray","variants","assignQueue","_ref6","_callee4","node","_context4","t1","t2","t3","t4","t5","_x4","getNodes","fetchData","_ref7","_callee5","states","activeNodes","inactiveNodes","_context5","total","indexes","statuses","inactive","unit","findIndex","start","find","end","notStaked","_x5","_x6","heading","title","Action","disabled","trigger","button","icon","FontAwesomeIcon","faPlus","render","Add","body","Fragment","server","faServer","message","left","href","explorerAddress","target","rel","link","faExternalLinkAlt","right","color","faCheck","faTimes","Dropdown","Toggle","toggle","angle","faAngleDown","Menu","menu","action","Item","onClick","module","exports","Switch","props","_classNames2","transaction","contractDetails","setDisabled","_useState3","_useState4","checked","setChecked","switch","setTimeout","defaultChecked","slider","active","decodeFile","file","myKey","ValidatorSecretKey","fromPem","dsc","signature","sign","pubkey","regex","indices","exec","push","substring","str","Uint8Array","a","i","len","parseInt","substr","hexStringToByte","window","atob","pubKey","headerParts","split","getPubKey","Dropzone","_useFormikContext","useFormikContext","setFieldValue","readFile","resolve","fileReader","FileReader","defaults","moment","unix","onload","contract","decoded","onError","readAsText","dropzone","useDropzone","multiple","accept","onDrop","_onDrop","files","readers","items","BLS","initIfNecessary","previous","properties","getInputProps","root","getRootProps","fileld","style","cursor","fetchNodes","fileIndex","duplicate","itemIndex","axios","get","meta","faKey","event","preventDefault","stopPropagation","filter","current","onRemove","setShowModal","useAction","of","mixed","every","add","withAction","description","_useAction","showModal","Modal","show","animation","centered","onHide","modal","onClose","buttons","blue","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","withPageTitle","Component","Memoized","memo","document","MultiversX","width","height","viewBox","fill","xmlns","d","denominate","denomination","decimals","_ref$showLastNonZeroD","showLastNonZeroDecimal","_ref$addCommas","addCommas","undefined","big","unshift","splice","indexOf","nonZeroDigitIndex","decimalsIndex","sliceIndex","Math","max","reverse","reference","count","floor","allDecimalsZero","digit","join","format","denominated","defaultDenomination","defaultDecimals","getPercentage","amountOutOfTotal","percentage","replace","toFixed","nominateVal","perc","parseFloat","nominateValToHex","val","BigNumber","paramDenomination","parts","transformed","repeat","nominate","ChangeDelegationCap","totalActiveStake","minimum","delegationCap","amount","egldLabel","isGreaterThanOrEqualTo","cap","group","step","min","ChangeServiceFee","breakpoints","serviceFee","range","thumb","completion","breakpoint","completed","denominateValue","calculateAnnualPercentage","_yearSettings$find","activeStake","blsKeys","networkStatus","networkStake","networkConfig","allNodes","allActiveNodes","epochsInYear","RoundDuration","RoundsPerEpoch","inflationRate","yearSettings","x","year","EpochNumber","maximumInflation","rewardsPerEpoch","genesisTokenSupply","feesInEpoch","rewardsPerEpochWithoutProtocolSustainability","protocolSustainabilityRewards","topUpRewardsLimit","TopUpFactor","networkBaseStake","ActiveValidators","stakePerNode","networkTopUpStake","Balance","TotalValidators","QueueSize","topUpReward","PI","atan","TopUpRewardsGradientPoint","baseReward","validatorTotalStake","validatorBaseStake","validatorTopUpStake","anualPercentageRate","Cards","totalNetworkStake","usersNumber","location","useLocation","getNetworkStatus","_yield$Promise$all","_yield$Promise$all2","balance","getUsersNumber","userNumber","decodeUnsignedNumber","getTotalNetworkStake","ApiNetworkProvider","timeout","getNetworkStakeStatistics","getContractStakeData","loading","formatted","stake","TotalStaked","getNodesNumber","getDelegationCap","cards","colors","faUsers","faLeaf","dependencies","some","dependency","getAnnualPercentage","faReceipt","faArrowUp","card","_card$colors","alpha","beta","background","interactive","pathname","faCog","Heading","navigate","useNavigate","isAdmin","owner","faThLarge","faEdit","Toggles","toggles","backgroundColor","faRecycle","useGlobalData","useGetAccountInfo","criticalFetches","getContractDetails","handler","_handler","ownerAddress","activationStatus","withDelegationCap","redelegationCap","hex","decodeBigNumber","automaticActivation","reject","_handler2","AddressValue","getNodesStates","_handler3","getTotalActiveStake","_handler4","totalNodes","getUserActiveStake","_handler5","_data$getReturnDataPa3","_data$getReturnDataPa4","userStake","getNetworkConfig","_handler6","_callee6","_context6","fetchCriticalData","_callee7","_context7","forEach","allSettled","reason","delegateValidator","limit","parseAmount","isLessThanOrEqualTo","useStakeData","check","setCheck","_useGetAccountInfo","account","userClaimableRewards","getUserClaimableRewards","_ref5","claimableRewards","onDelegate","onUndelegate","onRedelegate","onClaimRewards","getStakingLimits","gasPrice","gasLimit","available","minus","times","dustful","minDust","remainder","maxed","isGreaterThan","gt","Delegate","_useStakeData","_getStakingLimits","wrapper","delegate","save","Undelegate","setMaxed","userActiveStake","undelegate","requested","oneLeft","clearance","isEqualTo","below","Stake","_isEmpty$isLoading$is","isEmpty","isError","panels","subicon","faLock","faGift","empty","logo","panel","Array","iteratee","plus","Withdrawal","timeLeft","counter","setCounter","fiat","setFiat","getTimeLeft","duration","formatters","asDays","h","asHours","m","asMinutes","s","asSeconds","_formatters$key","time","utc","asMilliseconds","onWithdraw","interval","setInterval","timer","clearInterval","source","CancelToken","_yield$axios$get","cancelToken","token","price","Number","toLocaleString","isCancel","cancel","withdrawal","date","withdraw","faMinus","mobile","Withdrawals","undelegatedStakeList","getUndelegatedStakeList","config","epochsChangesRemaining","roundsRemainingInEpoch","RoundsPassedInCurrentEpoch","roundEpochComplete","getTime","exists","sort","withdrawals","routeNames","mappedRoutes","path","component","setLoading","fontSize","faSpinner","spin","dashboard","authenticatedRoute","admin","route","dAppName","requiresAuth","wrappedComponent","Navbar","faWallet","navigator","clipboard","writeText","faPowerOff","logout","origin","nav","Link","to","clickable","Layout","search","AuthenticatedRoutesWrapper","routes","unlockRoute","PageNotFound","faSearch","Extension","transform","cx","cy","r","Ledger","Wallet","xPortal","Unlock","connects","WebWalletLoginButton","LedgerLoginButton","innerLedgerComponentsClasses","ledgerScamPhishingAlertClassName","phishing","ledgerProgressBarClassNames","ledgerConnectClassNames","ledgerModalTitleClassName","ledgerModalSubtitleClassName","subtitle","ledgerModalIconClassName","confirmAddressClassNames","ledgerModalConfirmDescriptionClassName","ledgerModalConfirmFooterClassName","footer","addressTableClassNames","ledgerModalTableHeadClassName","head","ledgerModalTableNavigationButtonClassName","navigation","ledgerModalTableSelectedItemClassName","selected","ledgerLoadingClassNames","isWalletConnectV2","WalletConnectLoginButton","innerWalletConnectComponentsClasses","containerContentClassName","content","containerTitleClassName","containerButtonClassName","containerSubtitleClassName","containerScamPhishingAlertClassName","walletConnectPairingListClassNames","leadClassName","lead","buttonClassName","pairing","ExtensionLoginButton","unlock","connect","callbackRoute","logoutRoute","App","BrowserRouter","DappProvider","environment","customNetworkConfig","apiTimeout","walletConnectV2ProjectId","ContextProvider","TransactionsToastList","SignTransactionsModals","NotificationModal","Routes","Route","element","container","getElementById","createRoot","walletAddress","delegationContractData","delegable","getFunctionName","getGasLimit","SmartContract","nodeKeys","TokenPayment","egldFromAmount","receiver","getAddress","bech32","sendTransactions","transactions","Context","createContext","Provider","context","useContext","reducer","state","initializer","Dispatch","_useReducer","useReducer","_useReducer2"],"mappings":"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","file":"static/js/main.caeedb0f.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  ContractFunction,\n  Address,\n  Query,\n  decodeString\n} from '@multiversx/sdk-core';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\n\nimport classNames from 'classnames';\nimport { Formik, FormikProps } from 'formik';\nimport { object, string } from 'yup';\n\nimport { Submit } from 'components/Action';\nimport { network } from 'config';\n\nimport { useDispatch, useGlobalContext } from 'context';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface FieldType {\n  [key: string]: any;\n  label: string;\n  name: string;\n}\n\ninterface PayloadType {\n  [key: string]: any;\n  website?: string;\n  keybase?: string;\n  name?: string;\n}\n\nexport const Identity = () => {\n  const { agencyMetaData } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n\n  const dispatch = useDispatch();\n  const fields: FieldType[] = [\n    {\n      name: 'name',\n      label: 'Name'\n    },\n    {\n      name: 'website',\n      label: 'Website'\n    },\n    {\n      name: 'keybase',\n      label: 'Keybase'\n    }\n  ];\n\n  const validationSchema = object().shape({\n    name: string().required('Name required.'),\n    keybase: string().required('Keybase required.'),\n    website: string()\n      .required('Website required.')\n      .test('URL', 'URL is not valid!', (value: any) => {\n        try {\n          return value && !value.includes('#') && Boolean(new URL(value || ''));\n        } catch (error) {\n          return false;\n        }\n      })\n  });\n\n  const onSubmit = async (payload: PayloadType): Promise<void> => {\n    const { website, name, keybase }: PayloadType = Object.keys(payload).reduce(\n      (data, key) => ({\n        ...data,\n        [key]: Buffer.from(payload[key]).toString('hex')\n      }),\n      {}\n    );\n\n    try {\n      await sendTransaction({\n        args: `${name}@${website}@${keybase}`,\n        type: 'setMetaData',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getAgencyMetaData = async (): Promise<void> => {\n    dispatch({\n      type: 'getAgencyMetaData',\n      agencyMetaData: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getMetaData')\n      });\n\n      const data = await provider.queryContract(query);\n      const [name, website, keybase] = data\n        .getReturnDataParts()\n        .map(decodeString);\n\n      dispatch({\n        type: 'getAgencyMetaData',\n        agencyMetaData: {\n          status: 'loaded',\n          error: null,\n          data: {\n            name,\n            website,\n            keybase\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getAgencyMetaData',\n        agencyMetaData: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchAgencyMetaData = () => {\n    if (!agencyMetaData.data) {\n      getAgencyMetaData();\n    }\n  };\n\n  const refetchAgencyMetaData = () => {\n    if (\n      hasSuccessfulTransactions &&\n      agencyMetaData.data &&\n      successfulTransactionsArray.length > 0\n    ) {\n      getAgencyMetaData();\n    }\n  };\n\n  useEffect(fetchAgencyMetaData, [agencyMetaData.data]);\n  useEffect(refetchAgencyMetaData, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  return (\n    <Formik\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      enableReinitialize={true}\n      initialValues={\n        agencyMetaData.data || { name: '', website: '', keybase: '' }\n      }\n    >\n      {({\n        errors,\n        values,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      }: FormikProps<PayloadType>) => (\n        <form onSubmit={handleSubmit} className={`${styles.identity} identity`}>\n          {fields.map((field: FieldType) => (\n            <div key={field.name} className={styles.field}>\n              <label htmlFor={field.name}>{field.label}</label>\n              <div className='input-group'>\n                <input\n                  type='text'\n                  name={field.name}\n                  value={values[field.name]}\n                  autoComplete='off'\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={classNames(styles.input, {\n                    [styles.invalid]: errors[field.name] && touched[field.name]\n                  })}\n                />\n\n                {errors[field.name] && touched[field.name] && (\n                  <span className={styles.error}>{errors[field.name]}</span>\n                )}\n              </div>\n            </div>\n          ))}\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import React, { useEffect, useState, Fragment, useCallback } from 'react';\nimport {\n  faPlus,\n  faServer,\n  faTimes,\n  faCheck,\n  faExternalLinkAlt,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  ContractFunction,\n  Address,\n  Query,\n  BytesValue\n} from '@multiversx/sdk-core';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\nimport classNames from 'classnames';\nimport { Dropdown } from 'react-bootstrap';\n\nimport { Action } from 'components/Action';\nimport { network, auctionContract, stakingContract } from 'config';\nimport { useGlobalContext } from 'context';\nimport useTransaction from 'helpers/useTransaction';\n\nimport { Add } from './components/Add';\n\nimport styles from './styles.module.scss';\n\nimport variants from './variants.json';\n\ninterface NodeType {\n  code: string;\n  status: any;\n  position?: string;\n}\n\ninterface VariantsType {\n  [key: string]: any;\n}\n\ninterface ArgumentsType {\n  value: string;\n  type: string;\n  args: string;\n}\n\ninterface ActionsType {\n  key: string;\n  label: string;\n  callback: (value: string) => ArgumentsType;\n}\n\nconst actions: ActionsType[] = [\n  {\n    key: 'unStake',\n    label: 'Unstake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'unStakeNodes',\n      args: value\n    })\n  },\n  {\n    key: 'reStake',\n    label: 'ReStake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'reStakeUnStakedNodes',\n      args: value\n    })\n  },\n  {\n    key: 'unJail',\n    label: 'Unjail',\n    callback: (value: string) => ({\n      value: '2.5',\n      type: 'unJailNodes',\n      args: value\n    })\n  },\n  {\n    key: 'unBond',\n    label: 'Unbond',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'unBondNodes',\n      args: value\n    })\n  },\n  {\n    key: 'stake',\n    label: 'Stake',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'stakeNodes',\n      args: `${value}`\n    })\n  },\n  {\n    key: 'remove',\n    label: 'Remove',\n    callback: (value: string) => ({\n      value: '0',\n      type: 'removeNodes',\n      args: `${value}`\n    })\n  }\n];\n\nexport const Nodes = () => {\n  const { nodesNumber, nodesStates } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n\n  const [data, setData] = useState<NodeType[]>([]);\n  const isLoading = nodesNumber.status === 'loading';\n\n  const onAct = useCallback(\n    async (parameters: ArgumentsType): Promise<void> => {\n      const { value, type, args } = parameters;\n\n      try {\n        await sendTransaction({\n          args,\n          type,\n          value\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    []\n  );\n\n  const fetchQueue = useCallback(async (key: string) => {\n    const provider = new ProxyNetworkProvider(network.apiAddress);\n    const query = new Query({\n      address: new Address(stakingContract),\n      func: new ContractFunction('getQueueIndex'),\n      caller: new Address(auctionContract),\n      args: [BytesValue.fromHex(key)]\n    });\n\n    const queue = new Query({\n      address: new Address(stakingContract),\n      func: new ContractFunction('getQueueSize')\n    });\n\n    const queryContract = async (parameters: Query) => {\n      const decode = (item: string) => Buffer.from(item, 'base64');\n      const response = await provider.queryContract(parameters);\n\n      return response.returnData.map(decode);\n    };\n\n    const payload = await Promise.all([query, queue].map(queryContract));\n    const [position, size] = payload.map(([item]) => String(item));\n\n    return `${position}/${size}`;\n  }, []);\n\n  const calculateNodes = useCallback(\n    (nodes: any[]) =>\n      nodes.reduce((result: any, value, index, array) => {\n        if (index % 2 === 0) {\n          const [code, status]: any[] = array.slice(index, index + 2);\n          const item: any = {\n            code: Buffer.from(code, 'base64').toString('hex'),\n            status: Buffer.from(status, 'base64').toString()\n          };\n\n          return [\n            ...result,\n            {\n              ...item,\n              status: (variants as VariantsType)[item.status]\n            }\n          ];\n        }\n        return result;\n      }, []),\n    []\n  );\n\n  const assignQueue = useCallback(\n    (nodes: NodeType[]) =>\n      nodes.map(async (node: NodeType) =>\n        node.status.label === 'Queued'\n          ? {\n              ...node,\n              position: await fetchQueue(node.code)\n            }\n          : node\n      ),\n    []\n  );\n\n  const getNodes = () => {\n    const fetchData = async (nodes: any[], states: any[]) => {\n      try {\n        const activeNodes = await Promise.all(\n          assignQueue(calculateNodes(nodes))\n        );\n        const inactiveNodes = states.reduce((total, item, index) => {\n          const indexes = states.reduce(\n            (statuses, status, position) =>\n              Object.keys(variants).includes(String(status))\n                ? [...statuses, { position, status: String(status) }]\n                : statuses,\n            []\n          );\n\n          const inactive = (unit: any) => unit.status === 'notStaked';\n          const position = indexes.findIndex(inactive);\n          const start = indexes.find(inactive);\n          const end = indexes[position + 1] || { position: states.length };\n\n          const node: any = {\n            code: item.toString('hex'),\n            status: variants.notStaked\n          };\n\n          if (!start || !end) {\n            return total;\n          }\n\n          return index > start.position && index < end.position\n            ? [...total, node]\n            : total;\n        }, []);\n\n        setData(activeNodes.concat(inactiveNodes));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    if (nodesNumber.data && nodesStates.data) {\n      fetchData(nodesNumber.data, nodesStates.data);\n    }\n\n    return () => setData([]);\n  };\n\n  const refetchNodes = () => {\n    if (\n      hasSuccessfulTransactions &&\n      nodesNumber.data &&\n      successfulTransactionsArray.length > 0\n    ) {\n      getNodes();\n    }\n  };\n\n  useEffect(getNodes, [nodesNumber.data, nodesStates.data]);\n  useEffect(refetchNodes, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  return (\n    <div className={`${styles.nodes} nodes`}>\n      <div className={styles.heading}>\n        <span className={styles.title}>My Nodes</span>\n\n        <Action\n          title='Add Nodes'\n          disabled={pending}\n          trigger={\n            <div\n              className={classNames(styles.button, {\n                [styles.disabled]: pending\n              })}\n            >\n              <div className={styles.icon}>\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n              <span>Add Nodes</span>\n            </div>\n          }\n          render={() => <Add />}\n        />\n      </div>\n\n      <div className={styles.body}>\n        {isLoading || nodesNumber.error || data.length === 0 ? (\n          <Fragment>\n            <div className={styles.server}>\n              <FontAwesomeIcon icon={faServer} size='2x' />\n            </div>\n\n            <div className={styles.message}>\n              {isLoading\n                ? 'Retrieving keys...'\n                : nodesNumber.error\n                ? 'An error occurred attempting to retrieve keys.'\n                : 'No keys found for this contract.'}\n            </div>\n          </Fragment>\n        ) : (\n          data.map((node: NodeType) => (\n            <div key={node.code} className={styles.node}>\n              <div className={styles.left}>\n                <span className={styles.icon}>\n                  <FontAwesomeIcon icon={faServer} />\n                </span>\n\n                <a\n                  href={`${network.explorerAddress}/nodes/${node.code}`}\n                  target='_blank'\n                  rel='noreferrer'\n                  className={styles.link}\n                >\n                  <span className={styles.code}>{node.code}</span>\n\n                  <FontAwesomeIcon icon={faExternalLinkAlt} />\n                </a>\n              </div>\n\n              <div className={styles.right}>\n                {node.status && (\n                  <span\n                    className={classNames(\n                      styles.status,\n                      styles[node.status.color]\n                    )}\n                  >\n                    <span className={styles.icon}>\n                      <FontAwesomeIcon\n                        icon={\n                          node.status.color === 'success' ? faCheck : faTimes\n                        }\n                        size='sm'\n                      />\n                    </span>\n\n                    {node.position\n                      ? `${node.status.label} (Position ${node.position})`\n                      : node.status.label}\n                  </span>\n                )}\n\n                <Dropdown>\n                  <Dropdown.Toggle\n                    className={classNames(styles.toggle, {\n                      [styles.disabled]: pending\n                    })}\n                  >\n                    <span>Action</span>\n\n                    <div className={styles.angle}>\n                      <FontAwesomeIcon icon={faAngleDown} />\n                    </div>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className={styles.menu}>\n                    {actions.map((action) => {\n                      const disabled = !node.status.actions.includes(\n                        action.key\n                      );\n\n                      return (\n                        <Dropdown.Item\n                          key={action.key}\n                          className={classNames(styles.action, {\n                            [styles.disabled]: disabled\n                          })}\n                          onClick={() => {\n                            onAct(action.callback(node.code));\n                          }}\n                        >\n                          {action.label}\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodes\":\"styles_nodes__3-lVD\",\"heading\":\"styles_heading__2bDOE\",\"title\":\"styles_title__1wqpV\",\"button\":\"styles_button__2gPmL\",\"disabled\":\"styles_disabled__1hVGB\",\"body\":\"styles_body__4ystG\",\"server\":\"styles_server__3v37p\",\"message\":\"styles_message__1i5ed\",\"node\":\"styles_node__3NO0o\",\"left\":\"styles_left__3T2Ho\",\"icon\":\"styles_icon__2tVsj\",\"link\":\"styles_link__1wx7R\",\"code\":\"styles_code__24452\",\"right\":\"styles_right__piqTL\",\"status\":\"styles_status__1O8qQ\",\"danger\":\"styles_danger__2rRlF\",\"warning\":\"styles_warning__3dbq_\",\"success\":\"styles_success__1xxMv\",\"toggle\":\"styles_toggle__1PFdn\",\"angle\":\"styles_angle__3cI7x\",\"menu\":\"styles_menu__2r0zN\",\"action\":\"styles_action__2-7rl\"};","import React, { useState, useEffect } from 'react';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\n\nimport { useGlobalContext } from 'context';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\nexport interface SwitchPropsType {\n  transaction: string;\n  name: string;\n}\n\nexport const Switch = (props: SwitchPropsType) => {\n  const { transaction, name } = props;\n  const { contractDetails } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { pending } = useGetActiveTransactionsStatus();\n\n  const [disabled, setDisabled] = useState(false);\n  const [checked, setChecked] = useState(\n    contractDetails.data ? contractDetails.data[name] === 'ON' : false\n  );\n\n  const onChange = (type: string): void => {\n    setDisabled(true);\n\n    try {\n      setTimeout(async (): Promise<void> => {\n        await sendTransaction({\n          args: Buffer.from(`${!checked}`).toString('hex'),\n          value: '0',\n          type\n        });\n\n        setDisabled(false);\n      }, 200);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const trackContractDetails = () => {\n    if (contractDetails.data) {\n      setChecked(contractDetails.data[name] === 'ON');\n    }\n  };\n\n  useEffect(trackContractDetails, [contractDetails.data]);\n\n  return (\n    <label\n      className={classNames(\n        styles.switch,\n        { [styles.disabled]: disabled || pending },\n        'switch'\n      )}\n    >\n      <input\n        onChange={() => onChange(transaction)}\n        type='checkbox'\n        name={name}\n        className={styles.input}\n        defaultChecked={checked}\n      />\n\n      <span\n        className={classNames(styles.slider, {\n          [styles.right]: checked,\n          [styles.disabled]: pending\n        })}\n      >\n        {['OFF', 'ON'].map((toggle) => (\n          <span\n            key={toggle}\n            className={classNames(styles.label, { [styles.active]: checked })}\n          >\n            {toggle}\n          </span>\n        ))}\n      </span>\n    </label>\n  );\n};\n","import { Address } from '@multiversx/sdk-core';\nimport { ValidatorSecretKey } from '@multiversx/sdk-wallet';\n\nfunction hexStringToByte(str: string) {\n  if (!str) {\n    return new Uint8Array();\n  }\n  const a = [];\n  for (let i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16));\n  }\n  return new Uint8Array(a);\n}\n\nfunction getPubKey(file: string, indices: any[]) {\n  const headerParts = file\n    .toString()\n    .substring(indices[0], indices[1])\n    .split(' ');\n  return headerParts[4] ? headerParts[4] : '';\n}\n\nexport default function decodeFile(file: string, delegationContract?: string) {\n  const myKey = ValidatorSecretKey.fromPem(file);\n  const dsc = new Address(delegationContract);\n  const signature = myKey.sign(Buffer.from(dsc.pubkey())).toString('hex');\n\n  const regex = /-----/gi;\n  let result;\n  const indices = [];\n  while ((result = regex.exec(file.toString()))) {\n    indices.push(result.index);\n  }\n\n  const key = file.toString().substring(indices[1] + 6, indices[2] - 1);\n  const decoded = window.atob(key);\n\n  const value = hexStringToByte(decoded);\n  const pubKey = getPubKey(file, indices);\n\n  return { value, pubKey, signature };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"styles_admin__1n8OJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__3nkSr\"};","import React, { useState, useEffect } from 'react';\n\nimport { faKey, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { BLS } from '@multiversx/sdk-wallet';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { useFormikContext, FormikProps } from 'formik';\nimport moment from 'moment';\nimport { useDropzone } from 'react-dropzone';\n\nimport { network } from 'config';\n\nimport decodeFile from './helpers';\n\nimport styles from './styles.module.scss';\nexport interface DropzoneFormType {\n  files: any[];\n}\n\nexport interface DropzonePayloadType {\n  key: string;\n  name: string;\n  signature: string;\n  pubKey: string;\n  value: Uint8Array[];\n  errors?: string[];\n}\n\nexport const Dropzone = () => {\n  const [data, setData] = useState<DropzonePayloadType[]>([]);\n  const { setFieldValue, values }: FormikProps<DropzoneFormType> =\n    useFormikContext();\n\n  const readFile = (file: any) =>\n    new Promise((resolve) => {\n      const fileReader: any = new FileReader();\n      const defaults = {\n        name: file.name,\n        key: `${file.name}-${moment().unix()}`\n      };\n\n      fileReader.onload = () => {\n        try {\n          const result = fileReader.result;\n          const contract = network.delegationContract;\n          const decoded = decodeFile(result, contract);\n\n          resolve({\n            ...decoded,\n            ...defaults\n          });\n        } catch (error) {\n          resolve(defaults);\n        }\n      };\n\n      fileReader.onError = () => {\n        resolve(defaults);\n      };\n\n      fileReader.readAsText(file);\n    });\n\n  const dropzone = useDropzone({\n    multiple: true,\n    accept: '.pem',\n    onDrop: async (files: any) => {\n      try {\n        await BLS.initIfNecessary();\n\n        const readers = files.map(readFile);\n        const items = await Promise.all(readers);\n\n        setData((previous: any) => [...previous, ...items]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n\n  const properties = {\n    input: dropzone.getInputProps(),\n    root: dropzone.getRootProps({\n      className: classNames(\n        styles.dropzone,\n        { [styles.fileld]: values.files.length > 0 },\n        'dropzone'\n      ),\n      style: {\n        cursor: 'pointer'\n      }\n    })\n  };\n\n  const onRemove = (key: string) => {\n    const filter = (item: DropzonePayloadType) => item.key !== key;\n\n    setData((current: DropzonePayloadType[]) => current.filter(filter));\n    setFieldValue('files', values.files.filter(filter));\n  };\n\n  const setValue = () => {\n    const fetchNodes = async () => {\n      const value = await Promise.all(\n        data.map(async (file: DropzonePayloadType, fileIndex: number) => {\n          const errors: string[] = [];\n          const duplicate = (item: DropzonePayloadType, itemIndex: number) =>\n            file.pubKey === item.pubKey && fileIndex > itemIndex;\n\n          if (!file.pubKey || file.pubKey.length !== 192) {\n            errors.push('length');\n          }\n\n          if (data.find(duplicate)) {\n            errors.push('unique');\n          }\n\n          try {\n            const existing = await axios.get(\n              `${network.apiAddress}/nodes/${file.pubKey}`\n            );\n\n            if (existing) {\n              errors.push('existing');\n            }\n          } catch (error) {\n            return {\n              ...file,\n              errors\n            };\n          }\n\n          return {\n            ...file,\n            errors\n          };\n        })\n      );\n\n      setFieldValue('files', value);\n    };\n\n    fetchNodes();\n\n    return () => setFieldValue('files', []);\n  };\n\n  useEffect(setValue, [data]);\n\n  return (\n    <div {...properties.root}>\n      <input {...properties.input} />\n\n      {values.files.length > 0 ? (\n        values.files.map((file: DropzonePayloadType) => (\n          <div\n            key={file.key}\n            className={classNames(styles.file, {\n              [styles.error]: file.errors && file.errors.length > 0\n            })}\n          >\n            <div className={styles.meta}>\n              <FontAwesomeIcon icon={faKey} />\n\n              <span className={styles.name}>{file.name}</span>\n            </div>\n\n            <span\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onRemove(file.key);\n              }}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n        ))\n      ) : (\n        <span className={styles.message}>\n          Drag and drop your PEM Files here, or Select Files\n        </span>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Formik } from 'formik';\nimport { object, array, mixed } from 'yup';\n\nimport { Submit } from 'components/Action';\n\nimport { useAction } from 'components/Action/context';\nimport {\n  Dropzone,\n  DropzonePayloadType,\n  DropzoneFormType\n} from 'components/Nodes/components/Dropzone';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\nexport const Add = () => {\n  const { sendTransaction } = useTransaction();\n  const { setShowModal } = useAction();\n\n  const validationSchema = object().shape({\n    files: array()\n      .of(mixed())\n      .required('PEM file is required.')\n      .test('validKeyLength', 'Invalid PEM file.', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('length')\n        )\n      )\n      .test('keyIsUnused', 'Key exists already.', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('existing')\n        )\n      )\n      .test('keyIsUnique', 'Duplicate key detected!', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('unique')\n        )\n      )\n  });\n\n  const onSubmit = async ({ files }: DropzoneFormType): Promise<void> => {\n    try {\n      const value = files.reduce(\n        (total: string, current: DropzonePayloadType) =>\n          `${total}@${current.pubKey}@${current.signature}`,\n        ''\n      );\n\n      if (Boolean(value)) {\n        await sendTransaction({\n          args: value,\n          type: 'addNodes',\n          value: '0'\n        });\n\n        setTimeout(() => setShowModal(false), 250);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ files: [] }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, errors }) => (\n        <form onSubmit={handleSubmit} className={`${styles.add} add`}>\n          <Dropzone />\n\n          {errors.files && <div className={styles.error}>{errors.files}</div>}\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Modal } from 'react-bootstrap';\n\nimport { useAction, withAction } from './context';\n\nimport styles from './styles.module.scss';\n\nexport const Action = withAction(\n  ({ render, title, description, trigger, disabled }: any) => {\n    const { showModal, setShowModal } = useAction();\n\n    return (\n      <div className={classNames(styles.action, 'action')}>\n        <button\n          onClick={() => setShowModal(true)}\n          className={classNames(styles.trigger, {\n            [styles.disabled]: disabled\n          })}\n        >\n          {trigger}\n        </button>\n\n        <Modal\n          show={showModal}\n          animation={false}\n          centered={true}\n          className='modal-container'\n          onHide={() => setShowModal(false)}\n        >\n          <div className={styles.modal}>\n            {title && <div className={styles.title}>{title}</div>}\n            {description && <p className={styles.description}>{description}</p>}\n            {render && (\n              <div className={styles.render}>\n                {render(() => setShowModal(false))}\n              </div>\n            )}\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n);\n\nexport const Submit = ({ close, submit, onClose }: any) => {\n  const { setShowModal } = useAction();\n\n  const onCloseClick = (event: any) => {\n    if (onClose) {\n      onClose();\n    }\n\n    event.preventDefault();\n    setShowModal(false);\n  };\n\n  return (\n    <div className={styles.buttons}>\n      <button type='button' className={styles.button} onClick={onCloseClick}>\n        {close || 'Close'}\n      </button>\n\n      <button type='submit' className={classNames(styles.button, styles.blue)}>\n        {submit || 'Submit'}\n      </button>\n    </div>\n  );\n};\n","var map = {\n\t\"./bls.js\": 1026,\n\t\"./bls_c.js\": 1058\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1621;","import React, { useEffect, memo } from 'react';\n\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\n  const Memoized = memo(Component);\n  const setDocumentTitle = () => {\n    document.title = title;\n  };\n\n  useEffect(setDocumentTitle, []);\n\n  return <Memoized />;\n};\n\nexport default withPageTitle;\n","import React from 'react';\n\nexport const MultiversX = () => (\n  <svg\n    width='20'\n    height='16'\n    viewBox='0 0 20 16'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M11.0078 8L19.375 3.32661L17.9683 0.5L10.3066 3.73976C10.1093 3.8233 9.89064 3.8233 9.69336 3.73976L2.03168 0.5L0.625 3.32661L8.99218 8L0.625 12.6734L2.03168 15.5L9.69336 12.2602C9.89064 12.1767 10.1093 12.1767 10.3066 12.2602L17.9683 15.5L19.375 12.6734L11.0078 8Z'\n      fill='#23F7DD'\n    />\n  </svg>\n);\n","import {\n  decimals as defaultDecimals,\n  denomination as defaultDenomination\n} from 'config';\n\nfunction format(\n  big: string,\n  denomination: number,\n  decimals: number,\n  showLastNonZeroDecimal: boolean,\n  addCommas: boolean\n) {\n  showLastNonZeroDecimal =\n    typeof showLastNonZeroDecimal !== 'undefined'\n      ? showLastNonZeroDecimal\n      : false;\n  let array = big.toString().split('');\n  if (denomination !== 0) {\n    // make sure we have enough characters\n    while (array.length < denomination + 1) {\n      array.unshift('0');\n    }\n    // add our dot\n    array.splice(array.length - denomination, 0, '.');\n    // make sure there are enough decimals after the dot\n    while (array.length - array.indexOf('.') <= decimals) {\n      array.push('0');\n    }\n\n    if (showLastNonZeroDecimal) {\n      let nonZeroDigitIndex = 0;\n      for (let i = array.length - 1; i > 0; i--) {\n        if (array[i] !== '0') {\n          nonZeroDigitIndex = i + 1;\n          break;\n        }\n      }\n      const decimalsIndex = array.indexOf('.') + decimals + 1;\n      const sliceIndex = Math.max(decimalsIndex, nonZeroDigitIndex);\n      array = array.slice(0, sliceIndex);\n    } else {\n      // trim unnecessary characters after the dot\n      array = array.slice(0, array.indexOf('.') + decimals + 1);\n    }\n  }\n  if (addCommas) {\n    // add comas every 3 characters\n    array = array.reverse();\n    const reference = denomination\n      ? array.length - array.indexOf('.') - 1\n      : array.length;\n    const count = Math.floor(reference / 3);\n    for (let i = 1; i <= count; i++) {\n      const position = array.indexOf('.') + 3 * i + i;\n      if (position !== array.length) {\n        array.splice(position, 0, ',');\n      }\n    }\n    array = array.reverse();\n  }\n\n  const allDecimalsZero = array\n    .slice(array.indexOf('.') + 1)\n    .every((digit) => digit.toString() === '0');\n\n  const string = array.join('');\n\n  if (allDecimalsZero) {\n    return string.split('.')[0];\n  }\n\n  return decimals === 0 ? string.split('.').join('') : string;\n}\n\ninterface DenominateType {\n  input: string;\n  denomination: number;\n  decimals: number;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport default function denominate({\n  input,\n  denomination,\n  decimals,\n  showLastNonZeroDecimal = false,\n  addCommas = true\n}: DenominateType): string {\n  if (input === '...') {\n    return input;\n  }\n  if (input === '' || input === '0' || input === undefined) {\n    input = '0';\n  }\n  return format(\n    input,\n    denomination,\n    decimals,\n    showLastNonZeroDecimal,\n    addCommas\n  );\n}\n\ninterface DenominatedType {\n  denomination?: number;\n  decimals?: number;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport const denominated = (\n  input: string,\n  parameters?: DenominatedType\n): string =>\n  denominate({\n    input,\n    denomination: defaultDenomination,\n    decimals: defaultDecimals,\n    ...parameters\n  });\n","const getPercentage = (amountOutOfTotal: string, total: string) => {\n  const percentage =\n    (parseInt(amountOutOfTotal.replace(/,/g, '')) /\n      parseInt(total.replace(/,/g, ''))) *\n    100;\n  if (percentage < 1) {\n    return '<1';\n  }\n\n  if (percentage > 100) {\n    return '100.00';\n  }\n\n  return percentage ? percentage.toFixed(2) : '...';\n};\n\nexport default getPercentage;\n","import BigNumber from 'bignumber.js';\n\nexport default function nominate(input: string, paramDenomination?: number) {\n  const parts = input.toString().split('.');\n  const denomination = paramDenomination !== undefined ? paramDenomination : 18;\n\n  if (parts[1]) {\n    // remove trailing zeros\n    while (\n      parts[1].substring(parts[1].length - 1) === '0' &&\n      parts[1].length > 1\n    ) {\n      parts[1] = parts[1].substring(0, parts[1].length - 1);\n    }\n  }\n\n  let count = parts[1] ? denomination - parts[1].length : denomination;\n\n  count = count < 0 ? 0 : count;\n\n  let transformed = parts.join('') + '0'.repeat(count);\n\n  // remove beginning zeros\n  while (transformed.substring(0, 1) === '0' && transformed.length > 1) {\n    transformed = transformed.substring(1);\n  }\n\n  return transformed;\n}\n\nexport const nominateVal = (value: string) => {\n  let perc = (parseFloat(value) * 100).toString(16);\n  if (perc.length % 2 !== 0) {\n    perc = '0' + perc;\n  }\n  return perc;\n};\n\nexport const nominateValToHex = (value: string) => {\n  let val =\n    value && value.length > 0\n      ? new BigNumber(nominate(value)).toString(16)\n      : '0';\n\n  if (val.length % 2 !== 0) {\n    val = '0' + val;\n  }\n\n  return val;\n};\n","import React from 'react';\nimport BigNumber from 'bignumber.js';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { string, object } from 'yup';\n\nimport { Submit } from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nexport const ChangeDelegationCap = () => {\n  const { sendTransaction } = useTransaction();\n  const { contractDetails, totalActiveStake } = useGlobalContext();\n\n  const minimum = denominated(totalActiveStake.data || '', {\n    addCommas: false\n  });\n\n  const total = denominated(\n    contractDetails.data ? contractDetails.data.delegationCap : '',\n    {\n      addCommas: false\n    }\n  );\n\n  const validationSchema = object().shape({\n    amount: string()\n      .required('Required')\n      .test(\n        'minimum',\n        `Minimum ${minimum} ${network.egldLabel} or 0 ${network.egldLabel}`,\n        (value = '') =>\n          new BigNumber(value).isGreaterThanOrEqualTo(minimum) || value === '0'\n      )\n  });\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateValToHex(data.amount.toString()),\n        type: 'modifyTotalDelegationCap',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={`${styles.cap} cap`}>\n      <Formik\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n        initialValues={{\n          amount: total\n        }}\n      >\n        {({\n          errors,\n          values,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <div className={styles.field}>\n              <label htmlFor='amount'>Update Delegation Cap</label>\n\n              <div className={styles.group}>\n                <input\n                  type='number'\n                  name='amount'\n                  step='any'\n                  required={true}\n                  autoComplete='off'\n                  min={0}\n                  value={values.amount}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  className={classNames(styles.input, {\n                    [styles.invalid]: errors.amount && touched.amount\n                  })}\n                />\n              </div>\n\n              {errors.amount && touched.amount && (\n                <span className={styles.error}>{errors.amount}</span>\n              )}\n            </div>\n\n            <Submit close='Cancel' submit='Continue' />\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { Submit } from 'components/Action';\n\nimport { useGlobalContext } from 'context';\nimport { nominateVal } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nexport const ChangeServiceFee = () => {\n  const breakpoints = [0, 25, 50, 75, 100];\n\n  const { sendTransaction } = useTransaction();\n  const { contractDetails } = useGlobalContext();\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateVal(data.amount),\n        type: 'changeServiceFee',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={{\n        amount: contractDetails.data\n          ? contractDetails.data.serviceFee.replace('%', '')\n          : '0'\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit }) => (\n        <form\n          onSubmit={handleSubmit}\n          className={`${styles.serviceFee} serviceFee`}\n        >\n          <div className={styles.range}>\n            <input\n              className={styles.input}\n              name='amount'\n              type='range'\n              onBlur={handleBlur}\n              onChange={handleChange}\n              min={0}\n              max={100}\n              value={values.amount}\n            />\n\n            <span\n              className={styles.thumb}\n              style={{ left: `${values.amount}%` }}\n            >\n              <strong>{values.amount}%</strong>\n            </span>\n\n            <div\n              className={styles.completion}\n              style={{ width: `${values.amount}%` }}\n            />\n\n            {breakpoints.map((breakpoint) => (\n              <div\n                style={{ left: `${breakpoint}%` }}\n                key={`breakpoint-${breakpoint}`}\n                className={classNames(styles.breakpoint, {\n                  [styles.completed]: breakpoint <= parseInt(values.amount)\n                })}\n              >\n                <span>{breakpoint}%</span>\n              </div>\n            ))}\n          </div>\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { decodeString } from '@multiversx/sdk-core';\nimport {\n  denomination,\n  decimals,\n  feesInEpoch,\n  stakePerNode,\n  protocolSustainabilityRewards,\n  yearSettings,\n  genesisTokenSupply\n} from 'config';\nimport denominate from 'helpers/denominate';\n\nconst denominateValue = (value: string) => {\n  const denominatedValueString = denominate({\n    input: value,\n    denomination,\n    decimals\n  });\n  const valueWithoutComma = denominatedValueString.replace(/,/g, '');\n  return valueWithoutComma;\n};\n\nconst calculateAnnualPercentage = ({\n  activeStake,\n  blsKeys,\n  networkStatus,\n  networkStake,\n  networkConfig,\n  serviceFee\n}: any) => {\n  const allNodes = blsKeys.filter(\n    (key: any) =>\n      decodeString(key) === 'staked' ||\n      decodeString(key) === 'jailed' ||\n      decodeString(key) === 'queued'\n  ).length;\n  const allActiveNodes = blsKeys.filter(\n    (key: any) => decodeString(key) === 'staked'\n  ).length;\n  if (allActiveNodes <= 0) {\n    return '0.00';\n  }\n\n  const epochDurationInSeconds =\n    (networkConfig.RoundDuration / 1000) * networkConfig.RoundsPerEpoch;\n  const secondsInYear = 365 * 24 * 3600;\n  const epochsInYear = secondsInYear / epochDurationInSeconds;\n  const inflationRate =\n    yearSettings.find(\n      (x) => x.year === Math.floor(networkStatus.EpochNumber / epochsInYear) + 1\n    )?.maximumInflation || 0;\n  const rewardsPerEpoch = Math.max(\n    (inflationRate * genesisTokenSupply) / epochsInYear,\n    feesInEpoch\n  );\n  const rewardsPerEpochWithoutProtocolSustainability =\n    (1 - protocolSustainabilityRewards) * rewardsPerEpoch;\n  const topUpRewardsLimit =\n    networkConfig.TopUpFactor * rewardsPerEpochWithoutProtocolSustainability;\n\n  const networkBaseStake = networkStake.ActiveValidators * stakePerNode;\n  const networkTotalStake = parseInt(denominateValue(networkStatus.Balance));\n  const networkTopUpStake =\n    networkTotalStake -\n    networkStake.TotalValidators * stakePerNode -\n    networkStake.QueueSize * stakePerNode;\n  const topUpReward =\n    ((2 * topUpRewardsLimit) / Math.PI) *\n    Math.atan(\n      networkTopUpStake /\n        (2 *\n          parseInt(\n            denominateValue(networkConfig.TopUpRewardsGradientPoint.toFixed())\n          ))\n    );\n\n  const baseReward = rewardsPerEpochWithoutProtocolSustainability - topUpReward;\n  const validatorTotalStake = parseInt(denominateValue(activeStake));\n  const actualNumberOfNodes = Math.min(\n    Math.floor(validatorTotalStake / stakePerNode),\n    allActiveNodes\n  );\n  const validatorBaseStake = actualNumberOfNodes * stakePerNode;\n\n  const validatorTopUpStake =\n    ((validatorTotalStake - allNodes * stakePerNode) / allNodes) *\n    allActiveNodes;\n  const validatorTopUpReward =\n    networkTopUpStake > 0\n      ? (validatorTopUpStake / networkTopUpStake) * topUpReward\n      : 0;\n  const validatorBaseReward =\n    (validatorBaseStake / networkBaseStake) * baseReward;\n  const anualPercentageRate =\n    (epochsInYear * (validatorTopUpReward + validatorBaseReward)) /\n    validatorTotalStake;\n  const annuallPercentageRateTotal =\n    anualPercentageRate * 100 - anualPercentageRate * 100 * (serviceFee / 100);\n\n  return annuallPercentageRateTotal.toFixed(2).toString();\n};\n\nexport default calculateAnnualPercentage;\n","import React, { useCallback, useEffect, ReactNode } from 'react';\nimport {\n  faUsers,\n  faServer,\n  faLeaf,\n  faReceipt,\n  faArrowUp,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  Address,\n  Query,\n  decodeString\n} from '@multiversx/sdk-core';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport {\n  ApiNetworkProvider,\n  ProxyNetworkProvider\n} from '@multiversx/sdk-network-providers';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { useLocation } from 'react-router-dom';\n\nimport { MultiversX } from 'assets/MultiversX';\nimport { Action } from 'components/Action';\nimport { network, auctionContract } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\n\nimport { ChangeDelegationCap } from './components/ChangeDelegationCap';\nimport { ChangeServiceFee } from './components/ChangeServiceFee';\n\nimport calculateAnnualPercentage from './helpers/calculateAnnualPercentage';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: string[];\n  data: {\n    value?: string | null;\n    percentage?: string | undefined;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nexport const Cards = () => {\n  const {\n    totalActiveStake,\n    totalNetworkStake,\n    usersNumber,\n    nodesNumber,\n    networkStatus,\n    contractDetails,\n    networkConfig\n  } = useGlobalContext();\n  const { pending } = useGetActiveTransactionsStatus();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const getNetworkStatus = async (): Promise<void> => {\n    dispatch({\n      type: 'getNetworkStatus',\n      networkStatus: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const [status, balance] = await Promise.all([\n        new ProxyNetworkProvider(network.gatewayAddress).getNetworkStatus(),\n        axios.get(`${network.apiAddress}/accounts/${auctionContract}`)\n      ]);\n\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'loaded',\n          error: null,\n          data: {\n            ...status,\n            Balance: balance.data.balance\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getUsersNumber = async (): Promise<void> => {\n    dispatch({\n      type: 'getUsersNumber',\n      usersNumber: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.apiAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getNumUsers')\n      });\n\n      const data = await provider.queryContract(query);\n      const [userNumber] = data.getReturnDataParts();\n\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'loaded',\n          data: decodeUnsignedNumber(userNumber).toString(),\n          error: null\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getTotalNetworkStake = async (): Promise<void> => {\n    dispatch({\n      type: 'getTotalNetworkStake',\n      totalNetworkStake: {\n        data: null,\n        error: null,\n        status: 'loading'\n      }\n    });\n\n    try {\n      const query = new ApiNetworkProvider(network.apiAddress, {\n        timeout: 4000\n      });\n\n      const data = await query.getNetworkStakeStatistics();\n\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'loaded',\n          error: null,\n          data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getContractStakeData = useCallback(() => {\n    if (!totalNetworkStake.data || !totalActiveStake.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        totalActiveStake.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Stake Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalNetworkStake.data.TotalStaked.toFixed()),\n      nodes: denominated(totalActiveStake.data)\n    };\n\n    return {\n      value: `${formatted.nodes} ${network.egldLabel}`,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total stake`\n    };\n  }, [totalNetworkStake, totalActiveStake.data]);\n\n  const getNodesNumber = useCallback(() => {\n    if (!totalNetworkStake.data || !nodesNumber.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        nodesNumber.status === 'loading';\n\n      return {\n        value: loading ? '...' : 'Nodes Unknown',\n        percentage: loading ? '...% of total nodes' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: totalNetworkStake.data.TotalValidators.toString(),\n      nodes: nodesNumber.data\n        .filter((key: any) => decodeString(key) === 'staked')\n        .length.toString()\n    };\n\n    return {\n      value: formatted.nodes,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total nodes`\n    };\n  }, [totalNetworkStake, nodesNumber]);\n\n  const getDelegationCap = useCallback(() => {\n    if (!contractDetails.data || !totalActiveStake.data) {\n      const loading =\n        totalActiveStake.status === 'loading' ||\n        contractDetails.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Cap Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalActiveStake.data),\n      value: denominated(contractDetails.data.delegationCap)\n    };\n\n    return {\n      value: `${formatted.value} ${network.egldLabel}`,\n      percentage: `${getPercentage(formatted.stake, formatted.value)}% filled`\n    };\n  }, [totalActiveStake.data, contractDetails.data]);\n\n  const getAnnualPercentage = () => {\n    const dependencies = [\n      totalActiveStake,\n      nodesNumber,\n      networkStatus,\n      totalNetworkStake,\n      networkConfig,\n      contractDetails\n    ];\n\n    if (dependencies.some((dependency) => dependency.status === 'loading')) {\n      return '...%';\n    }\n\n    if (dependencies.every((dependency) => dependency.data)) {\n      const percentage = calculateAnnualPercentage({\n        activeStake: totalActiveStake.data,\n        blsKeys: nodesNumber.data,\n        networkStatus: networkStatus.data,\n        networkStake: totalNetworkStake.data,\n        networkConfig: networkConfig.data,\n        serviceFee: parseFloat(\n          contractDetails.data\n            ? contractDetails.data.serviceFee.replace('%', '')\n            : '0'\n        )\n      });\n\n      return `${percentage}%`;\n    }\n\n    return 'Unknown APR';\n  };\n\n  const cards: CardType[] = [\n    {\n      label: 'Contract Stake',\n      data: getContractStakeData(),\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <MultiversX />\n    },\n    {\n      label: 'Number of Users',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faUsers} />,\n      data: {\n        value:\n          usersNumber.status !== 'loaded'\n            ? usersNumber.error\n              ? 'Data Unavailable'\n              : '...'\n            : usersNumber.data\n      }\n    },\n    {\n      label: 'Number of Nodes',\n      icon: <FontAwesomeIcon icon={faServer} />,\n      colors: ['#36CA8C', '#2BA572'],\n      data: getNodesNumber()\n    },\n    {\n      label: 'Computed APR',\n      colors: ['#FBC34C', '#D49712'],\n      icon: <FontAwesomeIcon icon={faLeaf} />,\n      data: {\n        value: getAnnualPercentage(),\n        percentage: 'Including Service Fee'\n      }\n    },\n    {\n      label: 'Service Fee',\n      modal: <ChangeServiceFee />,\n      icon: <FontAwesomeIcon icon={faReceipt} />,\n      title: 'Change service fee',\n      colors: ['#F3BF89', '#B68350'],\n      data: {\n        value: contractDetails.data\n          ? contractDetails.data.serviceFee\n          : contractDetails.error\n          ? 'Service Fee Unknown'\n          : '...%'\n      }\n    },\n    {\n      label: 'Delegation Cap',\n      modal: <ChangeDelegationCap />,\n      description: `The delegation cap is the maximum amount of ${network.egldLabel} your agency can stake from delegators.`,\n      title: 'Delegation Cap',\n      icon: <FontAwesomeIcon icon={faArrowUp} />,\n      colors: ['#E48570', '#C25C45'],\n      data: getDelegationCap()\n    }\n  ];\n\n  const fetchNetworkStatus = () => {\n    if (!networkStatus.data) {\n      getNetworkStatus();\n    }\n  };\n\n  const fetchUsersNumber = () => {\n    if (!usersNumber.data) {\n      getUsersNumber();\n    }\n  };\n\n  const fetchTotalNetworkStake = () => {\n    if (!totalNetworkStake.data) {\n      getTotalNetworkStake();\n    }\n  };\n\n  useEffect(fetchUsersNumber, [usersNumber.data]);\n  useEffect(fetchNetworkStatus, [networkStatus.data]);\n  useEffect(fetchTotalNetworkStake, [totalNetworkStake.data]);\n\n  return (\n    <div className={`${styles.cards} cards`}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span>{card.label}</span>\n              <div\n                style={{ fill: interactive && !pending ? beta : 'white' }}\n                className={classNames(styles.icon, {\n                  [styles.fill]: interactive && !pending\n                })}\n              >\n                {interactive && !pending ? (\n                  <Action\n                    render={() => card.modal}\n                    title={card.title}\n                    description={card.description}\n                    trigger={\n                      <span\n                        className={classNames(styles.trigger, {\n                          [styles.disabled]: true\n                        })}\n                      >\n                        <FontAwesomeIcon icon={faCog} size='lg' />\n                      </span>\n                    }\n                  />\n                ) : (\n                  card.icon\n                )}\n              </div>\n            </div>\n\n            <div className={styles.value}>{card.data.value}</div>\n\n            {card.data.percentage && <span>{card.data.percentage}</span>}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  faExternalLinkAlt,\n  faCog,\n  faThLarge,\n  faEdit\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { Action } from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport { Identity } from './components/Identity';\n\nimport styles from './styles.module.scss';\n\nexport const Heading = () => {\n  const { contractDetails } = useGlobalContext();\n  const { pending } = useGetActiveTransactionsStatus();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isAdmin = location.pathname === '/admin';\n\n  return (\n    <div className={`${styles.heading} heading`}>\n      <div className={styles.meta}>\n        <div className={styles.label}>Contract Address</div>\n\n        <div className='d-flex align-items-center'>\n          <span className={styles.contract}>{network.delegationContract}</span>\n          <a\n            href={`${network.explorerAddress}/accounts/${network.delegationContract}`}\n            className={styles.icon}\n            rel='noreferrer'\n            target='_blank'\n          >\n            <FontAwesomeIcon icon={faExternalLinkAlt} />\n          </a>\n        </div>\n      </div>\n\n      {contractDetails.data && contractDetails.data.owner && (\n        <div className='d-flex align-items-center'>\n          <button\n            type='button'\n            onClick={() => navigate(isAdmin ? '/dashboard' : '/admin')}\n            className={styles.button}\n          >\n            <span className={styles.icon}>\n              <FontAwesomeIcon icon={isAdmin ? faThLarge : faCog} />\n            </span>\n\n            {isAdmin ? 'Dashboard' : 'Admin'}\n          </button>\n\n          {isAdmin && (\n            <Action\n              title='Agency Details'\n              disabled={pending}\n              description='Update or set your agency details in order to validate your identity.'\n              trigger={\n                <div\n                  className={classNames(styles.button, {\n                    [styles.disabled]: pending\n                  })}\n                >\n                  <span className={styles.icon}>\n                    <FontAwesomeIcon icon={faEdit} />\n                  </span>\n                  Identity\n                </div>\n              }\n              render={() => <Identity />}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { faRecycle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\n\nimport { Switch } from './components/Switch';\n\nimport styles from './styles.module.scss';\n\nexport interface ToggleType {\n  label: string;\n  name: string;\n  transaction: string;\n  color: string;\n}\n\nexport const Toggles = () => {\n  const toggles: ToggleType[] = [\n    {\n      label: 'Automatic Activation',\n      name: 'automaticActivation',\n      transaction: 'setAutomaticActivation',\n      color: '#2BA874'\n    },\n    {\n      label: 'Redelegation Cap',\n      name: 'redelegationCap',\n      transaction: 'setReDelegateCapActivation',\n      color: '#D9715B'\n    }\n  ];\n\n  return (\n    <div className={classNames(styles.toggles, 'toggles')}>\n      {toggles.map((toggle) => (\n        <div key={toggle.name} className={styles.toggle}>\n          <div className={styles.left}>\n            <div\n              className={styles.icon}\n              style={{ backgroundColor: toggle.color }}\n            >\n              <FontAwesomeIcon icon={faRecycle} />\n            </div>\n\n            <span className={styles.label}>{toggle.label}</span>\n          </div>\n\n          <div className={styles.right}>\n            <Switch {...toggle} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { useEffect } from 'react';\n\nimport {\n  Query,\n  ContractFunction,\n  Address,\n  decodeBigNumber,\n  decodeUnsignedNumber,\n  decodeString,\n  AddressValue\n} from '@multiversx/sdk-core';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\n\nimport { network, auctionContract } from 'config';\nimport { useDispatch } from 'context';\n\ninterface ContractDetailsType {\n  automaticActivation: string;\n  redelegationCap: string;\n  serviceFee: string;\n  delegationCap: string;\n  owner: boolean;\n  withDelegationCap: string;\n}\n\ninterface globalFetchesType {\n  [key: string]: any;\n  getContractDetails: {\n    key: string;\n    handler: () => Promise<ContractDetailsType | string>;\n  };\n  getNodesNumber: {\n    key: string;\n    handler: () => Promise<Buffer[] | string>;\n  };\n  getNodesStates: {\n    key: string;\n    handler: () => Promise<Buffer[] | string>;\n  };\n  getTotalActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getUserActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getNetworkConfig: {\n    key: string;\n    handler: () => Promise<any>;\n  };\n}\n\nconst useGlobalData = () => {\n  const { address } = useGetAccountInfo();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n\n  const dispatch = useDispatch();\n  const provider = new ProxyNetworkProvider(network.gatewayAddress);\n  const criticalFetches: globalFetchesType = {\n    getContractDetails: {\n      key: 'contractDetails',\n      handler: async (): Promise<ContractDetailsType | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getContractConfig')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          const ownerAddressIndex = 0;\n          const serviceFeeIndex = 1;\n          const delegationCapIndex = 2;\n          const automaticActivationIndex = 4;\n          const withDelegationCapIndex = 5;\n          const redelegationCapIndex = 7;\n\n          const ownerAddress = response[ownerAddressIndex];\n          const serviceFee = response[serviceFeeIndex];\n          const delegationCap = response[delegationCapIndex];\n          const activationStatus = response[automaticActivationIndex];\n          const withDelegationCap = response[withDelegationCapIndex];\n          const redelegationCap = response[redelegationCapIndex];\n\n          return {\n            withDelegationCap: String(withDelegationCap),\n            owner: new Address(address).hex() === ownerAddress.toString('hex'),\n            delegationCap: decodeBigNumber(delegationCap).toFixed(),\n            redelegationCap:\n              decodeString(redelegationCap) === 'true' ? 'ON' : 'OFF',\n            serviceFee:\n              (decodeUnsignedNumber(serviceFee) / 100).toString() + '%',\n            automaticActivation:\n              decodeString(activationStatus) === 'true' ? 'ON' : 'OFF'\n          };\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesNumber: {\n      key: 'nodesNumber',\n      handler: async (): Promise<Buffer[] | string> => {\n        try {\n          const query = new Query({\n            address: new Address(auctionContract),\n            func: new ContractFunction('getBlsKeysStatus'),\n            args: [new AddressValue(new Address(network.delegationContract))]\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesStates: {\n      key: 'nodesStates',\n      handler: async (): Promise<Buffer[] | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getAllNodeStates')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getTotalActiveStake: {\n      key: 'totalActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getTotalActiveStake')\n          });\n\n          const data = await provider.queryContract(query);\n          const [totalNodes] = data.getReturnDataParts();\n\n          return decodeBigNumber(totalNodes).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getUserActiveStake: {\n      key: 'userActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getUserActiveStake'),\n            args: [new AddressValue(new Address(address))]\n          });\n\n          const data = await provider.queryContract(query);\n          const [userStake] = data.getReturnDataParts();\n\n          if (!userStake) {\n            return '0';\n          }\n\n          return decodeBigNumber(userStake).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNetworkConfig: {\n      key: 'networkConfig',\n      handler: async (): Promise<any> => {\n        try {\n          return await provider.getNetworkConfig();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  };\n\n  const fetchCriticalData = (): void => {\n    const fetchData = async () => {\n      const keys = Object.keys(criticalFetches);\n\n      keys.forEach((key) => {\n        dispatch({\n          type: key,\n          [criticalFetches[key].key]: {\n            status: 'loading',\n            data: null,\n            error: null\n          }\n        });\n      });\n\n      const data = await Promise.allSettled(\n        keys.map((key: string) => criticalFetches[key].handler())\n      );\n\n      data.forEach((item: any, index: any) => {\n        dispatch({\n          type: keys[index],\n          [criticalFetches[keys[index]].key]: {\n            status: item.status === 'rejected' ? 'error' : 'loaded',\n            error: item.reason || null,\n            data: item.value || null\n          }\n        });\n      });\n    };\n\n    fetchData();\n  };\n\n  useEffect(fetchCriticalData, []);\n  useEffect(() => {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      fetchCriticalData();\n    }\n  }, [hasSuccessfulTransactions, successfulTransactionsArray.length]);\n};\n\nexport default useGlobalData;\n","import { parseAmount } from '@multiversx/sdk-dapp/utils/operations/parseAmount';\n\nimport BigNumber from 'bignumber.js';\nimport { string } from 'yup';\nimport { network, denomination } from 'config';\nimport { denominated } from 'helpers/denominate';\n\nconst undelegateValidator = (input: string) =>\n  string()\n    .required('Required')\n    .test('minimum', 'Value must be greater than zero.', (value = '0') =>\n      new BigNumber(parseAmount(value, denomination)).isGreaterThanOrEqualTo(1)\n    )\n    .test(\n      'remaining',\n      `Either undelegate the total amount or leave at least 1 ${network.egldLabel} staked.`,\n      (value = '0') => {\n        const requested = new BigNumber(parseAmount(value, denomination));\n        const minimum = new BigNumber(parseAmount('1', denomination));\n        const total = new BigNumber(input);\n\n        const oneLeft = total.minus(requested).isGreaterThanOrEqualTo(minimum);\n        const clearance = total.isEqualTo(value) || total.isEqualTo(requested);\n\n        return oneLeft || clearance;\n      }\n    )\n    .test(\n      'maximum',\n      `You need to set a value under ${denominated(input)} ${\n        network.egldLabel\n      }.`,\n      (value = '0') => {\n        const requested = new BigNumber(parseAmount(value, denomination));\n        const total = new BigNumber(input);\n        const maxed = total.isEqualTo(value);\n        const below = requested.isLessThanOrEqualTo(input);\n\n        return maxed || below;\n      }\n    );\n\nconst delegateValidator = (input: string, limit: string) =>\n  string()\n    .required('Required')\n    .test('minimum', 'Value must be greater than zero.', (value = '0') =>\n      new BigNumber(parseAmount(value, denomination)).isGreaterThanOrEqualTo(1)\n    )\n    .test(\n      'maximum',\n      `You need to set a value under ${denominated(input)} ${\n        network.egldLabel\n      }.`,\n      (value = '0') =>\n        new BigNumber(parseAmount(value, denomination)).isLessThanOrEqualTo(\n          input\n        )\n    )\n    .test(\n      'uncapable',\n      `Max delegation cap reached. That is the maximum amount you can delegate: ${denominated(\n        limit\n      )} ${network.egldLabel}`,\n      (value = '0') =>\n        new BigNumber(parseAmount(value, denomination)).isLessThanOrEqualTo(\n          limit\n        )\n    );\n\nexport { delegateValidator, undelegateValidator };\n","import { useEffect, useState } from 'react';\n\nimport {\n  Address,\n  AddressValue,\n  Query,\n  ContractFunction,\n  decodeBigNumber\n} from '@multiversx/sdk-core';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\nimport BigNumber from 'bignumber.js';\n\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nexport type ActionCallbackType = () => void;\nexport interface DelegationPayloadType {\n  amount: string;\n}\n\nconst useStakeData = () => {\n  const dispatch = useDispatch();\n  const [check, setCheck] = useState(false);\n\n  const { account, address } = useGetAccountInfo();\n  const { sendTransaction } = useTransaction();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n  const { contractDetails, userClaimableRewards, totalActiveStake } =\n    useGlobalContext();\n\n  const onDelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: data.amount,\n          type: 'delegate',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onUndelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'unDelegate',\n          args: nominateValToHex(data.amount.toString())\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onRedelegate =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'reDelegateRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onClaimRewards =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'claimRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const getStakingLimits = () => {\n    if (contractDetails.data && totalActiveStake.data) {\n      const balance = new BigNumber(account.balance);\n      const gasPrice = new BigNumber('12000000');\n      const gasLimit = new BigNumber('12000000');\n      const available = balance.minus(gasPrice.times(gasLimit));\n      const dustful = available.minus(new BigNumber(minDust)).toFixed();\n\n      if (contractDetails.data.withDelegationCap === 'true') {\n        const cap = contractDetails.data.delegationCap;\n        const stake = totalActiveStake.data;\n        const remainder = new BigNumber(cap).minus(new BigNumber(stake));\n        const maxed =\n          parseInt(getPercentage(denominated(stake), denominated(cap))) >= 100;\n\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available.toFixed(),\n            limit: dustful,\n            maxed\n          };\n        } else {\n          return {\n            balance: available.toFixed(),\n            limit: remainder.gt(0) ? remainder.toFixed() : '0',\n            maxed\n          };\n        }\n      } else {\n        return {\n          balance: available.toFixed(),\n          limit: dustful,\n          maxed: false\n        };\n      }\n    }\n\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n\n  const getUserClaimableRewards = async (): Promise<void> => {\n    dispatch({\n      type: 'getUserClaimableRewards',\n      userClaimableRewards: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getClaimableRewards'),\n        args: [new AddressValue(new Address(address))]\n      });\n\n      const data = await provider.queryContract(query);\n      const [claimableRewards] = data.getReturnDataParts();\n\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'loaded',\n          error: null,\n          data: claimableRewards\n            ? denominated(decodeBigNumber(claimableRewards).toFixed(), {\n                decimals: 4\n              })\n            : '0'\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchClaimableRewards = () => {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  const reFetchClaimableRewards = () => {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      getUserClaimableRewards();\n    }\n  };\n\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  useEffect(() => {\n    if (pending && !check) {\n      setCheck(true);\n\n      return () => {\n        setCheck(false);\n      };\n    }\n  }, [pending]);\n\n  return {\n    onDelegate,\n    onUndelegate,\n    onRedelegate,\n    onClaimRewards,\n    getStakingLimits\n  };\n};\n\nexport default useStakeData;\n","import React, { MouseEvent } from 'react';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\n\nimport { Action, Submit } from 'components/Action';\nimport { delegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData, { ActionCallbackType } from 'components/Stake/hooks';\nimport { network } from 'config';\n\nimport { denominated } from 'helpers/denominate';\n\nimport styles from './styles.module.scss';\n\nexport const Delegate = () => {\n  const { account } = useGetAccountInfo();\n  const { onDelegate, getStakingLimits } = useStakeData();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { limit, balance, maxed } = getStakingLimits();\n\n  return (\n    <div className={`${styles.wrapper} delegate-wrapper`}>\n      <Action\n        title='Delegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to delegate.`}\n        disabled={pending}\n        trigger={\n          <div\n            className={classNames(styles.trigger, {\n              [styles.disabled]: pending\n            })}\n          >\n            Delegate\n          </div>\n        }\n        render={(onClose: ActionCallbackType) => (\n          <div className={styles.delegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: delegateValidator(balance, limit)\n              })}\n              onSubmit={onDelegate(onClose)}\n              initialValues={{\n                amount: '1'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setFieldValue(\n                    'amount',\n                    denominated(limit, { addCommas: false })\n                  );\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={1}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          disabled={maxed}\n                          className={classNames(styles.input, {\n                            [styles.invalid]: errors.amount && touched.amount\n                          })}\n                        />\n\n                        <a\n                          href='/#'\n                          onClick={onMax}\n                          className={classNames(styles.max, {\n                            [styles.disabled]: maxed\n                          })}\n                        >\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {denominated(account.balance)}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {((errors.amount && touched.amount) || maxed) && (\n                        <span className={styles.error}>\n                          {maxed\n                            ? 'Max delegation cap reached, staking unavailable.'\n                            : errors.amount}\n                        </span>\n                      )}\n                    </div>\n\n                    <Submit\n                      save='Continue'\n                      onClose={() => {\n                        setFieldValue('amount', '1');\n                      }}\n                    />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n","import React, { ChangeEvent, MouseEvent, useState } from 'react';\n\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport { Action, Submit } from 'components/Action';\nimport { undelegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData, { ActionCallbackType } from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport { denominated } from 'helpers/denominate';\n\nimport styles from './styles.module.scss';\n\nexport const Undelegate = () => {\n  const [maxed, setMaxed] = useState(false);\n\n  const { userActiveStake } = useGlobalContext();\n  const { onUndelegate } = useStakeData();\n  const { pending } = useGetActiveTransactionsStatus();\n\n  return (\n    <div className={classNames(styles.wrapper, 'undelegate-wrapper')}>\n      <Action\n        title='Undelegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to undelegate.`}\n        disabled={pending}\n        trigger={\n          <div\n            className={classNames(styles.trigger, {\n              [styles.disabled]: pending\n            })}\n          >\n            Undelegate\n          </div>\n        }\n        render={(callback: ActionCallbackType) => (\n          <div className={styles.undelegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: undelegateValidator(userActiveStake.data || '')\n              })}\n              onSubmit={onUndelegate(callback)}\n              initialValues={{\n                amount: '0'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const amount = denominated(userActiveStake.data || '', {\n                  addCommas: false,\n                  showLastNonZeroDecimal: true\n                });\n\n                const onChange = (\n                  event: ChangeEvent<HTMLInputElement>\n                ): void => {\n                  handleChange(event);\n                  setMaxed(false);\n                };\n\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setMaxed(true);\n                  setFieldValue('amount', amount);\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={0}\n                          value={maxed ? amount : values.amount}\n                          onBlur={handleBlur}\n                          onChange={onChange}\n                          className={classNames(styles.input, {\n                            [styles.invalid]: errors.amount && touched.amount\n                          })}\n                        />\n\n                        <a href='/#' onClick={onMax} className={styles.max}>\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span>{' '}\n                        {denominated(userActiveStake.data || '')}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {errors.amount && touched.amount && (\n                        <span className={styles.error}>{errors.amount}</span>\n                      )}\n                    </div>\n\n                    <Submit\n                      save='Continue'\n                      onClose={() => {\n                        setMaxed(false);\n                        setFieldValue('amount', '0');\n                      }}\n                    />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n","import React, { ReactNode, MouseEvent } from 'react';\nimport { faLock, faGift } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\n\nimport { MultiversX } from 'assets/MultiversX';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\n\nimport { Delegate } from './components/Delegate';\nimport { Undelegate } from './components/Undelegate';\n\nimport useStakeData from './hooks';\n\nimport styles from './styles.module.scss';\n\ninterface ActionType {\n  label: string;\n  render?: ReactNode;\n  transaction?: (value: MouseEvent) => Promise<void>;\n}\n\ninterface PanelType {\n  subicon: ReactNode;\n  color: string;\n  title: string;\n  value: string;\n  disabled: boolean;\n  actions: ActionType[];\n}\n\nexport const Stake = () => {\n  const { pending } = useGetActiveTransactionsStatus();\n  const { userActiveStake, userClaimableRewards } = useGlobalContext();\n  const { onRedelegate, onClaimRewards } = useStakeData();\n  const { isLoading, isEmpty, isError } = {\n    isEmpty: userActiveStake.data === '0' && userClaimableRewards.data === '0',\n    isLoading:\n      userActiveStake.status === 'loading' ||\n      userClaimableRewards.status === 'loading',\n    isError:\n      userActiveStake.status === 'error' ||\n      userClaimableRewards.status === 'error'\n  };\n\n  const panels: PanelType[] = [\n    {\n      subicon: <FontAwesomeIcon icon={faLock} />,\n      color: '#2044F5',\n      title: 'Active Delegation',\n      value: denominated(userActiveStake.data || '...', { addCommas: false }),\n      disabled: false,\n      actions: [\n        {\n          render: <Undelegate />,\n          label: 'Undelegate'\n        },\n        {\n          render: <Delegate />,\n          label: 'Delegate'\n        }\n      ]\n    },\n    {\n      subicon: <FontAwesomeIcon icon={faGift} />,\n      color: '#27C180',\n      title: 'Claimable Rewards',\n      value: `+ ${userClaimableRewards.data || '...'}`,\n      disabled: !userClaimableRewards.data || userClaimableRewards.data === '0',\n      actions: [\n        {\n          transaction: onClaimRewards(() => false),\n          label: 'Claim Now'\n        },\n        {\n          transaction: onRedelegate(() => false),\n          label: 'Redelegate'\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div\n      className={classNames(\n        styles.stake,\n        { [styles.empty]: isLoading || isError || isEmpty },\n        'stake'\n      )}\n    >\n      {isLoading || isError || isEmpty ? (\n        <div className={styles.wrapper}>\n          <strong className={styles.heading}>\n            Welcome to Delegation Dashboard!\n          </strong>\n\n          <div className={styles.logo}>\n            <MultiversX />\n\n            <div style={{ background: '#2044F5' }} className={styles.subicon}>\n              <FontAwesomeIcon icon={faLock} />\n            </div>\n          </div>\n\n          <div className={styles.message}>\n            {isLoading\n              ? 'Retrieving staking data...'\n              : isError\n              ? 'There was an error trying to retrieve staking data.'\n              : `Currently you don't have any ${network.egldLabel} staked.`}\n          </div>\n\n          <Delegate />\n        </div>\n      ) : (\n        panels.map((panel, index) => (\n          <div key={panel.title} className={styles.panel}>\n            <div className={styles.icon}>\n              <MultiversX />\n\n              {index > 0 &&\n                Array.from({ length: 4 }).map((item, iteratee) => (\n                  <strong\n                    key={`plus-${iteratee}`}\n                    className={classNames(\n                      styles.plus,\n                      styles[`plus-${iteratee + 1}`]\n                    )}\n                  >\n                    +\n                  </strong>\n                ))}\n\n              <div\n                style={{ background: panel.color }}\n                className={styles.subicon}\n              >\n                {panel.subicon}\n              </div>\n            </div>\n\n            <div className={styles.title}>{panel.title}</div>\n\n            <strong className={styles.value}>\n              {panel.value} {network.egldLabel}\n            </strong>\n\n            <div className={styles.actions}>\n              {panel.actions.map((action, iteratee) =>\n                action.render ? (\n                  <div key={action.label}>{action.render}</div>\n                ) : (\n                  <button\n                    key={action.label}\n                    type='button'\n                    style={{ background: iteratee ? panel.color : '#303234' }}\n                    onClick={action.transaction}\n                    className={classNames(styles.action, {\n                      [styles.disabled]: panel.disabled || pending\n                    })}\n                  >\n                    {action.label}\n                  </button>\n                )\n              )}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport { MultiversX } from 'assets/MultiversX';\nimport { network } from 'config';\nimport { UndelegateStakeListType } from 'context/state';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface FormattersType {\n  [key: string]: any;\n  d: (string | number)[];\n  h: (string | number)[];\n  m: (string | number)[];\n  s: (string | number)[];\n}\n\nexport const Withdrawal = (props: UndelegateStakeListType) => {\n  const { value, timeLeft } = props;\n  const { pending } = useGetActiveTransactionsStatus();\n  const { sendTransaction } = useTransaction();\n\n  const [counter, setCounter] = useState<number>(timeLeft - moment().unix());\n  const [fiat, setFiat] = useState('');\n\n  const getTimeLeft = (): string => {\n    const duration = moment.duration(counter, 'seconds');\n    const formatters: FormattersType = {\n      d: [duration.asDays(), Math.floor(duration.asDays())],\n      h: [duration.asHours(), 'H'],\n      m: [duration.asMinutes(), 'm'],\n      s: [duration.asSeconds(), 's']\n    };\n\n    const format = Object.keys(formatters).reduce((total, key) => {\n      const [time, label] = formatters[key];\n\n      if (Math.floor(time) > 0) {\n        return total === ''\n          ? `${label}[${key}]`\n          : `${total} : ${label}[${key}]`;\n      }\n\n      return total;\n    }, '');\n\n    return moment\n      .utc(moment.duration(counter, 'seconds').asMilliseconds())\n      .format(format);\n  };\n\n  const onWithdraw = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: '',\n        type: 'withdraw',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchFiat = () => {\n    const source = axios.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const { data } = await axios.get(`${network.apiAddress}/economics`, {\n          cancelToken: source.token\n        });\n\n        const amount = parseFloat(value.replace(',', '')) * data.price;\n\n        setFiat(Number(amount.toFixed(2)).toLocaleString());\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          return;\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      setFiat('');\n      source.cancel();\n    };\n  };\n\n  const handleCounter = () => {\n    const interval = setInterval(() => setCounter((timer) => timer - 1), 1000);\n\n    return () => {\n      clearInterval(interval);\n      setCounter(timeLeft - moment().unix());\n    };\n  };\n\n  useEffect(handleCounter, []);\n  useEffect(fetchFiat, []);\n\n  return (\n    <div className={`${styles.withdrawal} withdrawal`}>\n      <div className={styles.left}>\n        <span className={styles.icon}>\n          <MultiversX />\n        </span>\n\n        <div className={styles.data}>\n          <span className={styles.value}>\n            {value} {network.egldLabel}\n          </span>\n\n          <span className={styles.amount}>${fiat}</span>\n        </div>\n      </div>\n      <div className={styles.right}>\n        {counter > 0 && (\n          <div className={styles.time}>\n            <span className={styles.date}>{getTimeLeft()}</span>\n            <span className={styles.label}>Wait Time Left</span>\n          </div>\n        )}\n\n        <button\n          onClick={onWithdraw}\n          className={classNames(styles.withdraw, {\n            [styles.disabled]: counter > 0 || pending\n          })}\n        >\n          <FontAwesomeIcon icon={faMinus} /> <span>Withdraw</span>\n        </button>\n      </div>\n\n      {counter > 0 && (\n        <div className={classNames(styles.time, styles.mobile)}>\n          <span className={styles.date}>{getTimeLeft()}</span>\n          <span className={styles.label}>Wait Time Left</span>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  AddressValue,\n  Address,\n  Query,\n  decodeString,\n  decodeBigNumber\n} from '@multiversx/sdk-core';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\n\nimport moment from 'moment';\nimport { network, decimals, denomination } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { UndelegateStakeListType } from 'context/state';\nimport denominate from 'helpers/denominate';\n\nimport { Withdrawal } from './components/Withdrawal';\nimport styles from './styles.module.scss';\n\nexport const Withdrawals = () => {\n  const dispatch = useDispatch();\n\n  const { account } = useGetAccountInfo();\n  const { undelegatedStakeList } = useGlobalContext();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n\n  const getUndelegatedStakeList = async (): Promise<void> => {\n    dispatch({\n      type: 'getUndelegatedStakeList',\n      undelegatedStakeList: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getUserUnDelegatedList'),\n        args: [new AddressValue(new Address(account.address))]\n      });\n\n      const [data, config, status] = await Promise.all([\n        provider.queryContract(query),\n        provider.getNetworkConfig(),\n        provider.getNetworkStatus()\n      ]);\n\n      const payload = data\n        .getReturnDataParts()\n        .reduce((total: any, item, index, array) => {\n          if (index % 2 !== 0) {\n            return total;\n          } else {\n            const next: Buffer = array[index + 1];\n            const getTime = (): number => {\n              const epochsChangesRemaining = decodeUnsignedNumber(next);\n              const roundsRemainingInEpoch =\n                config.RoundsPerEpoch - status.RoundsPassedInCurrentEpoch;\n              const roundEpochComplete =\n                epochsChangesRemaining > 1\n                  ? (epochsChangesRemaining - 1) * config.RoundsPerEpoch\n                  : 0;\n\n              return (\n                moment().unix() +\n                ((roundsRemainingInEpoch + roundEpochComplete) *\n                  config.RoundDuration) /\n                  1000\n              );\n            };\n\n            const current = {\n              timeLeft: decodeString(next) === '' ? 0 : getTime(),\n              value: denominate({\n                input: decodeBigNumber(item).toFixed(),\n                decimals,\n                denomination\n              })\n            };\n\n            const exists = total.find(\n              (withdrawal: UndelegateStakeListType) =>\n                withdrawal.timeLeft === withdrawal.timeLeft\n            );\n\n            const value = exists\n              ? (parseInt(exists.value) + parseInt(current.value)).toFixed()\n              : 0;\n\n            if (exists && current.timeLeft === exists.timeLeft) {\n              return [\n                ...(total.length > 1 ? total : []),\n                {\n                  ...exists,\n                  value\n                }\n              ];\n            } else {\n              return [...total, current];\n            }\n          }\n        }, []);\n\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'loaded',\n          error: null,\n          data: payload.sort(\n            (alpha: UndelegateStakeListType, beta: UndelegateStakeListType) =>\n              alpha.timeLeft - beta.timeLeft\n          )\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchUndelegatedStakeList = () => {\n    if (!undelegatedStakeList.data) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  const refetchUndelegatedStakeList = () => {\n    if (\n      hasSuccessfulTransactions &&\n      undelegatedStakeList.data &&\n      successfulTransactionsArray.length > 0\n    ) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  useEffect(fetchUndelegatedStakeList, [undelegatedStakeList.data]);\n  useEffect(refetchUndelegatedStakeList, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  if (!undelegatedStakeList.data || undelegatedStakeList.data.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={`${styles.withdrawals} withdrawals`}>\n      <div className={styles.heading}>\n        <span className={styles.title}>Pending Withdrawals</span>\n      </div>\n\n      <div className={styles.body}>\n        {undelegatedStakeList.data.map(\n          (withdrawal: UndelegateStakeListType) => (\n            <Withdrawal key={withdrawal.timeLeft} {...withdrawal} />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n","import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport { Admin } from './pages/Admin';\nimport { Dashboard } from './pages/Dashboard';\nimport { Home } from './pages/Home';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  admin: '/admin'\n};\n\nconst routes: RouteType[] = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.admin,\n    title: 'Admin',\n    component: Admin\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} • MultiversX ${dAppName}`\n    : `MultiversX ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n","import { useEffect } from 'react';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Home = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    navigate(Boolean(address) ? '/dashboard' : '/unlock');\n  };\n\n  useEffect(handleRedirect, [address]);\n\n  return null;\n};\n","import React, { useEffect, useState } from 'react';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Cards } from 'components/Cards';\nimport { Heading } from 'components/Heading';\nimport { Stake } from 'components/Stake';\nimport { Withdrawals } from 'components/Withdrawals';\n\nimport useGlobalData from '../../hooks/useGlobalData';\n\nimport styles from './styles.module.scss';\n\nexport const Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.dashboard}>\n      <Heading />\n      <Cards />\n      <Stake />\n      <Withdrawals />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Cards } from 'components/Cards';\nimport { Heading } from 'components/Heading';\nimport { Nodes } from 'components/Nodes';\nimport { Toggles } from 'components/Toggles';\n\nimport { useGlobalContext } from 'context';\n\nimport useGlobalData from '../../hooks/useGlobalData';\nimport styles from './styles.module.scss';\n\nexport const Admin = () => {\n  const { address } = useGetAccountInfo();\n  const { contractDetails } = useGlobalContext();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.admin}>\n      <Heading />\n      <Cards />\n      <Toggles />\n      <Nodes />\n    </div>\n  );\n};\n","import React, { ReactNode } from 'react';\n\nimport { faWallet, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { logout } from '@multiversx/sdk-dapp/utils/logout';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { MultiversX } from 'assets/MultiversX';\nimport { network } from 'config';\nimport { denominated } from 'helpers/denominate';\n\nimport styles from './styles.module.scss';\n\ninterface ButtonsType {\n  icon: ReactNode;\n  label: string;\n  onClick?: () => void;\n  copy?: boolean;\n}\n\nexport const Navbar = () => {\n  const { address, account } = useGetAccountInfo();\n  const buttons: ButtonsType[] = [\n    {\n      icon: <MultiversX />,\n      label: `${denominated(account.balance)} ${network.egldLabel}`\n    },\n    {\n      icon: <FontAwesomeIcon icon={faWallet} size='lg' />,\n      label: address,\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout(`${window.location.origin}/unlock`)\n    }\n  ];\n\n  return (\n    <nav className={`${styles.nav} delegation-nav`}>\n      <Link to='/dashboard' className={styles.heading}>\n        <span className={styles.logo}>\n          <MultiversX />\n        </span>\n\n        <span className={styles.title}>Delegation Dashboard</span>\n      </Link>\n\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            onClick={button.onClick}\n            className={classNames(styles.button, {\n              [styles.clickable]: Boolean(button.onClick)\n            })}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { AuthenticatedRoutesWrapper } from '@multiversx/sdk-dapp/wrappers';\n\nimport { useLocation } from 'react-router-dom';\nimport routes, { routeNames } from 'routes';\n\nimport { Navbar } from './components/Navbar';\n\nexport const Layout = ({ children }: { children: ReactNode }) => {\n  const { search } = useLocation();\n  const { address } = useGetAccountInfo();\n\n  return (\n    <div className='layout d-flex flex-column flex-fill wrapper'>\n      {Boolean(address) && <Navbar />}\n\n      <main className='d-flex flex-column flex-grow-1'>\n        <AuthenticatedRoutesWrapper\n          routes={routes}\n          unlockRoute={`${routeNames.unlock}${search}`}\n        >\n          {children}\n        </AuthenticatedRoutesWrapper>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation } from 'react-router-dom';\n\nexport const PageNotFound = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <div className='d-flex flex-fill align-items-center container'>\n      <div className='row w-100'>\n        <div className='col-12 col-md-8 col-lg-5 mx-auto'>\n          <div className='card shadow-sm rounded p-4 border-0'>\n            <div className='card-body text-center d-flex flex-column justify-content-center'>\n              <div className='dapp-icon icon-medium'>\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className='mx-auto text-muted fa-3x mb-2'\n                />\n              </div>\n              <span className='h4 empty-heading mt-3'>Page not found</span>\n              <span className='empty-details'>{pathname}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const Extension = () => (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    height='25'\n    viewBox='0 0 24 21'\n    className='app-icon'\n  >\n    <defs></defs>\n    <g transform='translate(11024 -18800.5)'>\n      <path\n        className='cls-extension-defi-wallet-1'\n        d='M21.619-15H3.75A.75.75,0,0,1,3-15.75a.75.75,0,0,1,.75-.75h18a.75.75,0,0,0,.75-.75,2.25,2.25,0,0,0-2.25-2.25H3a3,3,0,0,0-3,3v15a3,3,0,0,0,3,3H21.619A2.321,2.321,0,0,0,24-.75v-12A2.321,2.321,0,0,0,21.619-15Z'\n        transform='translate(-11024 18820)'\n        fill='#ffffff'\n      ></path>\n      <g transform='translate(-11017.25 18810) scale(0.3)'>\n        <path d='M17.8956 12.0018L32.0458 4.52327L29.6668 0L16.7098 5.18441C16.3761 5.31809 16.0062 5.31809 15.6726 5.18441L2.71192 0L0.333008 4.52327L14.4832 12.0018L0.333008 19.4767L2.71192 24L15.669 18.8156C16.0027 18.6819 16.3725 18.6819 16.7061 18.8156L29.6632 24L32.0421 19.4767L17.8919 11.9982L17.8956 12.0018Z'></path>\n      </g>\n      <circle\n        className='cls-extension-defi-wallet-2'\n        cx='1.314'\n        cy='1.314'\n        r='1.314'\n        transform='translate(-11004.771 18812.314)'\n      ></circle>\n    </g>\n  </svg>\n);\n","import React from 'react';\n\nexport const Ledger = () => (\n  <svg\n    height='30'\n    viewBox='0 0 42 42'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    className='wallet-icon body'\n  >\n    <path\n      d='M34.4876 0.0413742H15.7717V25.323H41.0412V6.58293C41.0412 2.9933 38.091 0.0413742 34.5081 0.0413742C34.5019 0.0413742 34.4937 0.0413742 34.4876 0.0413742V0.0413742Z'\n      fill='#ffffff'\n    ></path>\n    <path\n      d='M9.93712 0.0413742H6.71166C3.12874 0.0413742 0.178574 2.99536 0.178574 6.58293V9.81256H9.93712V0.0413742Z'\n      fill='#ffffff'\n    ></path>\n    <path\n      d='M0.178574 15.6547H9.93712V25.4259H0.178574V15.6547Z'\n      fill='#ffffff'\n    ></path>\n    <path\n      d='M31.3648 40.9569H34.5903C38.1753 40.9569 41.1234 38.0029 41.1234 34.4153C41.1234 34.4092 41.1234 34.401 41.1234 34.3948V31.268H31.3648V40.9569Z'\n      fill='#ffffff'\n    ></path>\n    <path\n      d='M15.7717 31.268H25.5302V41.0392H15.7717V31.268Z'\n      fill='#ffffff'\n    ></path>\n    <path\n      d='M0.178574 31.268V34.4976C0.178574 38.0852 3.12874 41.0392 6.71166 41.0392H9.93712V31.268H0.178574Z'\n      fill='#ffffff'\n    ></path>\n  </svg>\n);\n","import React from 'react';\n\nexport const Wallet = () => (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    width='27'\n    height='24'\n    viewBox='0 0 27 24'\n    className='wallet-icon body'\n  >\n    <defs></defs>\n    <g transform='translate(11028 -19030)'>\n      <path\n        fill='#fff'\n        d='M24.75-21H2.25A2.251,2.251,0,0,0,0-18.75v13.5A2.251,2.251,0,0,0,2.25-3h22.5A2.251,2.251,0,0,0,27-5.25v-13.5A2.251,2.251,0,0,0,24.75-21ZM22.5,1.875A1.122,1.122,0,0,0,21.375.75H16.753l-.872-2.616a.56.56,0,0,0-.534-.384H11.658a.56.56,0,0,0-.534.384L10.252.75H5.625a1.125,1.125,0,0,0,0,2.25h15.75A1.122,1.122,0,0,0,22.5,1.875Z'\n        transform='translate(-11028 19051)'\n      ></path>\n      <g transform='translate(-11021 19034) scale(0.4)'>\n        <path d='M17.8956 12.0018L32.0458 4.52327L29.6668 0L16.7098 5.18441C16.3761 5.31809 16.0062 5.31809 15.6726 5.18441L2.71192 0L0.333008 4.52327L14.4832 12.0018L0.333008 19.4767L2.71192 24L15.669 18.8156C16.0027 18.6819 16.3725 18.6819 16.7061 18.8156L29.6632 24L32.0421 19.4767L17.8919 11.9982L17.8956 12.0018Z'></path>\n      </g>\n    </g>\n  </svg>\n);\n","import React from 'react';\n\nexport const xPortal = () => (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    height='30'\n    viewBox='0 0 17.5 28'\n    className='app-icon xportal-app'\n  >\n    <defs></defs>\n    <g transform='translate(11007 -18884.001)'>\n      <path\n        className='cls-mobile-wallet-1'\n        fill='#fff'\n        d='M14.875-21H2.625A2.626,2.626,0,0,0,0-18.375V4.375A2.626,2.626,0,0,0,2.625,7h12.25A2.626,2.626,0,0,0,17.5,4.375v-22.75A2.626,2.626,0,0,0,14.875-21Z'\n        transform='translate(-11007 18905)'\n      ></path>\n      <g transform='translate(-11003 18892.168) scale(0.285)'>\n        <path d='M17.8956 12.0018L32.0458 4.52327L29.6668 0L16.7098 5.18441C16.3761 5.31809 16.0062 5.31809 15.6726 5.18441L2.71192 0L0.333008 4.52327L14.4832 12.0018L0.333008 19.4767L2.71192 24L15.669 18.8156C16.0027 18.6819 16.3725 18.6819 16.7061 18.8156L29.6632 24L32.0421 19.4767L17.8919 11.9982L17.8956 12.0018Z'></path>\n      </g>\n      <circle\n        className='cls-mobile-wallet-2'\n        cx='1.5'\n        cy='1.5'\n        r='1.5'\n        transform='translate(-10999.75 18906.498)'\n      ></circle>\n    </g>\n  </svg>\n);\n","import React, { useEffect } from 'react';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { ExtensionLoginButton } from '@multiversx/sdk-dapp/UI/extension/ExtensionLoginButton';\nimport { LedgerLoginButton } from '@multiversx/sdk-dapp/UI/ledger/LedgerLoginButton';\nimport { WalletConnectLoginButton } from '@multiversx/sdk-dapp/UI/walletConnect/WalletConnectLoginButton';\nimport { WebWalletLoginButton } from '@multiversx/sdk-dapp/UI/webWallet/WebWalletLoginButton';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Extension } from 'assets/Extension';\nimport { Ledger } from 'assets/Ledger';\nimport { MultiversX } from 'assets/MultiversX';\nimport { Wallet } from 'assets/Wallet';\nimport { xPortal } from 'assets/xPortal';\n\nimport { network } from 'config';\n\nimport styles from './styles.module.scss';\n\nimport type { ConnectionType } from './types';\n\nexport const Unlock = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: ConnectionType[] = [\n    {\n      title: 'Desktop',\n      name: 'MultiversX Web Wallet',\n      background: '#000000',\n      icon: Wallet,\n      component: WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: LedgerLoginButton,\n      innerLedgerComponentsClasses: {\n        ledgerScamPhishingAlertClassName: styles.phishing,\n        ledgerProgressBarClassNames: {},\n        ledgerConnectClassNames: {\n          ledgerModalTitleClassName: styles.title,\n          ledgerModalSubtitleClassName: styles.subtitle,\n          ledgerModalIconClassName: styles.icon\n        },\n        confirmAddressClassNames: {\n          ledgerModalTitleClassName: styles.title,\n          ledgerModalConfirmDescriptionClassName: styles.description,\n          ledgerModalConfirmFooterClassName: styles.footer\n        },\n        addressTableClassNames: {\n          ledgerModalTitleClassName: styles.title,\n          ledgerModalSubtitleClassName: styles.subtitle,\n          ledgerModalTableHeadClassName: styles.head,\n          ledgerModalTableNavigationButtonClassName: styles.navigation,\n          ledgerModalTableSelectedItemClassName: styles.selected\n        },\n        ledgerLoadingClassNames: {\n          ledgerModalTitleClassName: styles.title,\n          ledgerModalSubtitleClassName: styles.subtitle\n        }\n      }\n    },\n    {\n      title: 'Mobile',\n      name: 'xPortal Mobile Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: xPortal,\n      isWalletConnectV2: true,\n      component: WalletConnectLoginButton,\n      innerWalletConnectComponentsClasses: {\n        containerContentClassName: styles.content,\n        containerTitleClassName: styles.title,\n        containerButtonClassName: styles.button,\n        containerSubtitleClassName: styles.subtitle,\n        containerScamPhishingAlertClassName: styles.phishing,\n        walletConnectPairingListClassNames: {\n          leadClassName: styles.lead,\n          buttonClassName: styles.pairing\n        }\n      }\n    },\n    {\n      title: 'Browser',\n      name: 'MultiversX DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/dashboard');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div className={styles.unlock}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          <MultiversX />\n        </div>\n\n        <strong className={styles.heading}>\n          MultiversX Delegation Dashboard\n        </strong>\n\n        <div className={styles.description}>\n          {`Delegate MultiversX (${network.egldLabel}) and earn up to 25% APY!`}\n        </div>\n\n        <div className={styles.connects}>\n          {connects.map((connect) => (\n            <connect.component\n              key={connect.name}\n              callbackRoute='/dashboard'\n              logoutRoute='/unlock'\n              {...connect}\n            >\n              <span className={styles.connect}>\n                <span className={styles.title}>{connect.title}</span>\n\n                <span\n                  className={styles.icon}\n                  style={{ background: connect.background }}\n                >\n                  <connect.icon />\n                </span>\n\n                <span className={styles.name}>{connect.name}</span>\n              </span>\n            </connect.component>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NotificationModal } from '@multiversx/sdk-dapp/UI/NotificationModal';\nimport { SignTransactionsModals } from '@multiversx/sdk-dapp/UI/SignTransactionsModals';\nimport { TransactionsToastList } from '@multiversx/sdk-dapp/UI/TransactionsToastList';\nimport { DappProvider } from '@multiversx/sdk-dapp/wrappers/DappProvider';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\n\nimport { Layout } from 'components/Layout';\nimport { network } from 'config';\nimport { ContextProvider } from 'context';\nimport { PageNotFound } from 'pages/PageNotFound';\nimport { Unlock } from 'pages/Unlock';\nimport routes, { routeNames } from 'routes';\n\nexport const App = () => (\n  <BrowserRouter>\n    <DappProvider\n      environment={network.id}\n      customNetworkConfig={{\n        name: 'customConfig',\n        apiTimeout: 6000,\n        walletConnectV2ProjectId: '9b1a9564f91cb659ffe21b73d5c4e2d8'\n      }}\n    >\n      <ContextProvider>\n        <Layout>\n          <TransactionsToastList />\n          <SignTransactionsModals />\n          <NotificationModal />\n\n          <Routes>\n            <Route path={routeNames.unlock} element={<Unlock />} />\n\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n\n            <Route element={PageNotFound} />\n          </Routes>\n        </Layout>\n      </ContextProvider>\n    </DappProvider>\n  </BrowserRouter>\n);\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { App } from './App';\nimport './index.css';\nimport './assets/sass/theme.scss';\n\n(() => {\n  const container = document.getElementById('root');\n  const root = createRoot(container as HTMLElement);\n\n  root.render(<App />);\n})();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stake\":\"styles_stake__NpkRn\",\"empty\":\"styles_empty__2bkta\",\"wrapper\":\"styles_wrapper__1Duqv\",\"heading\":\"styles_heading__ONuWh\",\"message\":\"styles_message__1mO1i\",\"panel\":\"styles_panel__3-Q2e\",\"icon\":\"styles_icon__1hp1M\",\"logo\":\"styles_logo__z6y9p\",\"plus\":\"styles_plus__3atSv\",\"plus-1\":\"styles_plus-1__3yqdW\",\"plus-2\":\"styles_plus-2__25kXB\",\"plus-3\":\"styles_plus-3__3T7tV\",\"plus-4\":\"styles_plus-4__1-Ism\",\"subicon\":\"styles_subicon__GcpVl\",\"title\":\"styles_title__1oKF0\",\"value\":\"styles_value__3urZV\",\"actions\":\"styles_actions__1Ak2R\",\"action\":\"styles_action__nHX0S\",\"disabled\":\"styles_disabled__1x5Nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withdrawal\":\"styles_withdrawal__1bLTy\",\"left\":\"styles_left__1nVZD\",\"icon\":\"styles_icon__A4Y1l\",\"data\":\"styles_data__p7uVo\",\"value\":\"styles_value__100HD\",\"amount\":\"styles_amount__1hrxL\",\"right\":\"styles_right__1v1kY\",\"withdraw\":\"styles_withdraw__3RpiN\",\"disabled\":\"styles_disabled__3_vhf\",\"time\":\"styles_time__15tps\",\"mobile\":\"styles_mobile__1rDaF\",\"date\":\"styles_date__3wIDK\",\"label\":\"styles_label__17Yps\"};","export interface DelegationContractType {\n  name: string;\n  gasLimit: number;\n  data: string;\n}\n\ninterface NetworkType {\n  id: 'devnet' | 'testnet' | 'mainnet';\n  name: string;\n  egldLabel: string;\n  walletAddress: string;\n  gatewayAddress: string;\n  explorerAddress: string;\n  delegationContract: string;\n  apiAddress: string;\n}\n\nexport const minDust = '5000000000000000'; // 0.005 EGLD\nexport const dAppName = 'Dapp';\nexport const decimals = 2;\nexport const denomination = 18;\nexport const genesisTokenSupply = 20000000;\nexport const feesInEpoch = 0;\nexport const stakePerNode = 2500;\nexport const protocolSustainabilityRewards = 0.1;\nexport const yearSettings = [\n  { year: 1, maximumInflation: 0.1084513 },\n  { year: 2, maximumInflation: 0.09703538 },\n  { year: 3, maximumInflation: 0.08561945 },\n  { year: 4, maximumInflation: 0.07420352 },\n  { year: 5, maximumInflation: 0.0627876 },\n  { year: 6, maximumInflation: 0.05137167 },\n  { year: 7, maximumInflation: 0.03995574 },\n  { year: 8, maximumInflation: 0.02853982 },\n  { year: 9, maximumInflation: 0.01712389 },\n  { year: 10, maximumInflation: 0.00570796 },\n  { year: 11, maximumInflation: 0.0 }\n];\nexport const auctionContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqplllst77y4l';\nexport const stakingContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqllls0lczs7';\nexport const delegationManagerContract =\n  'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqylllslmq6y6';\n\nexport const network: NetworkType = {\n  id: 'mainnet',\n  name: 'Mainnet',\n  egldLabel: 'EGLD',\n  walletAddress: 'https://wallet.multiversx.com/dapp/init',\n  apiAddress: 'https://api.multiversx.com',\n  gatewayAddress: 'https://gateway.multiversx.com',\n  explorerAddress: 'https://explorer.multiversx.com',\n  delegationContract:\n    'erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3lllllsw2eke2'\n};\n\nexport const delegationContractData: DelegationContractType[] = [\n  {\n    name: 'createNewDelegationContract',\n    gasLimit: 6000000,\n    data: 'createNewDelegationContract@'\n  },\n  {\n    name: 'setAutomaticActivation',\n    gasLimit: 6000000,\n    data: 'setAutomaticActivation@'\n  },\n  {\n    name: 'setMetaData',\n    gasLimit: 6000000,\n    data: 'setMetaData@'\n  },\n  {\n    name: 'setReDelegateCapActivation',\n    gasLimit: 6000000,\n    data: 'setCheckCapOnReDelegateRewards@'\n  },\n  {\n    name: 'changeServiceFee',\n    gasLimit: 6000000,\n    data: 'changeServiceFee@'\n  },\n  {\n    name: 'modifyTotalDelegationCap',\n    gasLimit: 6000000,\n    data: 'modifyTotalDelegationCap@'\n  },\n  {\n    name: 'addNodes',\n    gasLimit: 12000000,\n    data: 'addNodes'\n  },\n  {\n    name: 'removeNodes',\n    gasLimit: 12000000,\n    data: 'removeNodes@'\n  },\n  {\n    name: 'stakeNodes',\n    gasLimit: 12000000,\n    data: 'stakeNodes@'\n  },\n  {\n    name: 'reStakeUnStakedNodes',\n    gasLimit: 120000000,\n    data: 'reStakeUnStakedNodes@'\n  },\n  {\n    name: 'unStakeNodes',\n    gasLimit: 12000000,\n    data: 'unStakeNodes@'\n  },\n  {\n    name: 'unBondNodes',\n    gasLimit: 12000000,\n    data: 'unBondNodes@'\n  },\n  {\n    name: 'unJailNodes',\n    gasLimit: 12000000,\n    data: 'unJailNodes@'\n  },\n  {\n    name: 'delegate',\n    gasLimit: 12000000,\n    data: 'delegate'\n  },\n  {\n    name: 'unDelegate',\n    gasLimit: 12000000,\n    data: 'unDelegate@'\n  },\n  {\n    name: 'withdraw',\n    gasLimit: 12000000,\n    data: 'withdraw'\n  },\n  {\n    name: 'claimRewards',\n    gasLimit: 6000000,\n    data: 'claimRewards'\n  },\n  {\n    name: 'reDelegateRewards',\n    gasLimit: 12000000,\n    data: 'reDelegateRewards'\n  }\n];\n","import { Address, SmartContract, TokenPayment } from '@multiversx/sdk-core';\nimport { sendTransactions } from '@multiversx/sdk-dapp/services/transactions/sendTransactions';\nimport {\n  network,\n  DelegationContractType,\n  delegationContractData\n} from 'config';\n\ninterface TransactionParametersType {\n  args: string;\n  value: string;\n  type: string;\n}\n\nconst useTransaction = () => {\n  const sendTransaction = async ({\n    args,\n    value,\n    type\n  }: TransactionParametersType) => {\n    const address = new Address(network.delegationContract);\n    const contract = new SmartContract({ address });\n    const delegable = delegationContractData.find(\n      (item: DelegationContractType) => item.name === type\n    );\n\n    if (!delegable) {\n      throw new Error('The contract for this action is not defined.');\n    } else {\n      const getFunctionName = (): string =>\n        args === '' ? delegable.data : `${delegable.data}${args}`;\n\n      const getGasLimit = (): number => {\n        const nodeKeys = args.split('@').slice(1);\n\n        return delegable.data === 'addNodes' && args\n          ? delegable.gasLimit * (nodeKeys.length / 2)\n          : delegable.gasLimit;\n      };\n\n      const transaction = {\n        value: TokenPayment.egldFromAmount(value),\n        data: getFunctionName(),\n        receiver: contract.getAddress().bech32(),\n        gasLimit: getGasLimit()\n      };\n\n      return await sendTransactions({\n        transactions: [transaction]\n      });\n    }\n  };\n\n  return {\n    sendTransaction\n  };\n};\n\nexport default useTransaction;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2Ywol\",\"trigger\":\"styles_trigger__3IYwR\",\"disabled\":\"styles_disabled__22XKi\",\"delegate\":\"styles_delegate__3FVEq\",\"field\":\"styles_field__168Jx\",\"group\":\"styles_group__2JUmd\",\"input\":\"styles_input__24_hk\",\"max\":\"styles_max__33DmF\",\"description\":\"styles_description__3olnV\",\"error\":\"styles_error__OgIAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action\":\"styles_action__1TAMG\",\"trigger\":\"styles_trigger__1Y_n7\",\"disabled\":\"styles_disabled__2-vlZ\",\"modal\":\"styles_modal__3kiHq\",\"title\":\"styles_title__DtbQ8\",\"description\":\"styles_description__2IAqP\",\"render\":\"styles_render__1oy4L\",\"buttons\":\"styles_buttons__WO96c\",\"button\":\"styles_button__3ZFDK\",\"blue\":\"styles_blue__1HihO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__1wwHT\",\"trigger\":\"styles_trigger__17oBg\",\"disabled\":\"styles_disabled__1KeX5\",\"undelegate\":\"styles_undelegate__2r9bi\",\"field\":\"styles_field__3DWgl\",\"group\":\"styles_group__CKPe8\",\"input\":\"styles_input__3FQHY\",\"max\":\"styles_max__3jlqU\",\"description\":\"styles_description___nFGS\",\"error\":\"styles_error__2AR-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"styles_heading__1JVNx\",\"meta\":\"styles_meta__1f4HO\",\"icon\":\"styles_icon__3K0PB\",\"label\":\"styles_label__2YPaY\",\"contract\":\"styles_contract__5ExKT\",\"button\":\"styles_button__2Q52K\",\"disabled\":\"styles_disabled__pCm6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"styles_cards__1gWGZ\",\"card\":\"styles_card__2c_C0\",\"heading\":\"styles_heading__1Rp-y\",\"icon\":\"styles_icon__3a9ya\",\"trigger\":\"styles_trigger__sAGge\",\"disabled\":\"styles_disabled__3RcF5\",\"fill\":\"styles_fill__3tDXk\",\"value\":\"styles_value__ztQWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"styles_switch__1JfEl\",\"disabled\":\"styles_disabled__43pKC\",\"input\":\"styles_input__2Qkno\",\"slider\":\"styles_slider__IC4BM\",\"right\":\"styles_right__PXrSa\",\"label\":\"styles_label__3CUvC\",\"active\":\"styles_active__30cMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__1pO4u\",\"logo\":\"styles_logo__nK3cY\",\"title\":\"styles_title__1ZxMK\",\"heading\":\"styles_heading__2a2RP\",\"buttons\":\"styles_buttons__1V3f6\",\"button\":\"styles_button__10c4U\",\"icon\":\"styles_icon__1f7XI\",\"clickable\":\"styles_clickable__25rkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceFee\":\"styles_serviceFee__3oWyA\",\"range\":\"styles_range__1a1g1\",\"input\":\"styles_input__O0pDl\",\"thumb\":\"styles_thumb__fa-AK\",\"completion\":\"styles_completion__2CCnu\",\"breakpoint\":\"styles_breakpoint__24J7q\",\"completed\":\"styles_completed__19Lgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"styles_dropzone__2dPU7\",\"filled\":\"styles_filled__2YGtc\",\"message\":\"styles_message__1KVZk\",\"file\":\"styles_file__1AJU4\",\"name\":\"styles_name__j0Bsr\",\"error\":\"styles_error__3D57a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cap\":\"styles_cap__A2v-r\",\"field\":\"styles_field__1zZnC\",\"group\":\"styles_group__3KIli\",\"input\":\"styles_input__1aM-A\",\"error\":\"styles_error__aeXo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggles\":\"styles_toggles__yb1HF\",\"toggle\":\"styles_toggle__2-9XT\",\"left\":\"styles_left__4HCPj\",\"icon\":\"styles_icon__3JQ_C\",\"label\":\"styles_label__bFVZr\",\"right\":\"styles_right__10nru\"};","import React, { ReactNode, createContext, useState, useContext } from 'react';\n\nexport interface StateType {\n  showModal: boolean;\n  setShowModal: (state: boolean) => void;\n}\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst ContextProvider = ({ children }: ContextType) => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <Context.Provider value={{ showModal, setShowModal }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nconst useAction = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useAction hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst withAction = (Component: any) => (props: any) =>\n  (\n    <ContextProvider>\n      <Component {...props} />\n    </ContextProvider>\n  );\n\nexport { withAction, useAction };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"identity\":\"styles_identity__23rUm\",\"field\":\"styles_field__3rDpp\",\"input\":\"styles_input__3ROab\",\"invalid\":\"styles_invalid__3T3js\",\"error\":\"styles_error__1fEX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"withdrawals\":\"styles_withdrawals__3mhhD\",\"heading\":\"styles_heading__2r_Fl\",\"title\":\"styles_title__a7gIQ\",\"body\":\"styles_body__2bDFr\"};","import { StateType } from './state';\n\nexport type DispatchType = (action: any) => void;\nexport type ActionType =\n  | {\n      type: 'getUsersNumber';\n      usersNumber: StateType['usersNumber'];\n    }\n  | {\n      type: 'getContractDetails';\n      contractDetails: StateType['contractDetails'];\n    }\n  | {\n      type: 'getNodesNumber';\n      nodesNumber: StateType['nodesNumber'];\n    }\n  | {\n      type: 'getNodesStates';\n      nodesStates: StateType['nodesStates'];\n    }\n  | {\n      type: 'getTotalActiveStake';\n      totalActiveStake: StateType['totalActiveStake'];\n    }\n  | {\n      type: 'getUserActiveStake';\n      userActiveStake: StateType['userActiveStake'];\n    }\n  | {\n      type: 'getUndelegatedStakeList';\n      undelegatedStakeList: StateType['undelegatedStakeList'];\n    }\n  | {\n      type: 'getUserClaimableRewards';\n      userClaimableRewards: StateType['userClaimableRewards'];\n    }\n  | {\n      type: 'getNetworkConfig';\n      networkConfig: StateType['networkConfig'];\n    }\n  | {\n      type: 'getNetworkStatus';\n      networkStatus: StateType['networkStatus'];\n    }\n  | {\n      type: 'getTotalNetworkStake';\n      totalNetworkStake: StateType['totalNetworkStake'];\n    }\n  | {\n      type: 'getAgencyMetaData';\n      agencyMetaData: StateType['agencyMetaData'];\n    };\n\nconst reducer = (state: StateType, action: any) => {\n  switch (action.type) {\n    case 'getUsersNumber': {\n      return {\n        ...state,\n        usersNumber: action.usersNumber\n      };\n    }\n    case 'getContractDetails': {\n      return {\n        ...state,\n        contractDetails: action.contractDetails\n      };\n    }\n    case 'getNodesNumber': {\n      return {\n        ...state,\n        nodesNumber: action.nodesNumber\n      };\n    }\n    case 'getNodesStates': {\n      return {\n        ...state,\n        nodesStates: action.nodesStates\n      };\n    }\n    case 'getTotalActiveStake': {\n      return {\n        ...state,\n        totalActiveStake: action.totalActiveStake\n      };\n    }\n    case 'getUserActiveStake': {\n      return {\n        ...state,\n        userActiveStake: action.userActiveStake\n      };\n    }\n    case 'getUndelegatedStakeList': {\n      return {\n        ...state,\n        undelegatedStakeList: action.undelegatedStakeList\n      };\n    }\n    case 'getUserClaimableRewards': {\n      return {\n        ...state,\n        userClaimableRewards: action.userClaimableRewards\n      };\n    }\n    case 'getNetworkConfig': {\n      return {\n        ...state,\n        networkConfig: action.networkConfig\n      };\n    }\n    case 'getNetworkStatus': {\n      return {\n        ...state,\n        networkStatus: action.networkStatus\n      };\n    }\n    case 'getTotalNetworkStake': {\n      return {\n        ...state,\n        totalNetworkStake: action.totalNetworkStake\n      };\n    }\n    case 'getAgencyMetaData': {\n      return {\n        ...state,\n        agencyMetaData: action.agencyMetaData\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action}`);\n    }\n  }\n};\n\nexport { reducer };\n","type StatusType = 'idle' | 'loading' | 'loaded' | 'error';\ntype ErrorType = null | string;\n\nexport interface UndelegateStakeListType {\n  value: string;\n  timeLeft: number;\n}\n\nexport interface StateType {\n  nodesNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Uint8Array[];\n  };\n  nodesStates: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Uint8Array[];\n  };\n  contractDetails: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      [key: string]: any;\n      owner: boolean;\n      redelegationCap: string;\n      automaticActivation: string;\n      delegationCap: string;\n      serviceFee: string;\n    };\n  };\n  usersNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  totalActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userClaimableRewards: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  undelegatedStakeList: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | UndelegateStakeListType[];\n  };\n  totalNetworkStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkConfig: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkStatus: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  agencyMetaData: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      name: string;\n      website: string;\n      keybase: string;\n    };\n  };\n}\n\nexport const initializer: StateType = {\n  nodesNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  nodesStates: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  contractDetails: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  usersNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userClaimableRewards: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  undelegatedStakeList: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalNetworkStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  agencyMetaData: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkConfig: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkStatus: {\n    status: 'idle',\n    data: null,\n    error: null\n  }\n};\n","import React from 'react';\nimport { ReactNode, createContext, useReducer, useContext } from 'react';\n\nimport { DispatchType, reducer } from './reducer';\nimport { StateType, initializer } from './state';\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst Dispatch = createContext<DispatchType | undefined>(undefined);\n\nconst ContextProvider = ({ children }: ContextType) => {\n  const [state, dispatch] = useReducer(reducer, initializer);\n\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst useDispatch = () => {\n  const context = useContext(Dispatch);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Dispatch.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nexport { ContextProvider, useGlobalContext, useDispatch };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unlock\":\"styles_unlock__3FTxt\",\"wrapper\":\"styles_wrapper__BjzEY\",\"logo\":\"styles_logo__B32P_\",\"heading\":\"styles_heading__zfV0s\",\"description\":\"styles_description__23Ji_\",\"connects\":\"styles_connects__33nLW\",\"connect\":\"styles_connect__2bqr-\",\"title\":\"styles_title__2jXBt\",\"icon\":\"styles_icon__DeIzy\",\"name\":\"styles_name__3hh97\",\"qr\":\"styles_qr__3ckxp\",\"close\":\"styles_close__jnhdL\",\"code\":\"styles_code__ud8Oq\",\"subheading\":\"styles_subheading__3fOBq\",\"subtitle\":\"styles_subtitle__25bon\",\"head\":\"styles_head__2FGdH\",\"navigation\":\"styles_navigation__3SJgN\",\"footer\":\"styles_footer__2gt6O\",\"selected\":\"styles_selected__3y94T\",\"phishing\":\"styles_phishing__bRhzQ\",\"button\":\"styles_button__2kmlh\",\"lead\":\"styles_lead__32tQL\",\"pairing\":\"styles_pairing__UxChj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"styles_add__McDjH\",\"error\":\"styles_error__vJ0N5\"};"],"sourceRoot":""}