{"ast":null,"code":"import _defineProperty from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{useEffect}from'react';import{Query,ContractFunction,Address,decodeBigNumber,decodeUnsignedNumber,decodeString,AddressValue}from'@multiversx/sdk-core';import{useGetAccountInfo}from'@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';import{useGetSuccessfulTransactions}from'@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';import{ProxyNetworkProvider}from'@multiversx/sdk-network-providers';import{network,auctionContract}from'config';import{useDispatch}from'context';var useGlobalData=function useGlobalData(){var _useGetAccountInfo=useGetAccountInfo(),address=_useGetAccountInfo.address;var _useGetSuccessfulTran=useGetSuccessfulTransactions(),hasSuccessfulTransactions=_useGetSuccessfulTran.hasSuccessfulTransactions,successfulTransactionsArray=_useGetSuccessfulTran.successfulTransactionsArray;var dispatch=useDispatch();var provider=new ProxyNetworkProvider(network.gatewayAddress);var criticalFetches={getContractDetails:{key:'contractDetails',handler:function(){var _handler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var query,data,response,ownerAddressIndex,serviceFeeIndex,delegationCapIndex,automaticActivationIndex,withDelegationCapIndex,redelegationCapIndex,ownerAddress,serviceFee,delegationCap,activationStatus,withDelegationCap,redelegationCap;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getContractConfig')});_context.next=4;return provider.queryContract(query);case 4:data=_context.sent;response=data.getReturnDataParts();ownerAddressIndex=0;serviceFeeIndex=1;delegationCapIndex=2;automaticActivationIndex=4;withDelegationCapIndex=5;redelegationCapIndex=7;ownerAddress=response[ownerAddressIndex];serviceFee=response[serviceFeeIndex];delegationCap=response[delegationCapIndex];activationStatus=response[automaticActivationIndex];withDelegationCap=response[withDelegationCapIndex];redelegationCap=response[redelegationCapIndex];return _context.abrupt(\"return\",{withDelegationCap:String(withDelegationCap),owner:new Address(address).hex()===ownerAddress.toString('hex'),delegationCap:decodeBigNumber(delegationCap).toFixed(),redelegationCap:decodeString(redelegationCap)==='true'?'ON':'OFF',serviceFee:(decodeUnsignedNumber(serviceFee)/100).toString()+'%',automaticActivation:decodeString(activationStatus)==='true'?'ON':'OFF'});case 21:_context.prev=21;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",Promise.reject(_context.t0));case 24:case\"end\":return _context.stop();}},_callee,null,[[0,21]]);}));function handler(){return _handler.apply(this,arguments);}return handler;}()},getNodesNumber:{key:'nodesNumber',handler:function(){var _handler2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var query,data,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;query=new Query({address:new Address(auctionContract),func:new ContractFunction('getBlsKeysStatus'),args:[new AddressValue(new Address(network.delegationContract))]});_context2.next=4;return provider.queryContract(query);case 4:data=_context2.sent;response=data.getReturnDataParts();return _context2.abrupt(\"return\",response);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",Promise.reject(_context2.t0));case 12:case\"end\":return _context2.stop();}},_callee2,null,[[0,9]]);}));function handler(){return _handler2.apply(this,arguments);}return handler;}()},getNodesStates:{key:'nodesStates',handler:function(){var _handler3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var query,data,response;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getAllNodeStates')});_context3.next=4;return provider.queryContract(query);case 4:data=_context3.sent;response=data.getReturnDataParts();return _context3.abrupt(\"return\",response);case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",Promise.reject(_context3.t0));case 12:case\"end\":return _context3.stop();}},_callee3,null,[[0,9]]);}));function handler(){return _handler3.apply(this,arguments);}return handler;}()},getTotalActiveStake:{key:'totalActiveStake',handler:function(){var _handler4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var query,data,_data$getReturnDataPa,_data$getReturnDataPa2,totalNodes;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getTotalActiveStake')});_context4.next=4;return provider.queryContract(query);case 4:data=_context4.sent;_data$getReturnDataPa=data.getReturnDataParts(),_data$getReturnDataPa2=_slicedToArray(_data$getReturnDataPa,1),totalNodes=_data$getReturnDataPa2[0];return _context4.abrupt(\"return\",decodeBigNumber(totalNodes).toFixed());case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](0);return _context4.abrupt(\"return\",Promise.reject(_context4.t0));case 12:case\"end\":return _context4.stop();}},_callee4,null,[[0,9]]);}));function handler(){return _handler4.apply(this,arguments);}return handler;}()},getUserActiveStake:{key:'userActiveStake',handler:function(){var _handler5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var query,data,_data$getReturnDataPa3,_data$getReturnDataPa4,userStake;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getUserActiveStake'),args:[new AddressValue(new Address(address))]});_context5.next=4;return provider.queryContract(query);case 4:data=_context5.sent;_data$getReturnDataPa3=data.getReturnDataParts(),_data$getReturnDataPa4=_slicedToArray(_data$getReturnDataPa3,1),userStake=_data$getReturnDataPa4[0];if(userStake){_context5.next=8;break;}return _context5.abrupt(\"return\",'0');case 8:return _context5.abrupt(\"return\",decodeBigNumber(userStake).toFixed());case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](0);return _context5.abrupt(\"return\",Promise.reject(_context5.t0));case 14:case\"end\":return _context5.stop();}},_callee5,null,[[0,11]]);}));function handler(){return _handler5.apply(this,arguments);}return handler;}()},getNetworkConfig:{key:'networkConfig',handler:function(){var _handler6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return provider.getNetworkConfig();case 3:return _context6.abrupt(\"return\",_context6.sent);case 6:_context6.prev=6;_context6.t0=_context6[\"catch\"](0);return _context6.abrupt(\"return\",Promise.reject(_context6.t0));case 9:case\"end\":return _context6.stop();}},_callee6,null,[[0,6]]);}));function handler(){return _handler6.apply(this,arguments);}return handler;}()}};var fetchCriticalData=function fetchCriticalData(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var keys,data;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:keys=Object.keys(criticalFetches);keys.forEach(function(key){dispatch(_defineProperty({type:key},criticalFetches[key].key,{status:'loading',data:null,error:null}));});_context7.next=4;return Promise.allSettled(keys.map(function(key){return criticalFetches[key].handler();}));case 4:data=_context7.sent;data.forEach(function(item,index){dispatch(_defineProperty({type:keys[index]},criticalFetches[keys[index]].key,{status:item.status==='rejected'?'error':'loaded',error:item.reason||null,data:item.value||null}));});case 6:case\"end\":return _context7.stop();}},_callee7);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();};useEffect(fetchCriticalData,[]);useEffect(function(){if(hasSuccessfulTransactions&&successfulTransactionsArray.length>0){fetchCriticalData();}},[hasSuccessfulTransactions,successfulTransactionsArray.length]);};export default useGlobalData;","map":{"version":3,"names":["useEffect","Query","ContractFunction","Address","decodeBigNumber","decodeUnsignedNumber","decodeString","AddressValue","useGetAccountInfo","useGetSuccessfulTransactions","ProxyNetworkProvider","network","auctionContract","useDispatch","useGlobalData","_useGetAccountInfo","address","_useGetSuccessfulTran","hasSuccessfulTransactions","successfulTransactionsArray","dispatch","provider","gatewayAddress","criticalFetches","getContractDetails","key","handler","_handler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","data","response","ownerAddressIndex","serviceFeeIndex","delegationCapIndex","automaticActivationIndex","withDelegationCapIndex","redelegationCapIndex","ownerAddress","serviceFee","delegationCap","activationStatus","withDelegationCap","redelegationCap","wrap","_callee$","_context","prev","next","delegationContract","func","queryContract","sent","getReturnDataParts","abrupt","String","owner","hex","toString","toFixed","automaticActivation","t0","Promise","reject","stop","apply","arguments","getNodesNumber","_handler2","_callee2","_callee2$","_context2","args","getNodesStates","_handler3","_callee3","_callee3$","_context3","getTotalActiveStake","_handler4","_callee4","_data$getReturnDataPa","_data$getReturnDataPa2","totalNodes","_callee4$","_context4","_slicedToArray","getUserActiveStake","_handler5","_callee5","_data$getReturnDataPa3","_data$getReturnDataPa4","userStake","_callee5$","_context5","getNetworkConfig","_handler6","_callee6","_callee6$","_context6","fetchCriticalData","fetchData","_ref","_callee7","keys","_callee7$","_context7","Object","forEach","_defineProperty","type","status","error","allSettled","map","item","index","reason","value","length"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/hooks/useGlobalData.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport {\n  Query,\n  ContractFunction,\n  Address,\n  decodeBigNumber,\n  decodeUnsignedNumber,\n  decodeString,\n  AddressValue\n} from '@multiversx/sdk-core';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\n\nimport { network, auctionContract } from 'config';\nimport { useDispatch } from 'context';\n\ninterface ContractDetailsType {\n  automaticActivation: string;\n  redelegationCap: string;\n  serviceFee: string;\n  delegationCap: string;\n  owner: boolean;\n  withDelegationCap: string;\n}\n\ninterface globalFetchesType {\n  [key: string]: any;\n  getContractDetails: {\n    key: string;\n    handler: () => Promise<ContractDetailsType | string>;\n  };\n  getNodesNumber: {\n    key: string;\n    handler: () => Promise<Buffer[] | string>;\n  };\n  getNodesStates: {\n    key: string;\n    handler: () => Promise<Buffer[] | string>;\n  };\n  getTotalActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getUserActiveStake: {\n    key: string;\n    handler: () => Promise<string>;\n  };\n  getNetworkConfig: {\n    key: string;\n    handler: () => Promise<any>;\n  };\n}\n\nconst useGlobalData = () => {\n  const { address } = useGetAccountInfo();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n\n  const dispatch = useDispatch();\n  const provider = new ProxyNetworkProvider(network.gatewayAddress);\n  const criticalFetches: globalFetchesType = {\n    getContractDetails: {\n      key: 'contractDetails',\n      handler: async (): Promise<ContractDetailsType | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getContractConfig')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          const ownerAddressIndex = 0;\n          const serviceFeeIndex = 1;\n          const delegationCapIndex = 2;\n          const automaticActivationIndex = 4;\n          const withDelegationCapIndex = 5;\n          const redelegationCapIndex = 7;\n\n          const ownerAddress = response[ownerAddressIndex];\n          const serviceFee = response[serviceFeeIndex];\n          const delegationCap = response[delegationCapIndex];\n          const activationStatus = response[automaticActivationIndex];\n          const withDelegationCap = response[withDelegationCapIndex];\n          const redelegationCap = response[redelegationCapIndex];\n\n          return {\n            withDelegationCap: String(withDelegationCap),\n            owner: new Address(address).hex() === ownerAddress.toString('hex'),\n            delegationCap: decodeBigNumber(delegationCap).toFixed(),\n            redelegationCap:\n              decodeString(redelegationCap) === 'true' ? 'ON' : 'OFF',\n            serviceFee:\n              (decodeUnsignedNumber(serviceFee) / 100).toString() + '%',\n            automaticActivation:\n              decodeString(activationStatus) === 'true' ? 'ON' : 'OFF'\n          };\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesNumber: {\n      key: 'nodesNumber',\n      handler: async (): Promise<Buffer[] | string> => {\n        try {\n          const query = new Query({\n            address: new Address(auctionContract),\n            func: new ContractFunction('getBlsKeysStatus'),\n            args: [new AddressValue(new Address(network.delegationContract))]\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNodesStates: {\n      key: 'nodesStates',\n      handler: async (): Promise<Buffer[] | string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getAllNodeStates')\n          });\n\n          const data = await provider.queryContract(query);\n          const response = data.getReturnDataParts();\n\n          return response;\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getTotalActiveStake: {\n      key: 'totalActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getTotalActiveStake')\n          });\n\n          const data = await provider.queryContract(query);\n          const [totalNodes] = data.getReturnDataParts();\n\n          return decodeBigNumber(totalNodes).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getUserActiveStake: {\n      key: 'userActiveStake',\n      handler: async (): Promise<string> => {\n        try {\n          const query = new Query({\n            address: new Address(network.delegationContract),\n            func: new ContractFunction('getUserActiveStake'),\n            args: [new AddressValue(new Address(address))]\n          });\n\n          const data = await provider.queryContract(query);\n          const [userStake] = data.getReturnDataParts();\n\n          if (!userStake) {\n            return '0';\n          }\n\n          return decodeBigNumber(userStake).toFixed();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    },\n    getNetworkConfig: {\n      key: 'networkConfig',\n      handler: async (): Promise<any> => {\n        try {\n          return await provider.getNetworkConfig();\n        } catch (error) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  };\n\n  const fetchCriticalData = (): void => {\n    const fetchData = async () => {\n      const keys = Object.keys(criticalFetches);\n\n      keys.forEach((key) => {\n        dispatch({\n          type: key,\n          [criticalFetches[key].key]: {\n            status: 'loading',\n            data: null,\n            error: null\n          }\n        });\n      });\n\n      const data = await Promise.allSettled(\n        keys.map((key: string) => criticalFetches[key].handler())\n      );\n\n      data.forEach((item: any, index: any) => {\n        dispatch({\n          type: keys[index],\n          [criticalFetches[keys[index]].key]: {\n            status: item.status === 'rejected' ? 'error' : 'loaded',\n            error: item.reason || null,\n            data: item.value || null\n          }\n        });\n      });\n    };\n\n    fetchData();\n  };\n\n  useEffect(fetchCriticalData, []);\n  useEffect(() => {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      fetchCriticalData();\n    }\n  }, [hasSuccessfulTransactions, successfulTransactionsArray.length]);\n};\n\nexport default useGlobalData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}