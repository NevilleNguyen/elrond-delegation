{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\nvar _toConsumableArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletConnectV2Provider = exports.WalletConnectV2ProviderErrorMessagesEnum = void 0;\nvar sign_client_1 = __importDefault(require(\"@walletconnect/sign-client\"));\nvar utils_1 = require(\"@walletconnect/utils\");\nvar constants_1 = require(\"./constants\");\nvar operation_1 = require(\"./operation\");\nvar logger_1 = require(\"./logger\");\nvar primitives_1 = require(\"./primitives\");\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"WalletConnectV2ProviderErrorMessagesEnum\", {\n  enumerable: true,\n  get: function get() {\n    return errors_1.WalletConnectV2ProviderErrorMessagesEnum;\n  }\n});\nvar userAddress_1 = require(\"./userAddress\");\nvar WalletConnectV2Provider = /*#__PURE__*/function () {\n  function WalletConnectV2Provider(onClientConnect, chainId, walletConnectV2Relay, walletConnectV2ProjectId, options) {\n    _classCallCheck(this, WalletConnectV2Provider);\n    this.chainId = \"\";\n    this.address = \"\";\n    this.signature = \"\";\n    this.namespace = constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE;\n    this.isInitializing = false;\n    this.events = [];\n    this.methods = [];\n    this.processingTopic = \"\";\n    this.options = {};\n    this.onClientConnect = onClientConnect;\n    this.chainId = chainId;\n    this.walletConnectV2Relay = walletConnectV2Relay;\n    this.walletConnectV2ProjectId = walletConnectV2ProjectId;\n    this.options = options;\n  }\n  _createClass(WalletConnectV2Provider, [{\n    key: \"reset\",\n    value: function reset() {\n      this.address = \"\";\n      this.signature = \"\";\n      this.namespace = constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE;\n      this.session = undefined;\n    }\n    /**\n     * Initiates WalletConnect client.\n     */\n  }, {\n    key: \"init\",\n    value: function init() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var client;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.isInitialized()) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\", this.isInitialized());\n            case 4:\n              _context.prev = 4;\n              if (this.isInitializing) {\n                _context.next = 17;\n                break;\n              }\n              this.isInitializing = true;\n              this.reset();\n              _context.next = 10;\n              return sign_client_1.default.init(Object.assign({\n                relayUrl: this.walletConnectV2Relay,\n                projectId: this.walletConnectV2ProjectId\n              }, this.options));\n            case 10:\n              client = _context.sent;\n              this.walletConnector = client;\n              this.isInitializing = false;\n              _context.next = 15;\n              return this.subscribeToEvents(client);\n            case 15:\n              _context.next = 17;\n              return this.checkPersistedState(client);\n            case 17:\n              _context.next = 22;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](4);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToInit);\n            case 22:\n              _context.prev = 22;\n              this.isInitializing = false;\n              return _context.abrupt(\"return\", this.isInitialized());\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[4, 19, 22, 26]]);\n      }));\n    }\n    /**\n     * Returns true if init() was previously called successfully\n     */\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      return !!this.walletConnector && !this.isInitializing;\n    }\n    /**\n     * Returns true if provider is initialized and a valid session is set\n     */\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      var _this = this;\n      return new Promise(function (resolve, _) {\n        return resolve(Boolean(_this.isInitialized() && typeof _this.session !== \"undefined\"));\n      });\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(options) {\n      var _a, _b, _c, _d;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var connectParams, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context2.next = 2;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 2:\n              connectParams = this.getConnectionParams(options);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return this.walletConnector.connect(Object.assign({\n                pairingTopic: options === null || options === void 0 ? void 0 : options.topic\n              }, connectParams));\n            case 6:\n              response = _context2.sent;\n              this.events = (_b = (_a = connectParams === null || connectParams === void 0 ? void 0 : connectParams.requiredNamespaces) === null || _a === void 0 ? void 0 : _a[constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE]) === null || _b === void 0 ? void 0 : _b.events;\n              this.methods = (_d = (_c = connectParams === null || connectParams === void 0 ? void 0 : connectParams.requiredNamespaces) === null || _c === void 0 ? void 0 : _c[constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE]) === null || _d === void 0 ? void 0 : _d.methods;\n              return _context2.abrupt(\"return\", response);\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](3);\n              this.reset();\n              logger_1.Logger.error((options === null || options === void 0 ? void 0 : options.topic) ? errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnectExisting : errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnect);\n              throw new Error((options === null || options === void 0 ? void 0 : options.topic) ? errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnectExisting : errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnect);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3, 12]]);\n      }));\n    }\n  }, {\n    key: \"login\",\n    value: function login(options) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var session, address, _yield$this$walletCon, signature;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this.isInitializing = true;\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context3.next = 4;\n                break;\n              }\n              _context3.next = 4;\n              return this.connect();\n            case 4:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 6:\n              if (!(typeof this.session !== \"undefined\")) {\n                _context3.next = 9;\n                break;\n              }\n              _context3.next = 9;\n              return this.logout({\n                topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic\n              });\n            case 9:\n              _context3.prev = 9;\n              if (!(options && options.approval)) {\n                _context3.next = 29;\n                break;\n              }\n              _context3.next = 13;\n              return options.approval();\n            case 13:\n              session = _context3.sent;\n              if (!options.token) {\n                _context3.next = 26;\n                break;\n              }\n              address = this.getAddressFromSession(session);\n              _context3.next = 18;\n              return this.walletConnector.request({\n                chainId: \"\".concat(this.namespace, \":\").concat(this.chainId),\n                topic: session.topic,\n                request: {\n                  method: operation_1.Operation.SIGN_LOGIN_TOKEN,\n                  params: {\n                    token: options.token,\n                    address: address\n                  }\n                }\n              });\n            case 18:\n              _yield$this$walletCon = _context3.sent;\n              signature = _yield$this$walletCon.signature;\n              if (signature) {\n                _context3.next = 23;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToSignLoginToken);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToSignLoginToken);\n            case 23:\n              _context3.next = 25;\n              return this.onSessionConnected({\n                session: session,\n                signature: signature\n              });\n            case 25:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 26:\n              _context3.next = 28;\n              return this.onSessionConnected({\n                session: session,\n                signature: \"\"\n              });\n            case 28:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 29:\n              _context3.next = 36;\n              break;\n            case 31:\n              _context3.prev = 31;\n              _context3.t0 = _context3[\"catch\"](9);\n              this.reset();\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToLogin);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToLogin);\n            case 36:\n              _context3.prev = 36;\n              this.isInitializing = false;\n              return _context3.finish(36);\n            case 39:\n              return _context3.abrupt(\"return\", \"\");\n            case 40:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[9, 31, 36, 39]]);\n      }));\n    }\n    /**\n     * Mocks a logout request by returning true\n     */\n  }, {\n    key: \"logout\",\n    value: function logout(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var currentSessionTopic;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context4.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              _context4.prev = 3;\n              if (!(this.processingTopic === ((options === null || options === void 0 ? void 0 : options.topic) || this.getCurrentTopic(this.walletConnector)))) {\n                _context4.next = 6;\n                break;\n              }\n              return _context4.abrupt(\"return\", true);\n            case 6:\n              if (!(options === null || options === void 0 ? void 0 : options.topic)) {\n                _context4.next = 12;\n                break;\n              }\n              this.processingTopic = options.topic;\n              _context4.next = 10;\n              return this.walletConnector.disconnect({\n                topic: options.topic,\n                reason: utils_1.getSdkError(\"USER_DISCONNECTED\")\n              });\n            case 10:\n              _context4.next = 19;\n              break;\n            case 12:\n              currentSessionTopic = this.getCurrentTopic(this.walletConnector);\n              this.processingTopic = currentSessionTopic;\n              _context4.next = 16;\n              return this.walletConnector.disconnect({\n                topic: currentSessionTopic,\n                reason: utils_1.getSdkError(\"USER_DISCONNECTED\")\n              });\n            case 16:\n              this.reset();\n              _context4.next = 19;\n              return this.cleanupPendingPairings({\n                deletePairings: true\n              });\n            case 19:\n              _context4.next = 24;\n              break;\n            case 21:\n              _context4.prev = 21;\n              _context4.t0 = _context4[\"catch\"](3);\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.alreadyLoggedOut);\n            case 24:\n              _context4.prev = 24;\n              this.processingTopic = \"\";\n              return _context4.finish(24);\n            case 27:\n              return _context4.abrupt(\"return\", true);\n            case 28:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[3, 21, 24, 27]]);\n      }));\n    }\n    /**\n     * Fetches the WalletConnect address\n     */\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context5.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              return _context5.abrupt(\"return\", this.address);\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n    /**\n     * Fetches the WalletConnect signature\n     */\n  }, {\n    key: \"getSignature\",\n    value: function getSignature() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context6.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              return _context6.abrupt(\"return\", this.signature);\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n    /**\n     * Fetches the WalletConnect pairings\n     */\n  }, {\n    key: \"getPairings\",\n    value: function getPairings() {\n      var _a, _b, _c, _d, _e;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context7.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              return _context7.abrupt(\"return\", (_e = (_d = (_c = (_b = (_a = this.walletConnector) === null || _a === void 0 ? void 0 : _a.core) === null || _b === void 0 ? void 0 : _b.pairing) === null || _c === void 0 ? void 0 : _c.pairings) === null || _d === void 0 ? void 0 : _d.getAll({\n                active: true\n              })) !== null && _e !== void 0 ? _e : []);\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n    }\n    /**\n     * Signs a message and returns it signed\n     * @param message\n     */\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var address, _yield$this$walletCon2, signature;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context8.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              if (!(typeof this.session === \"undefined\")) {\n                _context8.next = 7;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n              this.onClientConnect.onClientLogout();\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            case 7:\n              _context8.next = 9;\n              return this.getAddress();\n            case 9:\n              address = _context8.sent;\n              _context8.next = 12;\n              return this.walletConnector.request({\n                chainId: \"\".concat(this.namespace, \":\").concat(this.chainId),\n                topic: this.getCurrentTopic(this.walletConnector),\n                request: {\n                  method: operation_1.Operation.SIGN_MESSAGE,\n                  params: {\n                    address: address,\n                    message: message.message.toString()\n                  }\n                }\n              });\n            case 12:\n              _yield$this$walletCon2 = _context8.sent;\n              signature = _yield$this$walletCon2.signature;\n              if (signature) {\n                _context8.next = 17;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageResponse);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageResponse);\n            case 17:\n              _context8.prev = 17;\n              message.applySignature(new primitives_1.Signature(signature), userAddress_1.UserAddress.fromBech32(address));\n              _context8.next = 25;\n              break;\n            case 21:\n              _context8.prev = 21;\n              _context8.t0 = _context8[\"catch\"](17);\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageSignature);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageSignature);\n            case 25:\n              return _context8.abrupt(\"return\", message);\n            case 26:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[17, 21]]);\n      }));\n    }\n    /**\n     * Signs a transaction and returns it signed\n     * @param transaction\n     */\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var address, sender, wcTransaction, _yield$this$walletCon3, signature;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context9.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              if (!(typeof this.session === \"undefined\")) {\n                _context9.next = 7;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n              this.onClientConnect.onClientLogout();\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            case 7:\n              _context9.next = 9;\n              return this.getAddress();\n            case 9:\n              address = _context9.sent;\n              sender = new primitives_1.Address(address);\n              wcTransaction = transaction.toPlainObject(sender);\n              if (!(this.chainId !== transaction.getChainID().valueOf())) {\n                _context9.next = 15;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n            case 15:\n              _context9.prev = 15;\n              _context9.next = 18;\n              return this.walletConnector.request({\n                chainId: \"\".concat(this.namespace, \":\").concat(this.chainId),\n                topic: this.getCurrentTopic(this.walletConnector),\n                request: {\n                  method: operation_1.Operation.SIGN_TRANSACTION,\n                  params: {\n                    transaction: wcTransaction\n                  }\n                }\n              });\n            case 18:\n              _yield$this$walletCon3 = _context9.sent;\n              signature = _yield$this$walletCon3.signature;\n              if (signature) {\n                _context9.next = 23;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n            case 23:\n              transaction.applySignature(primitives_1.Signature.fromHex(signature), userAddress_1.UserAddress.fromBech32(address));\n              return _context9.abrupt(\"return\", transaction);\n            case 27:\n              _context9.prev = 27;\n              _context9.t0 = _context9[\"catch\"](15);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.transactionError);\n            case 30:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[15, 27]]);\n      }));\n    }\n    /**\n     * Signs an array of transactions and returns it signed\n     * @param transactions\n     */\n  }, {\n    key: \"signTransactions\",\n    value: function signTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var _this2 = this;\n        var address, sender, wcTransactions, _yield$this$walletCon4, signatures, _iterator, _step, _step$value, index, transaction;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context10.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              if (!(typeof this.session === \"undefined\")) {\n                _context10.next = 7;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n              this.onClientConnect.onClientLogout();\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            case 7:\n              _context10.next = 9;\n              return this.getAddress();\n            case 9:\n              address = _context10.sent;\n              sender = new primitives_1.Address(address);\n              wcTransactions = transactions.map(function (transaction) {\n                if (_this2.chainId !== transaction.getChainID().valueOf()) {\n                  logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                  throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                }\n                return transaction.toPlainObject(sender);\n              });\n              _context10.prev = 12;\n              _context10.next = 15;\n              return this.walletConnector.request({\n                chainId: \"\".concat(this.namespace, \":\").concat(this.chainId),\n                topic: this.getCurrentTopic(this.walletConnector),\n                request: {\n                  method: operation_1.Operation.SIGN_TRANSACTIONS,\n                  params: {\n                    transactions: wcTransactions\n                  }\n                }\n              });\n            case 15:\n              _yield$this$walletCon4 = _context10.sent;\n              signatures = _yield$this$walletCon4.signatures;\n              if (!signatures || !Array.isArray(signatures)) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidTransactionResponse);\n              }\n              if (transactions.length !== signatures.length) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidTransactionResponse);\n              }\n              _iterator = _createForOfIteratorHelper(transactions.entries());\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], transaction = _step$value[1];\n                  transaction.applySignature(primitives_1.Signature.fromHex(signatures[index].signature), userAddress_1.UserAddress.fromBech32(address));\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n              return _context10.abrupt(\"return\", transactions);\n            case 24:\n              _context10.prev = 24;\n              _context10.t0 = _context10[\"catch\"](12);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.transactionError);\n            case 27:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this, [[12, 24]]);\n      }));\n    }\n    /**\n     * Sends a custom request\n     * @param request\n     */\n  }, {\n    key: \"sendCustomRequest\",\n    value: function sendCustomRequest(options) {\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var request, method, _yield$this$walletCon5, response;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context11.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              if (!(typeof this.session === \"undefined\")) {\n                _context11.next = 7;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n              this.onClientConnect.onClientLogout();\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            case 7:\n              if (!((_a = options === null || options === void 0 ? void 0 : options.request) === null || _a === void 0 ? void 0 : _a.method)) {\n                _context11.next = 18;\n                break;\n              }\n              request = Object.assign({}, options.request);\n              method = request.method;\n              _context11.next = 12;\n              return this.walletConnector.request({\n                chainId: \"\".concat(this.namespace, \":\").concat(this.chainId),\n                topic: this.getCurrentTopic(this.walletConnector),\n                request: Object.assign(Object.assign({}, request), {\n                  method: method\n                })\n              });\n            case 12:\n              _yield$this$walletCon5 = _context11.sent;\n              response = _yield$this$walletCon5.response;\n              if (response) {\n                _context11.next = 17;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidCustomRequestResponse);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidCustomRequestResponse);\n            case 17:\n              return _context11.abrupt(\"return\", response);\n            case 18:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n    }\n    /**\n     * Ping helper\n     */\n  }, {\n    key: \"ping\",\n    value: function ping() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var topic;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context12.next = 3;\n                break;\n              }\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 3:\n              if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n              }\n              _context12.prev = 4;\n              topic = this.getCurrentTopic(this.walletConnector);\n              _context12.next = 8;\n              return this.walletConnector.ping({\n                topic: topic\n              });\n            case 8:\n              return _context12.abrupt(\"return\", true);\n            case 11:\n              _context12.prev = 11;\n              _context12.t0 = _context12[\"catch\"](4);\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.pingFailed);\n              return _context12.abrupt(\"return\", false);\n            case 15:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[4, 11]]);\n      }));\n    }\n  }, {\n    key: \"loginAccount\",\n    value: function loginAccount(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (options) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\", \"\");\n            case 2:\n              if (!this.addressIsValid(options.address)) {\n                _context13.next = 7;\n                break;\n              }\n              this.address = options.address;\n              if (options.signature) {\n                this.signature = options.signature;\n              }\n              this.onClientConnect.onClientLogin();\n              return _context13.abrupt(\"return\", this.address);\n            case 7:\n              logger_1.Logger.error(\"\".concat(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidAddress, \" \").concat(options.address));\n              if (!this.walletConnector) {\n                _context13.next = 11;\n                break;\n              }\n              _context13.next = 11;\n              return this.logout();\n            case 11:\n              return _context13.abrupt(\"return\", \"\");\n            case 12:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"onSessionConnected\",\n    value: function onSessionConnected(options) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var address;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              if (options) {\n                _context14.next = 2;\n                break;\n              }\n              return _context14.abrupt(\"return\", \"\");\n            case 2:\n              this.session = options.session;\n              address = this.getAddressFromSession(options.session);\n              if (!address) {\n                _context14.next = 8;\n                break;\n              }\n              _context14.next = 7;\n              return this.loginAccount({\n                address: address,\n                signature: options.signature\n              });\n            case 7:\n              return _context14.abrupt(\"return\", address);\n            case 8:\n              return _context14.abrupt(\"return\", \"\");\n            case 9:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"handleTopicUpdateEvent\",\n    value: function handleTopicUpdateEvent(_ref) {\n      var topic = _ref.topic;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var existingPairings, lastActivePairing;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context15.next = 2;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 2:\n              _context15.prev = 2;\n              _context15.next = 5;\n              return this.getPairings();\n            case 5:\n              existingPairings = _context15.sent;\n              if (this.address && !this.isInitializing && existingPairings) {\n                if ((existingPairings === null || existingPairings === void 0 ? void 0 : existingPairings.length) === 0) {\n                  this.onClientConnect.onClientLogout();\n                } else {\n                  lastActivePairing = existingPairings[existingPairings.length - 1];\n                  if ((lastActivePairing === null || lastActivePairing === void 0 ? void 0 : lastActivePairing.topic) === topic) {\n                    this.onClientConnect.onClientLogout();\n                  }\n                }\n              }\n              _context15.next = 12;\n              break;\n            case 9:\n              _context15.prev = 9;\n              _context15.t0 = _context15[\"catch\"](2);\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleTopic);\n            case 12:\n              _context15.prev = 12;\n              _context15.next = 15;\n              return this.getPairings();\n            case 15:\n              this.pairings = _context15.sent;\n              return _context15.finish(12);\n            case 17:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[2, 9, 12, 17]]);\n      }));\n    }\n  }, {\n    key: \"handleSessionEvents\",\n    value: function handleSessionEvents(_ref2) {\n      var topic = _ref2.topic,\n        params = _ref2.params;\n      var _a;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var event, eventData;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context16.next = 2;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 2:\n              if (!(this.session && ((_a = this.session) === null || _a === void 0 ? void 0 : _a.topic) !== topic)) {\n                _context16.next = 4;\n                break;\n              }\n              return _context16.abrupt(\"return\");\n            case 4:\n              event = params.event;\n              if ((event === null || event === void 0 ? void 0 : event.name) && this.getCurrentTopic(this.walletConnector) === topic) {\n                eventData = event.data;\n                this.onClientConnect.onClientEvent(eventData);\n              }\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"subscribeToEvents\",\n    value: function subscribeToEvents(client) {\n      var _a, _b, _c, _d;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        var _this3 = this;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              if (!(typeof client === \"undefined\")) {\n                _context19.next = 2;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 2:\n              try {\n                // Session Events\n                client.on(\"session_update\", function (_ref3) {\n                  var topic = _ref3.topic,\n                    params = _ref3.params;\n                  var _a;\n                  if (!_this3.session || ((_a = _this3.session) === null || _a === void 0 ? void 0 : _a.topic) !== topic) {\n                    return;\n                  }\n                  var namespaces = params.namespaces;\n                  var _session = client.session.get(topic);\n                  var updatedSession = Object.assign(Object.assign({}, _session), {\n                    namespaces: namespaces\n                  });\n                  _this3.onSessionConnected({\n                    session: updatedSession\n                  });\n                });\n                client.on(\"session_event\", this.handleSessionEvents.bind(this));\n                client.on(\"session_delete\", function (_ref4) {\n                  var topic = _ref4.topic;\n                  return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n                    var _e;\n                    return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n                      while (1) switch (_context17.prev = _context17.next) {\n                        case 0:\n                          if (!(!this.session || ((_e = this.session) === null || _e === void 0 ? void 0 : _e.topic) !== topic)) {\n                            _context17.next = 2;\n                            break;\n                          }\n                          return _context17.abrupt(\"return\");\n                        case 2:\n                          logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionDeleted);\n                          this.onClientConnect.onClientLogout();\n                          this.reset();\n                          _context17.next = 7;\n                          return this.cleanupPendingPairings({\n                            deletePairings: true\n                          });\n                        case 7:\n                        case \"end\":\n                          return _context17.stop();\n                      }\n                    }, _callee17, this);\n                  }));\n                });\n                client.on(\"session_expire\", function (_ref5) {\n                  var topic = _ref5.topic;\n                  return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n                    var _f;\n                    return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n                      while (1) switch (_context18.prev = _context18.next) {\n                        case 0:\n                          if (!(!this.session || ((_f = this.session) === null || _f === void 0 ? void 0 : _f.topic) !== topic)) {\n                            _context18.next = 2;\n                            break;\n                          }\n                          return _context18.abrupt(\"return\");\n                        case 2:\n                          logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionExpired);\n                          this.onClientConnect.onClientLogout();\n                          this.reset();\n                          _context18.next = 7;\n                          return this.cleanupPendingPairings({\n                            deletePairings: true\n                          });\n                        case 7:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }, _callee18, this);\n                  }));\n                });\n                // Pairing Events\n                (_b = (_a = client.core) === null || _a === void 0 ? void 0 : _a.pairing) === null || _b === void 0 ? void 0 : _b.events.on(\"pairing_delete\", this.handleTopicUpdateEvent.bind(this));\n                (_d = (_c = client.core) === null || _c === void 0 ? void 0 : _c.pairing) === null || _d === void 0 ? void 0 : _d.events.on(\"pairing_expire\", this.handleTopicUpdateEvent.bind(this));\n              } catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleEvent);\n              }\n            case 3:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n    }\n  }, {\n    key: \"checkPersistedState\",\n    value: function checkPersistedState(client) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var session;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              if (!(typeof client === \"undefined\")) {\n                _context20.next = 2;\n                break;\n              }\n              throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            case 2:\n              _context20.next = 4;\n              return this.getPairings();\n            case 4:\n              this.pairings = _context20.sent;\n              if (!(typeof this.session !== \"undefined\")) {\n                _context20.next = 7;\n                break;\n              }\n              return _context20.abrupt(\"return\");\n            case 7:\n              if (!(client.session.length && !this.address && !this.isInitializing)) {\n                _context20.next = 13;\n                break;\n              }\n              session = this.getCurrentSession(client);\n              if (!session) {\n                _context20.next = 13;\n                break;\n              }\n              _context20.next = 12;\n              return this.onSessionConnected({\n                session: session\n              });\n            case 12:\n              return _context20.abrupt(\"return\", session);\n            case 13:\n              return _context20.abrupt(\"return\");\n            case 14:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n    }\n  }, {\n    key: \"cleanupPendingPairings\",\n    value: function cleanupPendingPairings() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var inactivePairings, _iterator2, _step2, pairing;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              if (!(typeof this.walletConnector === \"undefined\")) {\n                _context21.next = 2;\n                break;\n              }\n              return _context21.abrupt(\"return\");\n            case 2:\n              _context21.prev = 2;\n              inactivePairings = (_c = (_b = (_a = this.walletConnector.core) === null || _a === void 0 ? void 0 : _a.pairing) === null || _b === void 0 ? void 0 : _b.pairings) === null || _c === void 0 ? void 0 : _c.getAll();\n              if (utils_1.isValidArray(inactivePairings)) {\n                _context21.next = 6;\n                break;\n              }\n              return _context21.abrupt(\"return\");\n            case 6:\n              _iterator2 = _createForOfIteratorHelper(inactivePairings);\n              _context21.prev = 7;\n              _iterator2.s();\n            case 9:\n              if ((_step2 = _iterator2.n()).done) {\n                _context21.next = 19;\n                break;\n              }\n              pairing = _step2.value;\n              if (!options.deletePairings) {\n                _context21.next = 15;\n                break;\n              }\n              (_e = (_d = this.walletConnector.core) === null || _d === void 0 ? void 0 : _d.expirer) === null || _e === void 0 ? void 0 : _e.set(pairing.topic, 0);\n              _context21.next = 17;\n              break;\n            case 15:\n              _context21.next = 17;\n              return (_h = (_g = (_f = this.walletConnector.core) === null || _f === void 0 ? void 0 : _f.relayer) === null || _g === void 0 ? void 0 : _g.subscriber) === null || _h === void 0 ? void 0 : _h.unsubscribe(pairing.topic);\n            case 17:\n              _context21.next = 9;\n              break;\n            case 19:\n              _context21.next = 24;\n              break;\n            case 21:\n              _context21.prev = 21;\n              _context21.t0 = _context21[\"catch\"](7);\n              _iterator2.e(_context21.t0);\n            case 24:\n              _context21.prev = 24;\n              _iterator2.f();\n              return _context21.finish(24);\n            case 27:\n              _context21.next = 32;\n              break;\n            case 29:\n              _context21.prev = 29;\n              _context21.t1 = _context21[\"catch\"](2);\n              logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleCleanup);\n            case 32:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this, [[2, 29], [7, 21, 24, 27]]);\n      }));\n    }\n  }, {\n    key: \"getCurrentSession\",\n    value: function getCurrentSession(client) {\n      if (typeof client === \"undefined\") {\n        throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n      }\n      var acknowledgedSessions = client.find(this.getConnectionParams()).filter(function (s) {\n        return s.acknowledged;\n      });\n      if (acknowledgedSessions.length > 0) {\n        var lastKeyIndex = acknowledgedSessions.length - 1;\n        var session = acknowledgedSessions[lastKeyIndex];\n        return session;\n      } else if (client.session.length > 0) {\n        var _lastKeyIndex = client.session.keys.length - 1;\n        var _session2 = client.session.get(client.session.keys[_lastKeyIndex]);\n        return _session2;\n      } else {\n        logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n        throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n      }\n    }\n  }, {\n    key: \"getCurrentTopic\",\n    value: function getCurrentTopic(client) {\n      if (typeof client === \"undefined\") {\n        throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n      }\n      var session = this.getCurrentSession(client);\n      if (session === null || session === void 0 ? void 0 : session.topic) {\n        return session.topic;\n      } else {\n        throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n      }\n    }\n  }, {\n    key: \"getConnectionParams\",\n    value: function getConnectionParams(options) {\n      var _a, _b;\n      var methods = [].concat(_toConsumableArray(constants_1.WALLETCONNECT_MULTIVERSX_METHODS), _toConsumableArray((_a = options === null || options === void 0 ? void 0 : options.methods) !== null && _a !== void 0 ? _a : []));\n      var chains = [\"\".concat(constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE, \":\").concat(this.chainId)];\n      var events = (_b = options === null || options === void 0 ? void 0 : options.events) !== null && _b !== void 0 ? _b : [];\n      return {\n        requiredNamespaces: _defineProperty({}, constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE, {\n          methods: methods,\n          chains: chains,\n          events: events\n        })\n      };\n    }\n  }, {\n    key: \"addressIsValid\",\n    value: function addressIsValid(destinationAddress) {\n      try {\n        var addr = userAddress_1.UserAddress.fromBech32(destinationAddress);\n        return !!addr;\n      } catch (_a) {\n        return false;\n      }\n    }\n  }, {\n    key: \"getAddressFromSession\",\n    value: function getAddressFromSession(session) {\n      var selectedNamespace = session.namespaces[this.namespace];\n      if (selectedNamespace && selectedNamespace.accounts) {\n        // Use only the first address in case of multiple provided addresses\n        var currentSession = selectedNamespace.accounts[0];\n        var _currentSession$split = currentSession.split(\":\"),\n          _currentSession$split2 = _slicedToArray(_currentSession$split, 3),\n          namespace = _currentSession$split2[0],\n          reference = _currentSession$split2[1],\n          address = _currentSession$split2[2];\n        return address;\n      }\n      return \"\";\n    }\n  }]);\n  return WalletConnectV2Provider;\n}();\nexports.WalletConnectV2Provider = WalletConnectV2Provider;","map":{"version":3,"sources":["../src/walletConnectV2Provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletConnectV2Provider = exports.WalletConnectV2ProviderErrorMessagesEnum = void 0;\nconst sign_client_1 = __importDefault(require(\"@walletconnect/sign-client\"));\nconst utils_1 = require(\"@walletconnect/utils\");\nconst constants_1 = require(\"./constants\");\nconst operation_1 = require(\"./operation\");\nconst logger_1 = require(\"./logger\");\nconst primitives_1 = require(\"./primitives\");\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"WalletConnectV2ProviderErrorMessagesEnum\", { enumerable: true, get: function () { return errors_1.WalletConnectV2ProviderErrorMessagesEnum; } });\nconst userAddress_1 = require(\"./userAddress\");\nclass WalletConnectV2Provider {\n    constructor(onClientConnect, chainId, walletConnectV2Relay, walletConnectV2ProjectId, options) {\n        this.chainId = \"\";\n        this.address = \"\";\n        this.signature = \"\";\n        this.namespace = constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE;\n        this.isInitializing = false;\n        this.events = [];\n        this.methods = [];\n        this.processingTopic = \"\";\n        this.options = {};\n        this.onClientConnect = onClientConnect;\n        this.chainId = chainId;\n        this.walletConnectV2Relay = walletConnectV2Relay;\n        this.walletConnectV2ProjectId = walletConnectV2ProjectId;\n        this.options = options;\n    }\n    reset() {\n        this.address = \"\";\n        this.signature = \"\";\n        this.namespace = constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE;\n        this.session = undefined;\n    }\n    /**\n     * Initiates WalletConnect client.\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isInitialized()) {\n                return this.isInitialized();\n            }\n            else {\n                try {\n                    if (!this.isInitializing) {\n                        this.isInitializing = true;\n                        this.reset();\n                        const client = yield sign_client_1.default.init(Object.assign({ relayUrl: this.walletConnectV2Relay, projectId: this.walletConnectV2ProjectId }, this.options));\n                        this.walletConnector = client;\n                        this.isInitializing = false;\n                        yield this.subscribeToEvents(client);\n                        yield this.checkPersistedState(client);\n                    }\n                }\n                catch (error) {\n                    throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToInit);\n                }\n                finally {\n                    this.isInitializing = false;\n                    return this.isInitialized();\n                }\n            }\n        });\n    }\n    /**\n     * Returns true if init() was previously called successfully\n     */\n    isInitialized() {\n        return !!this.walletConnector && !this.isInitializing;\n    }\n    /**\n     * Returns true if provider is initialized and a valid session is set\n     */\n    isConnected() {\n        return new Promise((resolve, _) => resolve(Boolean(this.isInitialized() && typeof this.session !== \"undefined\")));\n    }\n    connect(options) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            const connectParams = this.getConnectionParams(options);\n            try {\n                const response = yield this.walletConnector.connect(Object.assign({ pairingTopic: options === null || options === void 0 ? void 0 : options.topic }, connectParams));\n                this.events = (_b = (_a = connectParams === null || connectParams === void 0 ? void 0 : connectParams.requiredNamespaces) === null || _a === void 0 ? void 0 : _a[constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE]) === null || _b === void 0 ? void 0 : _b.events;\n                this.methods = (_d = (_c = connectParams === null || connectParams === void 0 ? void 0 : connectParams.requiredNamespaces) === null || _c === void 0 ? void 0 : _c[constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE]) === null || _d === void 0 ? void 0 : _d.methods;\n                return response;\n            }\n            catch (error) {\n                this.reset();\n                logger_1.Logger.error((options === null || options === void 0 ? void 0 : options.topic) ? errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnectExisting\n                    : errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnect);\n                throw new Error((options === null || options === void 0 ? void 0 : options.topic) ? errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnectExisting\n                    : errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToConnect);\n            }\n        });\n    }\n    login(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isInitializing = true;\n            if (typeof this.walletConnector === \"undefined\") {\n                yield this.connect();\n            }\n            if (typeof this.walletConnector === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session !== \"undefined\") {\n                yield this.logout({ topic: (_a = this.session) === null || _a === void 0 ? void 0 : _a.topic });\n            }\n            try {\n                if (options && options.approval) {\n                    const session = yield options.approval();\n                    if (options.token) {\n                        const address = this.getAddressFromSession(session);\n                        const { signature } = yield this.walletConnector.request({\n                            chainId: `${this.namespace}:${this.chainId}`,\n                            topic: session.topic,\n                            request: {\n                                method: operation_1.Operation.SIGN_LOGIN_TOKEN,\n                                params: {\n                                    token: options.token,\n                                    address,\n                                },\n                            },\n                        });\n                        if (!signature) {\n                            logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToSignLoginToken);\n                            throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToSignLoginToken);\n                        }\n                        return yield this.onSessionConnected({\n                            session,\n                            signature,\n                        });\n                    }\n                    return yield this.onSessionConnected({\n                        session,\n                        signature: \"\",\n                    });\n                }\n            }\n            catch (error) {\n                this.reset();\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToLogin);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToLogin);\n            }\n            finally {\n                this.isInitializing = false;\n            }\n            return \"\";\n        });\n    }\n    /**\n     * Mocks a logout request by returning true\n     */\n    logout(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            try {\n                if (this.processingTopic ===\n                    ((options === null || options === void 0 ? void 0 : options.topic) || this.getCurrentTopic(this.walletConnector))) {\n                    return true;\n                }\n                if (options === null || options === void 0 ? void 0 : options.topic) {\n                    this.processingTopic = options.topic;\n                    yield this.walletConnector.disconnect({\n                        topic: options.topic,\n                        reason: utils_1.getSdkError(\"USER_DISCONNECTED\"),\n                    });\n                }\n                else {\n                    const currentSessionTopic = this.getCurrentTopic(this.walletConnector);\n                    this.processingTopic = currentSessionTopic;\n                    yield this.walletConnector.disconnect({\n                        topic: currentSessionTopic,\n                        reason: utils_1.getSdkError(\"USER_DISCONNECTED\"),\n                    });\n                    this.reset();\n                    yield this.cleanupPendingPairings({ deletePairings: true });\n                }\n            }\n            catch (_a) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.alreadyLoggedOut);\n            }\n            finally {\n                this.processingTopic = \"\";\n            }\n            return true;\n        });\n    }\n    /**\n     * Fetches the WalletConnect address\n     */\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            return this.address;\n        });\n    }\n    /**\n     * Fetches the WalletConnect signature\n     */\n    getSignature() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            return this.signature;\n        });\n    }\n    /**\n     * Fetches the WalletConnect pairings\n     */\n    getPairings() {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            return ((_e = (_d = (_c = (_b = (_a = this.walletConnector) === null || _a === void 0 ? void 0 : _a.core) === null || _b === void 0 ? void 0 : _b.pairing) === null || _c === void 0 ? void 0 : _c.pairings) === null || _d === void 0 ? void 0 : _d.getAll({ active: true })) !== null && _e !== void 0 ? _e : []);\n        });\n    }\n    /**\n     * Signs a message and returns it signed\n     * @param message\n     */\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n                this.onClientConnect.onClientLogout();\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            }\n            const address = yield this.getAddress();\n            const { signature } = yield this.walletConnector.request({\n                chainId: `${this.namespace}:${this.chainId}`,\n                topic: this.getCurrentTopic(this.walletConnector),\n                request: {\n                    method: operation_1.Operation.SIGN_MESSAGE,\n                    params: {\n                        address,\n                        message: message.message.toString(),\n                    },\n                },\n            });\n            if (!signature) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageResponse);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageResponse);\n            }\n            try {\n                message.applySignature(new primitives_1.Signature(signature), userAddress_1.UserAddress.fromBech32(address));\n            }\n            catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageSignature);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidMessageSignature);\n            }\n            return message;\n        });\n    }\n    /**\n     * Signs a transaction and returns it signed\n     * @param transaction\n     */\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n                this.onClientConnect.onClientLogout();\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            }\n            const address = yield this.getAddress();\n            const sender = new primitives_1.Address(address);\n            const wcTransaction = transaction.toPlainObject(sender);\n            if (this.chainId !== transaction.getChainID().valueOf()) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n            }\n            try {\n                const { signature } = yield this.walletConnector.request({\n                    chainId: `${this.namespace}:${this.chainId}`,\n                    topic: this.getCurrentTopic(this.walletConnector),\n                    request: {\n                        method: operation_1.Operation.SIGN_TRANSACTION,\n                        params: {\n                            transaction: wcTransaction,\n                        },\n                    },\n                });\n                if (!signature) {\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                    throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                }\n                transaction.applySignature(primitives_1.Signature.fromHex(signature), userAddress_1.UserAddress.fromBech32(address));\n                return transaction;\n            }\n            catch (error) {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.transactionError);\n            }\n        });\n    }\n    /**\n     * Signs an array of transactions and returns it signed\n     * @param transactions\n     */\n    signTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n                this.onClientConnect.onClientLogout();\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            }\n            const address = yield this.getAddress();\n            const sender = new primitives_1.Address(address);\n            const wcTransactions = transactions.map((transaction) => {\n                if (this.chainId !== transaction.getChainID().valueOf()) {\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                    throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.requestDifferentChain);\n                }\n                return transaction.toPlainObject(sender);\n            });\n            try {\n                const { signatures } = yield this.walletConnector.request({\n                    chainId: `${this.namespace}:${this.chainId}`,\n                    topic: this.getCurrentTopic(this.walletConnector),\n                    request: {\n                        method: operation_1.Operation.SIGN_TRANSACTIONS,\n                        params: {\n                            transactions: wcTransactions,\n                        },\n                    },\n                });\n                if (!signatures || !Array.isArray(signatures)) {\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidTransactionResponse);\n                }\n                if (transactions.length !== signatures.length) {\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidTransactionResponse);\n                }\n                for (const [index, transaction] of transactions.entries()) {\n                    transaction.applySignature(primitives_1.Signature.fromHex(signatures[index].signature), userAddress_1.UserAddress.fromBech32(address));\n                }\n                return transactions;\n            }\n            catch (error) {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.transactionError);\n            }\n        });\n    }\n    /**\n     * Sends a custom request\n     * @param request\n     */\n    sendCustomRequest(options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n                this.onClientConnect.onClientLogout();\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            }\n            if ((_a = options === null || options === void 0 ? void 0 : options.request) === null || _a === void 0 ? void 0 : _a.method) {\n                const request = Object.assign({}, options.request);\n                let { method } = request;\n                const { response } = yield this.walletConnector.request({\n                    chainId: `${this.namespace}:${this.chainId}`,\n                    topic: this.getCurrentTopic(this.walletConnector),\n                    request: Object.assign(Object.assign({}, request), { method }),\n                });\n                if (!response) {\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidCustomRequestResponse);\n                    throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidCustomRequestResponse);\n                }\n                return response;\n            }\n        });\n    }\n    /**\n     * Ping helper\n     */\n    ping() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (typeof this.session === \"undefined\") {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            }\n            try {\n                const topic = this.getCurrentTopic(this.walletConnector);\n                yield this.walletConnector.ping({\n                    topic,\n                });\n                return true;\n            }\n            catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.pingFailed);\n                return false;\n            }\n        });\n    }\n    loginAccount(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!options) {\n                return \"\";\n            }\n            if (this.addressIsValid(options.address)) {\n                this.address = options.address;\n                if (options.signature) {\n                    this.signature = options.signature;\n                }\n                this.onClientConnect.onClientLogin();\n                return this.address;\n            }\n            logger_1.Logger.error(`${errors_1.WalletConnectV2ProviderErrorMessagesEnum.invalidAddress} ${options.address}`);\n            if (this.walletConnector) {\n                yield this.logout();\n            }\n            return \"\";\n        });\n    }\n    onSessionConnected(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!options) {\n                return \"\";\n            }\n            this.session = options.session;\n            const address = this.getAddressFromSession(options.session);\n            if (address) {\n                yield this.loginAccount({ address, signature: options.signature });\n                return address;\n            }\n            return \"\";\n        });\n    }\n    handleTopicUpdateEvent({ topic, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            try {\n                const existingPairings = yield this.getPairings();\n                if (this.address && !this.isInitializing && existingPairings) {\n                    if ((existingPairings === null || existingPairings === void 0 ? void 0 : existingPairings.length) === 0) {\n                        this.onClientConnect.onClientLogout();\n                    }\n                    else {\n                        const lastActivePairing = existingPairings[existingPairings.length - 1];\n                        if ((lastActivePairing === null || lastActivePairing === void 0 ? void 0 : lastActivePairing.topic) === topic) {\n                            this.onClientConnect.onClientLogout();\n                        }\n                    }\n                }\n            }\n            catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleTopic);\n            }\n            finally {\n                this.pairings = yield this.getPairings();\n            }\n        });\n    }\n    handleSessionEvents({ topic, params, }) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            if (this.session && ((_a = this.session) === null || _a === void 0 ? void 0 : _a.topic) !== topic) {\n                return;\n            }\n            const { event } = params;\n            if ((event === null || event === void 0 ? void 0 : event.name) && this.getCurrentTopic(this.walletConnector) === topic) {\n                const eventData = event.data;\n                this.onClientConnect.onClientEvent(eventData);\n            }\n        });\n    }\n    subscribeToEvents(client) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof client === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            try {\n                // Session Events\n                client.on(\"session_update\", ({ topic, params }) => {\n                    var _a;\n                    if (!this.session || ((_a = this.session) === null || _a === void 0 ? void 0 : _a.topic) !== topic) {\n                        return;\n                    }\n                    const { namespaces } = params;\n                    const _session = client.session.get(topic);\n                    const updatedSession = Object.assign(Object.assign({}, _session), { namespaces });\n                    this.onSessionConnected({ session: updatedSession });\n                });\n                client.on(\"session_event\", this.handleSessionEvents.bind(this));\n                client.on(\"session_delete\", ({ topic }) => __awaiter(this, void 0, void 0, function* () {\n                    var _e;\n                    if (!this.session || ((_e = this.session) === null || _e === void 0 ? void 0 : _e.topic) !== topic) {\n                        return;\n                    }\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionDeleted);\n                    this.onClientConnect.onClientLogout();\n                    this.reset();\n                    yield this.cleanupPendingPairings({ deletePairings: true });\n                }));\n                client.on(\"session_expire\", ({ topic }) => __awaiter(this, void 0, void 0, function* () {\n                    var _f;\n                    if (!this.session || ((_f = this.session) === null || _f === void 0 ? void 0 : _f.topic) !== topic) {\n                        return;\n                    }\n                    logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionExpired);\n                    this.onClientConnect.onClientLogout();\n                    this.reset();\n                    yield this.cleanupPendingPairings({ deletePairings: true });\n                }));\n                // Pairing Events\n                (_b = (_a = client.core) === null || _a === void 0 ? void 0 : _a.pairing) === null || _b === void 0 ? void 0 : _b.events.on(\"pairing_delete\", this.handleTopicUpdateEvent.bind(this));\n                (_d = (_c = client.core) === null || _c === void 0 ? void 0 : _c.pairing) === null || _d === void 0 ? void 0 : _d.events.on(\"pairing_expire\", this.handleTopicUpdateEvent.bind(this));\n            }\n            catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleEvent);\n            }\n        });\n    }\n    checkPersistedState(client) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof client === \"undefined\") {\n                throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n            }\n            this.pairings = yield this.getPairings();\n            if (typeof this.session !== \"undefined\") {\n                return;\n            }\n            // Populates existing session to state (assume only the top one)\n            if (client.session.length && !this.address && !this.isInitializing) {\n                const session = this.getCurrentSession(client);\n                if (session) {\n                    yield this.onSessionConnected({ session });\n                    return session;\n                }\n            }\n            return;\n        });\n    }\n    cleanupPendingPairings(options = {}) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.walletConnector === \"undefined\") {\n                return;\n            }\n            try {\n                const inactivePairings = (_c = (_b = (_a = this.walletConnector.core) === null || _a === void 0 ? void 0 : _a.pairing) === null || _b === void 0 ? void 0 : _b.pairings) === null || _c === void 0 ? void 0 : _c.getAll();\n                if (!utils_1.isValidArray(inactivePairings)) {\n                    return;\n                }\n                for (const pairing of inactivePairings) {\n                    if (options.deletePairings) {\n                        (_e = (_d = this.walletConnector.core) === null || _d === void 0 ? void 0 : _d.expirer) === null || _e === void 0 ? void 0 : _e.set(pairing.topic, 0);\n                    }\n                    else {\n                        yield ((_h = (_g = (_f = this.walletConnector.core) === null || _f === void 0 ? void 0 : _f.relayer) === null || _g === void 0 ? void 0 : _g.subscriber) === null || _h === void 0 ? void 0 : _h.unsubscribe(pairing.topic));\n                    }\n                }\n            }\n            catch (error) {\n                logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.unableToHandleCleanup);\n            }\n        });\n    }\n    getCurrentSession(client) {\n        if (typeof client === \"undefined\") {\n            throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n        }\n        const acknowledgedSessions = client\n            .find(this.getConnectionParams())\n            .filter((s) => s.acknowledged);\n        if (acknowledgedSessions.length > 0) {\n            const lastKeyIndex = acknowledgedSessions.length - 1;\n            const session = acknowledgedSessions[lastKeyIndex];\n            return session;\n        }\n        else if (client.session.length > 0) {\n            const lastKeyIndex = client.session.keys.length - 1;\n            const session = client.session.get(client.session.keys[lastKeyIndex]);\n            return session;\n        }\n        else {\n            logger_1.Logger.error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n            throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n        }\n    }\n    getCurrentTopic(client) {\n        if (typeof client === \"undefined\") {\n            throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.notInitialized);\n        }\n        const session = this.getCurrentSession(client);\n        if (session === null || session === void 0 ? void 0 : session.topic) {\n            return session.topic;\n        }\n        else {\n            throw new Error(errors_1.WalletConnectV2ProviderErrorMessagesEnum.sessionNotConnected);\n        }\n    }\n    getConnectionParams(options) {\n        var _a, _b;\n        const methods = [\n            ...constants_1.WALLETCONNECT_MULTIVERSX_METHODS,\n            ...((_a = options === null || options === void 0 ? void 0 : options.methods) !== null && _a !== void 0 ? _a : []),\n        ];\n        const chains = [`${constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE}:${this.chainId}`];\n        const events = (_b = options === null || options === void 0 ? void 0 : options.events) !== null && _b !== void 0 ? _b : [];\n        return {\n            requiredNamespaces: {\n                [constants_1.WALLETCONNECT_MULTIVERSX_NAMESPACE]: {\n                    methods,\n                    chains,\n                    events,\n                },\n            },\n        };\n    }\n    addressIsValid(destinationAddress) {\n        try {\n            const addr = userAddress_1.UserAddress.fromBech32(destinationAddress);\n            return !!addr;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    getAddressFromSession(session) {\n        const selectedNamespace = session.namespaces[this.namespace];\n        if (selectedNamespace && selectedNamespace.accounts) {\n            // Use only the first address in case of multiple provided addresses\n            const currentSession = selectedNamespace.accounts[0];\n            const [namespace, reference, address] = currentSession.split(\":\");\n            return address;\n        }\n        return \"\";\n    }\n}\nexports.WalletConnectV2Provider = WalletConnectV2Provider;\n//# sourceMappingURL=walletConnectV2Provider.js.map"]},"metadata":{},"sourceType":"script"}