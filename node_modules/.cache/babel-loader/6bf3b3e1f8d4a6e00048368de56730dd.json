{"ast":null,"code":"import{dAppName}from'config';import withPageTitle from'./components/PageTitle';import{Admin}from'./pages/Admin';import{Dashboard}from'./pages/Dashboard';import{Home}from'./pages/Home';export var routeNames={home:'/',dashboard:'/dashboard',transaction:'/transaction',unlock:'/unlock',ledger:'/ledger',walletconnect:'/walletconnect',admin:'/admin'};var routes=[{path:routeNames.home,title:'Home',component:Home},{path:routeNames.dashboard,title:'Dashboard',component:Dashboard,authenticatedRoute:true},{path:routeNames.admin,title:'Admin',component:Admin}];var mappedRoutes=routes.map(function(route){var title=route.title?\"\".concat(route.title,\" \\u2022 MultiversX \").concat(dAppName):\"MultiversX \".concat(dAppName);var requiresAuth=Boolean(route.authenticatedRoute);var wrappedComponent=withPageTitle(title,route.component);return{path:route.path,component:wrappedComponent,authenticatedRoute:requiresAuth};});export default mappedRoutes;","map":{"version":3,"names":["dAppName","withPageTitle","Admin","Dashboard","Home","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","admin","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","concat","requiresAuth","Boolean","wrappedComponent"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/routes.ts"],"sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport { Admin } from './pages/Admin';\nimport { Dashboard } from './pages/Dashboard';\nimport { Home } from './pages/Home';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  admin: '/admin'\n};\n\nconst routes: RouteType[] = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.admin,\n    title: 'Admin',\n    component: Admin\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} â€¢ MultiversX ${dAppName}`\n    : `MultiversX ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"],"mappings":"AACA,OAASA,QAAQ,KAAQ,QAAQ,CACjC,MAAO,CAAAC,aAAa,KAAM,wBAAwB,CAElD,OAASC,KAAK,KAAQ,eAAe,CACrC,OAASC,SAAS,KAAQ,mBAAmB,CAC7C,OAASC,IAAI,KAAQ,cAAc,CASnC,MAAO,IAAM,CAAAC,UAAU,CAAG,CACxBC,IAAI,CAAE,GAAG,CACTC,SAAS,CAAE,YAAY,CACvBC,WAAW,CAAE,cAAc,CAC3BC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,SAAS,CACjBC,aAAa,CAAE,gBAAgB,CAC/BC,KAAK,CAAE,QACT,CAAC,CAED,GAAM,CAAAC,MAAmB,CAAG,CAC1B,CACEC,IAAI,CAAET,UAAU,CAACC,IAAI,CACrBS,KAAK,CAAE,MAAM,CACbC,SAAS,CAAEZ,IACb,CAAC,CACD,CACEU,IAAI,CAAET,UAAU,CAACE,SAAS,CAC1BQ,KAAK,CAAE,WAAW,CAClBC,SAAS,CAAEb,SAAS,CACpBc,kBAAkB,CAAE,IACtB,CAAC,CACD,CACEH,IAAI,CAAET,UAAU,CAACO,KAAK,CACtBG,KAAK,CAAE,OAAO,CACdC,SAAS,CAAEd,KACb,CAAC,CACF,CAED,GAAM,CAAAgB,YAAY,CAAGL,MAAM,CAACM,GAAG,CAAC,SAACC,KAAK,CAAK,CACzC,GAAM,CAAAL,KAAK,CAAGK,KAAK,CAACL,KAAK,IAAAM,MAAA,CAClBD,KAAK,CAACL,KAAK,wBAAAM,MAAA,CAAiBrB,QAAQ,gBAAAqB,MAAA,CACzBrB,QAAQ,CAAE,CAE5B,GAAM,CAAAsB,YAAY,CAAGC,OAAO,CAACH,KAAK,CAACH,kBAAkB,CAAC,CACtD,GAAM,CAAAO,gBAAgB,CAAGvB,aAAa,CAACc,KAAK,CAAEK,KAAK,CAACJ,SAAS,CAAC,CAE9D,MAAO,CACLF,IAAI,CAAEM,KAAK,CAACN,IAAI,CAChBE,SAAS,CAAEQ,gBAAgB,CAC3BP,kBAAkB,CAAEK,YACtB,CAAC,CACH,CAAC,CAAC,CAEF,cAAe,CAAAJ,YAAY"},"metadata":{},"sourceType":"module"}