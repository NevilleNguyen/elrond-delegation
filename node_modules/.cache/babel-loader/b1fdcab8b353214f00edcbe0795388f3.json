{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperaProvider = void 0;\nvar errors_1 = require(\"./errors\");\nvar OperaProvider = /*#__PURE__*/function () {\n  function OperaProvider() {\n    _classCallCheck(this, OperaProvider);\n    this.account = {\n      address: \"\"\n    };\n    this.initialized = false;\n    if (OperaProvider._instance) {\n      throw new Error(\"Error: Instantiation failed: Use OperaProvider.getInstance() instead of new.\");\n    }\n    OperaProvider._instance = this;\n  }\n  _createClass(OperaProvider, [{\n    key: \"setAddress\",\n    value: function setAddress(address) {\n      this.account.address = address;\n      return OperaProvider._instance;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(window && window.elrond && window.isOpera && !this.initialized)) {\n                _context.next = 10;\n                break;\n              }\n              _context.prev = 1;\n              _context.next = 4;\n              return window.elrond.init();\n            case 4:\n              this.initialized = _context.sent;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              this.initialized = false;\n            case 10:\n              return _context.abrupt(\"return\", this.initialized);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        token = _ref.token;\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.initialized) {\n                _context2.next = 2;\n                break;\n              }\n              throw new Error(\"Opera provider is not initialised, call init() first\");\n            case 2:\n              _context2.prev = 2;\n              _context2.next = 5;\n              return window.elrond.login(token);\n            case 5:\n              this.account.address = _context2.sent;\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](2);\n              throw _context2.t0;\n            case 11:\n              return _context2.abrupt(\"return\", this.account.address);\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.initialized) {\n                _context3.next = 2;\n                break;\n              }\n              throw new Error(\"Opera provider is not initialised, call init() first\");\n            case 2:\n              _context3.prev = 2;\n              _context3.next = 5;\n              return window.elrond.logout();\n            case 5:\n              this.disconnect();\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.warn(\"Opera logout operation failed!\", _context3.t0);\n            case 11:\n              return _context3.abrupt(\"return\", true);\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 8]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.account = {\n        address: \"\"\n      };\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this.initialized) {\n                _context4.next = 2;\n                break;\n              }\n              throw new Error(\"Opera provider is not initialised, call init() first\");\n            case 2:\n              return _context4.abrupt(\"return\", this.account ? this.account.address : \"\");\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n    }\n  }, {\n    key: \"isInitialized\",\n    value: function isInitialized() {\n      return this.initialized;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return Boolean(this.account.address);\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var signedTransactions;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.signTransactions([transaction]);\n            case 2:\n              signedTransactions = _context5.sent;\n              if (!(signedTransactions.length != 1)) {\n                _context5.next = 5;\n                break;\n              }\n              throw new errors_1.ErrCannotSignSingleTransaction();\n            case 5:\n              return _context5.abrupt(\"return\", signedTransactions[0]);\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"signTransactions\",\n    value: function signTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              this.ensureConnected();\n              _context6.next = 4;\n              return window.elrond.signTransactions(transactions);\n            case 4:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              throw _context6.t0;\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              this.ensureConnected();\n              _context7.next = 4;\n              return window.elrond.signMessage(message);\n            case 4:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              throw _context7.t0;\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n    }\n  }, {\n    key: \"cancelAction\",\n    value: function cancelAction() {\n      //opera does not have a cancel action method implemented\n      return false;\n    }\n  }, {\n    key: \"ensureConnected\",\n    value: function ensureConnected() {\n      if (!this.account.address) {\n        throw new errors_1.ErrAccountNotConnected();\n      }\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      return OperaProvider._instance;\n    }\n  }]);\n  return OperaProvider;\n}();\nexports.OperaProvider = OperaProvider;\nOperaProvider._instance = new OperaProvider();","map":{"version":3,"sources":["../src/operaProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperaProvider = void 0;\nconst errors_1 = require(\"./errors\");\nclass OperaProvider {\n    constructor() {\n        this.account = { address: \"\" };\n        this.initialized = false;\n        if (OperaProvider._instance) {\n            throw new Error(\"Error: Instantiation failed: Use OperaProvider.getInstance() instead of new.\");\n        }\n        OperaProvider._instance = this;\n    }\n    static getInstance() {\n        return OperaProvider._instance;\n    }\n    setAddress(address) {\n        this.account.address = address;\n        return OperaProvider._instance;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (window && window.elrond && window.isOpera && !this.initialized) {\n                try {\n                    this.initialized = yield window.elrond.init();\n                }\n                catch (error) {\n                    this.initialized = false;\n                }\n            }\n            return this.initialized;\n        });\n    }\n    login({ token, } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.initialized) {\n                throw new Error(\"Opera provider is not initialised, call init() first\");\n            }\n            try {\n                this.account.address = yield window.elrond.login(token);\n            }\n            catch (error) {\n                throw error;\n            }\n            return this.account.address;\n        });\n    }\n    logout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.initialized) {\n                throw new Error(\"Opera provider is not initialised, call init() first\");\n            }\n            try {\n                yield window.elrond.logout();\n                this.disconnect();\n            }\n            catch (error) {\n                console.warn(\"Opera logout operation failed!\", error);\n            }\n            return true;\n        });\n    }\n    disconnect() {\n        this.account = { address: \"\" };\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.initialized) {\n                throw new Error(\"Opera provider is not initialised, call init() first\");\n            }\n            return this.account ? this.account.address : \"\";\n        });\n    }\n    isInitialized() {\n        return this.initialized;\n    }\n    isConnected() {\n        return Boolean(this.account.address);\n    }\n    signTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signedTransactions = yield this.signTransactions([transaction]);\n            if (signedTransactions.length != 1) {\n                throw new errors_1.ErrCannotSignSingleTransaction();\n            }\n            return signedTransactions[0];\n        });\n    }\n    signTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.ensureConnected();\n                return yield window.elrond.signTransactions(transactions);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.ensureConnected();\n                return yield window.elrond.signMessage(message);\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    cancelAction() {\n        //opera does not have a cancel action method implemented\n        return false;\n    }\n    ensureConnected() {\n        if (!this.account.address) {\n            throw new errors_1.ErrAccountNotConnected();\n        }\n    }\n}\nexports.OperaProvider = OperaProvider;\nOperaProvider._instance = new OperaProvider();\n//# sourceMappingURL=operaProvider.js.map"]},"metadata":{},"sourceType":"script"}