{"ast":null,"code":"import _slicedToArray from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/neville/Documents/Github/elrond-delegation/src/pages/Admin/Admin.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useNavigate } from 'react-router-dom';\nimport { Cards } from 'components/Cards';\nimport { Heading } from 'components/Heading';\nimport { Nodes } from 'components/Nodes';\nimport { Toggles } from 'components/Toggles';\nimport { useGlobalContext } from 'context';\nimport useGlobalData from '../../hooks/useGlobalData';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Admin = function Admin() {\n  _s();\n  var _useGetAccountInfo = useGetAccountInfo(),\n    address = _useGetAccountInfo.address;\n  var _useGlobalContext = useGlobalContext(),\n    contractDetails = _useGlobalContext.contractDetails;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var navigate = useNavigate();\n  var handleRedirect = function handleRedirect() {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '30px'\n      },\n      className: \"d-flex align-items-center justify-content-center text-white flex-fill\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSpinner,\n        size: \"2x\",\n        spin: true,\n        className: \"mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.admin,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Toggles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Nodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n_s(Admin, \"Zrjpe3av1jfPxl/AhxuJ0qb4b5Q=\", false, function () {\n  return [useGetAccountInfo, useGlobalContext, useNavigate, useGlobalData];\n});\n_c = Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useEffect","useState","faSpinner","FontAwesomeIcon","useGetAccountInfo","useNavigate","Cards","Heading","Nodes","Toggles","useGlobalContext","useGlobalData","styles","jsxDEV","_jsxDEV","Admin","_s","_useGetAccountInfo","address","_useGlobalContext","contractDetails","_useState","_useState2","_slicedToArray","loading","setLoading","navigate","handleRedirect","Boolean","status","data","owner","style","fontSize","className","children","icon","size","spin","fileName","_jsxFileName","lineNumber","columnNumber","_this","admin","_c","$RefreshReg$"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/pages/Admin/Admin.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Cards } from 'components/Cards';\nimport { Heading } from 'components/Heading';\nimport { Nodes } from 'components/Nodes';\nimport { Toggles } from 'components/Toggles';\n\nimport { useGlobalContext } from 'context';\n\nimport useGlobalData from '../../hooks/useGlobalData';\nimport styles from './styles.module.scss';\n\nexport const Admin = () => {\n  const { address } = useGetAccountInfo();\n  const { contractDetails } = useGlobalContext();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.admin}>\n      <Heading />\n      <Cards />\n      <Toggles />\n      <Nodes />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}