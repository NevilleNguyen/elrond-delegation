{"ast":null,"code":"import _slicedToArray from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{createContext,useReducer,useContext}from'react';import{reducer}from'./reducer';import{initializer}from'./state';import{jsx as _jsx}from\"react/jsx-runtime\";var Context=/*#__PURE__*/createContext(undefined);var Dispatch=/*#__PURE__*/createContext(undefined);var ContextProvider=function ContextProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initializer),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(Context.Provider,{value:state,children:/*#__PURE__*/_jsx(Dispatch.Provider,{value:dispatch,children:children})});};var useGlobalContext=function useGlobalContext(){var context=useContext(Context);if(context===undefined){throw new Error('The useDispatch hook must be used within a Context.Provider');}else{return context;}};var useDispatch=function useDispatch(){var context=useContext(Dispatch);if(context===undefined){throw new Error('The useDispatch hook must be used within a Dispatch.Provider');}else{return context;}};export{ContextProvider,useGlobalContext,useDispatch};","map":{"version":3,"names":["React","createContext","useReducer","useContext","reducer","initializer","jsx","_jsx","Context","undefined","Dispatch","ContextProvider","_ref","children","_useReducer","_useReducer2","_slicedToArray","state","dispatch","Provider","value","useGlobalContext","context","Error","useDispatch"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/context/index.tsx"],"sourcesContent":["import React from 'react';\nimport { ReactNode, createContext, useReducer, useContext } from 'react';\n\nimport { DispatchType, reducer } from './reducer';\nimport { StateType, initializer } from './state';\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst Dispatch = createContext<DispatchType | undefined>(undefined);\n\nconst ContextProvider = ({ children }: ContextType) => {\n  const [state, dispatch] = useReducer(reducer, initializer);\n\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst useDispatch = () => {\n  const context = useContext(Dispatch);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Dispatch.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nexport { ContextProvider, useGlobalContext, useDispatch };\n"],"mappings":"uIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAAoBC,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAExE,OAAuBC,OAAO,KAAQ,WAAW,CACjD,OAAoBC,WAAW,KAAQ,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAMjD,GAAM,CAAAC,OAAO,cAAGP,aAAa,CAAwBQ,SAAS,CAAC,CAC/D,GAAM,CAAAC,QAAQ,cAAGT,aAAa,CAA2BQ,SAAS,CAAC,CAEnE,GAAM,CAAAE,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAAC,IAAA,CAAkC,IAA5B,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACjC,IAAAC,WAAA,CAA0BZ,UAAU,CAACE,OAAO,CAAEC,WAAW,CAAC,CAAAU,YAAA,CAAAC,cAAA,CAAAF,WAAA,IAAnDG,KAAK,CAAAF,YAAA,IAAEG,QAAQ,CAAAH,YAAA,IAEtB,mBACER,IAAA,CAACC,OAAO,CAACW,QAAQ,EAACC,KAAK,CAAEH,KAAM,CAAAJ,QAAA,cAC7BN,IAAA,CAACG,QAAQ,CAACS,QAAQ,EAACC,KAAK,CAAEF,QAAS,CAAAL,QAAA,CAAEA,QAAQ,EAAqB,EACjD,CAEvB,CAAC,CAED,GAAM,CAAAQ,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC7B,GAAM,CAAAC,OAAO,CAAGnB,UAAU,CAACK,OAAO,CAAC,CAEnC,GAAIc,OAAO,GAAKb,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAc,KAAK,CACb,6DAA6D,CAC9D,CACH,CAAC,IAAM,CACL,MAAO,CAAAD,OAAO,CAChB,CACF,CAAC,CAED,GAAM,CAAAE,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAM,CAAAF,OAAO,CAAGnB,UAAU,CAACO,QAAQ,CAAC,CAEpC,GAAIY,OAAO,GAAKb,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAc,KAAK,CACb,8DAA8D,CAC/D,CACH,CAAC,IAAM,CACL,MAAO,CAAAD,OAAO,CAChB,CACF,CAAC,CAED,OAASX,eAAe,CAAEU,gBAAgB,CAAEG,WAAW"},"metadata":{},"sourceType":"module"}