{"ast":null,"code":"var _jsxFileName = \"/Users/neville/Documents/Github/elrond-delegation/src/App.tsx\",\n  _this = this;\nimport React from 'react';\nimport { NotificationModal } from '@multiversx/sdk-dapp/UI/NotificationModal';\nimport { SignTransactionsModals } from '@multiversx/sdk-dapp/UI/SignTransactionsModals';\nimport { TransactionsToastList } from '@multiversx/sdk-dapp/UI/TransactionsToastList';\nimport { DappProvider } from '@multiversx/sdk-dapp/wrappers/DappProvider';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport { Layout } from 'components/Layout';\nimport { network } from 'config';\nimport { ContextProvider } from 'context';\nimport { PageNotFound } from 'pages/PageNotFound';\nimport { Unlock } from 'pages/Unlock';\nimport routes, { routeNames } from 'routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var App = function App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(DappProvider, {\n      environment: network.id,\n      customNetworkConfig: {\n        name: 'customConfig',\n        apiTimeout: 6000,\n        walletConnectV2ProjectId: '9b1a9564f91cb659ffe21b73d5c4e2d8'\n      },\n      children: /*#__PURE__*/_jsxDEV(ContextProvider, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: [/*#__PURE__*/_jsxDEV(TransactionsToastList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(SignTransactionsModals, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(NotificationModal, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: routeNames.unlock,\n              element: /*#__PURE__*/_jsxDEV(Unlock, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 54\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, _this), routes.map(function (route, index) {\n              return /*#__PURE__*/_jsxDEV(Route, {\n                path: route.path,\n                element: /*#__PURE__*/_jsxDEV(route.component, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 26\n                }, _this)\n              }, 'route-key-' + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 15\n              }, _this);\n            }), /*#__PURE__*/_jsxDEV(Route, {\n              element: PageNotFound\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, _this);\n};\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotificationModal","SignTransactionsModals","TransactionsToastList","DappProvider","Route","Routes","BrowserRouter","Layout","network","ContextProvider","PageNotFound","Unlock","routes","routeNames","jsxDEV","_jsxDEV","App","children","environment","id","customNetworkConfig","name","apiTimeout","walletConnectV2ProjectId","fileName","_jsxFileName","lineNumber","columnNumber","_this","path","unlock","element","map","route","index","component","_c","$RefreshReg$"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NotificationModal } from '@multiversx/sdk-dapp/UI/NotificationModal';\nimport { SignTransactionsModals } from '@multiversx/sdk-dapp/UI/SignTransactionsModals';\nimport { TransactionsToastList } from '@multiversx/sdk-dapp/UI/TransactionsToastList';\nimport { DappProvider } from '@multiversx/sdk-dapp/wrappers/DappProvider';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\n\nimport { Layout } from 'components/Layout';\nimport { network } from 'config';\nimport { ContextProvider } from 'context';\nimport { PageNotFound } from 'pages/PageNotFound';\nimport { Unlock } from 'pages/Unlock';\nimport routes, { routeNames } from 'routes';\n\nexport const App = () => (\n  <BrowserRouter>\n    <DappProvider\n      environment={network.id}\n      customNetworkConfig={{\n        name: 'customConfig',\n        apiTimeout: 6000,\n        walletConnectV2ProjectId: '9b1a9564f91cb659ffe21b73d5c4e2d8'\n      }}\n    >\n      <ContextProvider>\n        <Layout>\n          <TransactionsToastList />\n          <SignTransactionsModals />\n          <NotificationModal />\n\n          <Routes>\n            <Route path={routeNames.unlock} element={<Unlock />} />\n\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n\n            <Route element={PageNotFound} />\n          </Routes>\n        </Layout>\n      </ContextProvider>\n    </DappProvider>\n  </BrowserRouter>\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}