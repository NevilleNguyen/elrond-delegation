{"ast":null,"code":"import BigNumber from 'bignumber.js';\nexport default function nominate(input, paramDenomination) {\n  var parts = input.toString().split('.');\n  var denomination = paramDenomination !== undefined ? paramDenomination : 18;\n  if (parts[1]) {\n    // remove trailing zeros\n    while (parts[1].substring(parts[1].length - 1) === '0' && parts[1].length > 1) {\n      parts[1] = parts[1].substring(0, parts[1].length - 1);\n    }\n  }\n  var count = parts[1] ? denomination - parts[1].length : denomination;\n  count = count < 0 ? 0 : count;\n  var transformed = parts.join('') + '0'.repeat(count);\n\n  // remove beginning zeros\n  while (transformed.substring(0, 1) === '0' && transformed.length > 1) {\n    transformed = transformed.substring(1);\n  }\n  return transformed;\n}\nexport var nominateVal = function nominateVal(value) {\n  var perc = (parseFloat(value) * 100).toString(16);\n  if (perc.length % 2 !== 0) {\n    perc = '0' + perc;\n  }\n  return perc;\n};\nexport var nominateValToHex = function nominateValToHex(value) {\n  var val = value && value.length > 0 ? new BigNumber(nominate(value)).toString(16) : '0';\n  if (val.length % 2 !== 0) {\n    val = '0' + val;\n  }\n  return val;\n};","map":{"version":3,"names":["BigNumber","nominate","input","paramDenomination","parts","toString","split","denomination","undefined","substring","length","count","transformed","join","repeat","nominateVal","value","perc","parseFloat","nominateValToHex","val"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/helpers/nominate.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nexport default function nominate(input: string, paramDenomination?: number) {\n  const parts = input.toString().split('.');\n  const denomination = paramDenomination !== undefined ? paramDenomination : 18;\n\n  if (parts[1]) {\n    // remove trailing zeros\n    while (\n      parts[1].substring(parts[1].length - 1) === '0' &&\n      parts[1].length > 1\n    ) {\n      parts[1] = parts[1].substring(0, parts[1].length - 1);\n    }\n  }\n\n  let count = parts[1] ? denomination - parts[1].length : denomination;\n\n  count = count < 0 ? 0 : count;\n\n  let transformed = parts.join('') + '0'.repeat(count);\n\n  // remove beginning zeros\n  while (transformed.substring(0, 1) === '0' && transformed.length > 1) {\n    transformed = transformed.substring(1);\n  }\n\n  return transformed;\n}\n\nexport const nominateVal = (value: string) => {\n  let perc = (parseFloat(value) * 100).toString(16);\n  if (perc.length % 2 !== 0) {\n    perc = '0' + perc;\n  }\n  return perc;\n};\n\nexport const nominateValToHex = (value: string) => {\n  let val =\n    value && value.length > 0\n      ? new BigNumber(nominate(value)).toString(16)\n      : '0';\n\n  if (val.length % 2 !== 0) {\n    val = '0' + val;\n  }\n\n  return val;\n};\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,cAAc;AAEpC,eAAe,SAASC,QAAQA,CAACC,KAAa,EAAEC,iBAA0B,EAAE;EAC1E,IAAMC,KAAK,GAAGF,KAAK,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EACzC,IAAMC,YAAY,GAAGJ,iBAAiB,KAAKK,SAAS,GAAGL,iBAAiB,GAAG,EAAE;EAE7E,IAAIC,KAAK,CAAC,CAAC,CAAC,EAAE;IACZ;IACA,OACEA,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,CAACL,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,IAC/CN,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,GAAG,CAAC,EACnB;MACAN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,CAAC,CAAC,EAAEL,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,GAAG,CAAC,CAAC;IACvD;EACF;EAEA,IAAIC,KAAK,GAAGP,KAAK,CAAC,CAAC,CAAC,GAAGG,YAAY,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,GAAGH,YAAY;EAEpEI,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGA,KAAK;EAE7B,IAAIC,WAAW,GAAGR,KAAK,CAACS,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAACC,MAAM,CAACH,KAAK,CAAC;;EAEpD;EACA,OAAOC,WAAW,CAACH,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,IAAIG,WAAW,CAACF,MAAM,GAAG,CAAC,EAAE;IACpEE,WAAW,GAAGA,WAAW,CAACH,SAAS,CAAC,CAAC,CAAC;EACxC;EAEA,OAAOG,WAAW;AACpB;AAEA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAa,EAAK;EAC5C,IAAIC,IAAI,GAAG,CAACC,UAAU,CAACF,KAAK,CAAC,GAAG,GAAG,EAAEX,QAAQ,CAAC,EAAE,CAAC;EACjD,IAAIY,IAAI,CAACP,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACzBO,IAAI,GAAG,GAAG,GAAGA,IAAI;EACnB;EACA,OAAOA,IAAI;AACb,CAAC;AAED,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIH,KAAa,EAAK;EACjD,IAAII,GAAG,GACLJ,KAAK,IAAIA,KAAK,CAACN,MAAM,GAAG,CAAC,GACrB,IAAIV,SAAS,CAACC,QAAQ,CAACe,KAAK,CAAC,CAAC,CAACX,QAAQ,CAAC,EAAE,CAAC,GAC3C,GAAG;EAET,IAAIe,GAAG,CAACV,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IACxBU,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjB;EAEA,OAAOA,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module"}