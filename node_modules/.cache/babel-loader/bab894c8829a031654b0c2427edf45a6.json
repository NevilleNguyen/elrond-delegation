{"ast":null,"code":"import _assertThisInitialized from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createClass from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nvar TransportError = /*#__PURE__*/function (_Error) {\n  _inherits(TransportError, _Error);\n  var _super = _createSuper(TransportError);\n  function TransportError(reason, description, context) {\n    var _this;\n    _classCallCheck(this, TransportError);\n    _this = _super.call(this, reason);\n    _this.description = description;\n    _this.context = context;\n    _this.type = \"TransportError\";\n    return _this;\n  }\n  return _createClass(TransportError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport var Transport = /*#__PURE__*/function (_Emitter) {\n  _inherits(Transport, _Emitter);\n  var _super2 = _createSuper(Transport);\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  function Transport(opts) {\n    var _this2;\n    _classCallCheck(this, Transport);\n    _this2 = _super2.call(this);\n    _this2.writable = false;\n    installTimerFunctions(_assertThisInitialized(_this2), opts);\n    _this2.opts = opts;\n    _this2.query = opts.query;\n    _this2.readyState = \"\";\n    _this2.socket = opts.socket;\n    return _this2;\n  }\n  /**\n   * Emits an error.\n   *\n   * @param {String} reason\n   * @param description\n   * @param context - the error context\n   * @return {Transport} for chaining\n   * @api protected\n   */\n  _createClass(Transport, [{\n    key: \"onError\",\n    value: function onError(reason, description, context) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"error\", new TransportError(reason, description, context));\n      return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (\"closed\" === this.readyState || \"\" === this.readyState) {\n        this.readyState = \"opening\";\n        this.doOpen();\n      }\n      return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n        this.doClose();\n        this.onClose();\n      }\n      return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n  }, {\n    key: \"send\",\n    value: function send(packets) {\n      if (\"open\" === this.readyState) {\n        this.write(packets);\n      } else {\n        // this might happen if the transport was silently closed in the beforeunload event handler\n      }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.readyState = \"open\";\n      this.writable = true;\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var packet = decodePacket(data, this.socket.binaryType);\n      this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n  }, {\n    key: \"onPacket\",\n    value: function onPacket(packet) {\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n  }, {\n    key: \"onClose\",\n    value: function onClose(details) {\n      this.readyState = \"closed\";\n      _get(_getPrototypeOf(Transport.prototype), \"emitReserved\", this).call(this, \"close\", details);\n    }\n  }]);\n  return Transport;\n}(Emitter);","map":{"version":3,"names":["decodePacket","Emitter","installTimerFunctions","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","call","type","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","opts","_this2","writable","_assertThisInitialized","query","readyState","socket","key","value","onError","_get","_getPrototypeOf","prototype","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","data","packet","binaryType","onPacket","details"],"sources":["/Users/neville/Documents/Github/elrond-delegation/node_modules/engine.io-client/build/esm/transport.js"],"sourcesContent":["import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}