{"ast":null,"code":"import _objectSpread from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var reducer=function reducer(state,action){switch(action.type){case'getUsersNumber':{return _objectSpread(_objectSpread({},state),{},{usersNumber:action.usersNumber});}case'getContractDetails':{return _objectSpread(_objectSpread({},state),{},{contractDetails:action.contractDetails});}case'getNodesNumber':{return _objectSpread(_objectSpread({},state),{},{nodesNumber:action.nodesNumber});}case'getNodesStates':{return _objectSpread(_objectSpread({},state),{},{nodesStates:action.nodesStates});}case'getTotalActiveStake':{return _objectSpread(_objectSpread({},state),{},{totalActiveStake:action.totalActiveStake});}case'getUserActiveStake':{return _objectSpread(_objectSpread({},state),{},{userActiveStake:action.userActiveStake});}case'getUndelegatedStakeList':{return _objectSpread(_objectSpread({},state),{},{undelegatedStakeList:action.undelegatedStakeList});}case'getUserClaimableRewards':{return _objectSpread(_objectSpread({},state),{},{userClaimableRewards:action.userClaimableRewards});}case'getNetworkConfig':{return _objectSpread(_objectSpread({},state),{},{networkConfig:action.networkConfig});}case'getNetworkStatus':{return _objectSpread(_objectSpread({},state),{},{networkStatus:action.networkStatus});}case'getTotalNetworkStake':{return _objectSpread(_objectSpread({},state),{},{totalNetworkStake:action.totalNetworkStake});}case'getAgencyMetaData':{return _objectSpread(_objectSpread({},state),{},{agencyMetaData:action.agencyMetaData});}default:{throw new Error(\"Unhandled action type: \".concat(action));}}};export{reducer};","map":{"version":3,"names":["reducer","state","action","type","_objectSpread","usersNumber","contractDetails","nodesNumber","nodesStates","totalActiveStake","userActiveStake","undelegatedStakeList","userClaimableRewards","networkConfig","networkStatus","totalNetworkStake","agencyMetaData","Error","concat"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/context/reducer.tsx"],"sourcesContent":["import { StateType } from './state';\n\nexport type DispatchType = (action: any) => void;\nexport type ActionType =\n  | {\n      type: 'getUsersNumber';\n      usersNumber: StateType['usersNumber'];\n    }\n  | {\n      type: 'getContractDetails';\n      contractDetails: StateType['contractDetails'];\n    }\n  | {\n      type: 'getNodesNumber';\n      nodesNumber: StateType['nodesNumber'];\n    }\n  | {\n      type: 'getNodesStates';\n      nodesStates: StateType['nodesStates'];\n    }\n  | {\n      type: 'getTotalActiveStake';\n      totalActiveStake: StateType['totalActiveStake'];\n    }\n  | {\n      type: 'getUserActiveStake';\n      userActiveStake: StateType['userActiveStake'];\n    }\n  | {\n      type: 'getUndelegatedStakeList';\n      undelegatedStakeList: StateType['undelegatedStakeList'];\n    }\n  | {\n      type: 'getUserClaimableRewards';\n      userClaimableRewards: StateType['userClaimableRewards'];\n    }\n  | {\n      type: 'getNetworkConfig';\n      networkConfig: StateType['networkConfig'];\n    }\n  | {\n      type: 'getNetworkStatus';\n      networkStatus: StateType['networkStatus'];\n    }\n  | {\n      type: 'getTotalNetworkStake';\n      totalNetworkStake: StateType['totalNetworkStake'];\n    }\n  | {\n      type: 'getAgencyMetaData';\n      agencyMetaData: StateType['agencyMetaData'];\n    };\n\nconst reducer = (state: StateType, action: any) => {\n  switch (action.type) {\n    case 'getUsersNumber': {\n      return {\n        ...state,\n        usersNumber: action.usersNumber\n      };\n    }\n    case 'getContractDetails': {\n      return {\n        ...state,\n        contractDetails: action.contractDetails\n      };\n    }\n    case 'getNodesNumber': {\n      return {\n        ...state,\n        nodesNumber: action.nodesNumber\n      };\n    }\n    case 'getNodesStates': {\n      return {\n        ...state,\n        nodesStates: action.nodesStates\n      };\n    }\n    case 'getTotalActiveStake': {\n      return {\n        ...state,\n        totalActiveStake: action.totalActiveStake\n      };\n    }\n    case 'getUserActiveStake': {\n      return {\n        ...state,\n        userActiveStake: action.userActiveStake\n      };\n    }\n    case 'getUndelegatedStakeList': {\n      return {\n        ...state,\n        undelegatedStakeList: action.undelegatedStakeList\n      };\n    }\n    case 'getUserClaimableRewards': {\n      return {\n        ...state,\n        userClaimableRewards: action.userClaimableRewards\n      };\n    }\n    case 'getNetworkConfig': {\n      return {\n        ...state,\n        networkConfig: action.networkConfig\n      };\n    }\n    case 'getNetworkStatus': {\n      return {\n        ...state,\n        networkStatus: action.networkStatus\n      };\n    }\n    case 'getTotalNetworkStake': {\n      return {\n        ...state,\n        totalNetworkStake: action.totalNetworkStake\n      };\n    }\n    case 'getAgencyMetaData': {\n      return {\n        ...state,\n        agencyMetaData: action.agencyMetaData\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action}`);\n    }\n  }\n};\n\nexport { reducer };\n"],"mappings":"sIAqDA,GAAM,CAAAA,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAgB,CAAEC,MAAW,CAAK,CACjD,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,gBAAgB,CAAE,CACrB,OAAAC,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRI,WAAW,CAAEH,MAAM,CAACG,WAAW,GAEnC,CACA,IAAK,oBAAoB,CAAE,CACzB,OAAAD,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRK,eAAe,CAAEJ,MAAM,CAACI,eAAe,GAE3C,CACA,IAAK,gBAAgB,CAAE,CACrB,OAAAF,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRM,WAAW,CAAEL,MAAM,CAACK,WAAW,GAEnC,CACA,IAAK,gBAAgB,CAAE,CACrB,OAAAH,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRO,WAAW,CAAEN,MAAM,CAACM,WAAW,GAEnC,CACA,IAAK,qBAAqB,CAAE,CAC1B,OAAAJ,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRQ,gBAAgB,CAAEP,MAAM,CAACO,gBAAgB,GAE7C,CACA,IAAK,oBAAoB,CAAE,CACzB,OAAAL,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRS,eAAe,CAAER,MAAM,CAACQ,eAAe,GAE3C,CACA,IAAK,yBAAyB,CAAE,CAC9B,OAAAN,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRU,oBAAoB,CAAET,MAAM,CAACS,oBAAoB,GAErD,CACA,IAAK,yBAAyB,CAAE,CAC9B,OAAAP,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRW,oBAAoB,CAAEV,MAAM,CAACU,oBAAoB,GAErD,CACA,IAAK,kBAAkB,CAAE,CACvB,OAAAR,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRY,aAAa,CAAEX,MAAM,CAACW,aAAa,GAEvC,CACA,IAAK,kBAAkB,CAAE,CACvB,OAAAT,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRa,aAAa,CAAEZ,MAAM,CAACY,aAAa,GAEvC,CACA,IAAK,sBAAsB,CAAE,CAC3B,OAAAV,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRc,iBAAiB,CAAEb,MAAM,CAACa,iBAAiB,GAE/C,CACA,IAAK,mBAAmB,CAAE,CACxB,OAAAX,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRe,cAAc,CAAEd,MAAM,CAACc,cAAc,GAEzC,CACA,QAAS,CACP,KAAM,IAAI,CAAAC,KAAK,2BAAAC,MAAA,CAA2BhB,MAAM,EAAG,CACrD,CAAC,CAEL,CAAC,CAED,OAASF,OAAO"},"metadata":{},"sourceType":"module"}