{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Address, AddressValue, Query, ContractFunction, decodeBigNumber } from '@multiversx/sdk-core';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\nimport BigNumber from 'bignumber.js';\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\nvar useStakeData = function useStakeData() {\n  _s();\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    check = _useState2[0],\n    setCheck = _useState2[1];\n  var _useGetAccountInfo = useGetAccountInfo(),\n    account = _useGetAccountInfo.account,\n    address = _useGetAccountInfo.address;\n  var _useTransaction = useTransaction(),\n    sendTransaction = _useTransaction.sendTransaction;\n  var _useGetActiveTransact = useGetActiveTransactionsStatus(),\n    pending = _useGetActiveTransact.pending;\n  var _useGetSuccessfulTran = useGetSuccessfulTransactions(),\n    hasSuccessfulTransactions = _useGetSuccessfulTran.hasSuccessfulTransactions,\n    successfulTransactionsArray = _useGetSuccessfulTran.successfulTransactionsArray;\n  var _useGlobalContext = useGlobalContext(),\n    contractDetails = _useGlobalContext.contractDetails,\n    userClaimableRewards = _useGlobalContext.userClaimableRewards,\n    totalActiveStake = _useGlobalContext.totalActiveStake;\n  var onDelegate = function onDelegate(callback) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return sendTransaction({\n                value: data.amount,\n                type: 'delegate',\n                args: ''\n              });\n            case 3:\n              setTimeout(callback, 250);\n              _context.next = 9;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n  var onUndelegate = function onUndelegate(callback) {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data) {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return sendTransaction({\n                value: '0',\n                type: 'unDelegate',\n                args: nominateValToHex(data.amount.toString())\n              });\n            case 3:\n              setTimeout(callback, 250);\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 6]]);\n      }));\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  };\n  var onRedelegate = function onRedelegate(callback) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return sendTransaction({\n              value: '0',\n              type: 'reDelegateRewards',\n              args: ''\n            });\n          case 3:\n            setTimeout(callback, 250);\n            _context3.next = 9;\n            break;\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 6]]);\n    }));\n  };\n  var onClaimRewards = function onClaimRewards(callback) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return sendTransaction({\n              value: '0',\n              type: 'claimRewards',\n              args: ''\n            });\n          case 3:\n            setTimeout(callback, 250);\n            _context4.next = 9;\n            break;\n          case 6:\n            _context4.prev = 6;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 6]]);\n    }));\n  };\n  var getStakingLimits = function getStakingLimits() {\n    if (contractDetails.data && totalActiveStake.data) {\n      var balance = new BigNumber(account.balance);\n      var gasPrice = new BigNumber('12000000');\n      var gasLimit = new BigNumber('12000000');\n      var available = balance.minus(gasPrice.times(gasLimit));\n      var dustful = available.minus(new BigNumber(minDust)).toFixed();\n      if (contractDetails.data.withDelegationCap === 'true') {\n        var cap = contractDetails.data.delegationCap;\n        var stake = totalActiveStake.data;\n        var remainder = new BigNumber(cap).minus(new BigNumber(stake));\n        var maxed = parseInt(getPercentage(denominated(stake), denominated(cap))) >= 100;\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available.toFixed(),\n            limit: dustful,\n            maxed: maxed\n          };\n        } else {\n          return {\n            balance: available.toFixed(),\n            limit: remainder.gt(0) ? remainder.toFixed() : '0',\n            maxed: maxed\n          };\n        }\n      } else {\n        return {\n          balance: available.toFixed(),\n          limit: dustful,\n          maxed: false\n        };\n      }\n    }\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n  var getUserClaimableRewards = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var provider, query, data, _data$getReturnDataPa, _data$getReturnDataPa2, claimableRewards;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: 'getUserClaimableRewards',\n              userClaimableRewards: {\n                status: 'loading',\n                data: null,\n                error: null\n              }\n            });\n            _context5.prev = 1;\n            provider = new ProxyNetworkProvider(network.gatewayAddress);\n            query = new Query({\n              address: new Address(network.delegationContract),\n              func: new ContractFunction('getClaimableRewards'),\n              args: [new AddressValue(new Address(address))]\n            });\n            _context5.next = 6;\n            return provider.queryContract(query);\n          case 6:\n            data = _context5.sent;\n            _data$getReturnDataPa = data.getReturnDataParts(), _data$getReturnDataPa2 = _slicedToArray(_data$getReturnDataPa, 1), claimableRewards = _data$getReturnDataPa2[0];\n            dispatch({\n              type: 'getUserClaimableRewards',\n              userClaimableRewards: {\n                status: 'loaded',\n                error: null,\n                data: claimableRewards ? denominated(decodeBigNumber(claimableRewards).toFixed(), {\n                  decimals: 4\n                }) : '0'\n              }\n            });\n            _context5.next = 14;\n            break;\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](1);\n            dispatch({\n              type: 'getUserClaimableRewards',\n              userClaimableRewards: {\n                status: 'error',\n                data: null,\n                error: _context5.t0\n              }\n            });\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[1, 11]]);\n    }));\n    return function getUserClaimableRewards() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchClaimableRewards = function fetchClaimableRewards() {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n  var reFetchClaimableRewards = function reFetchClaimableRewards() {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      getUserClaimableRewards();\n    }\n  };\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [hasSuccessfulTransactions, successfulTransactionsArray.length]);\n  useEffect(function () {\n    if (pending && !check) {\n      setCheck(true);\n      return function () {\n        setCheck(false);\n      };\n    }\n  }, [pending]);\n  return {\n    onDelegate: onDelegate,\n    onUndelegate: onUndelegate,\n    onRedelegate: onRedelegate,\n    onClaimRewards: onClaimRewards,\n    getStakingLimits: getStakingLimits\n  };\n};\n_s(useStakeData, \"j57Hv+W1GzROzhUG84kFyu4c8ws=\", false, function () {\n  return [useDispatch, useGetAccountInfo, useTransaction, useGetActiveTransactionsStatus, useGetSuccessfulTransactions, useGlobalContext];\n});\nexport default useStakeData;","map":{"version":3,"names":["useEffect","useState","Address","AddressValue","Query","ContractFunction","decodeBigNumber","useGetAccountInfo","useGetActiveTransactionsStatus","useGetSuccessfulTransactions","ProxyNetworkProvider","BigNumber","network","minDust","useDispatch","useGlobalContext","denominated","getPercentage","nominateValToHex","useTransaction","useStakeData","_s","dispatch","_useState","_useState2","_slicedToArray","check","setCheck","_useGetAccountInfo","account","address","_useTransaction","sendTransaction","_useGetActiveTransact","pending","_useGetSuccessfulTran","hasSuccessfulTransactions","successfulTransactionsArray","_useGlobalContext","contractDetails","userClaimableRewards","totalActiveStake","onDelegate","callback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","value","amount","type","args","setTimeout","t0","console","error","stop","_x","apply","arguments","onUndelegate","_ref2","_callee2","_callee2$","_context2","toString","_x2","onRedelegate","_callee3","_callee3$","_context3","onClaimRewards","_callee4","_callee4$","_context4","getStakingLimits","balance","gasPrice","gasLimit","available","minus","times","dustful","toFixed","withDelegationCap","cap","delegationCap","stake","remainder","maxed","parseInt","isGreaterThan","limit","gt","getUserClaimableRewards","_ref5","_callee5","provider","query","_data$getReturnDataPa","_data$getReturnDataPa2","claimableRewards","_callee5$","_context5","status","gatewayAddress","delegationContract","func","queryContract","sent","getReturnDataParts","decimals","fetchClaimableRewards","reFetchClaimableRewards","length"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/components/Stake/hooks/index.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport {\n  Address,\n  AddressValue,\n  Query,\n  ContractFunction,\n  decodeBigNumber\n} from '@multiversx/sdk-core';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\nimport BigNumber from 'bignumber.js';\n\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nexport type ActionCallbackType = () => void;\nexport interface DelegationPayloadType {\n  amount: string;\n}\n\nconst useStakeData = () => {\n  const dispatch = useDispatch();\n  const [check, setCheck] = useState(false);\n\n  const { account, address } = useGetAccountInfo();\n  const { sendTransaction } = useTransaction();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n  const { contractDetails, userClaimableRewards, totalActiveStake } =\n    useGlobalContext();\n\n  const onDelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: data.amount,\n          type: 'delegate',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onUndelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'unDelegate',\n          args: nominateValToHex(data.amount.toString())\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onRedelegate =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'reDelegateRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onClaimRewards =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'claimRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const getStakingLimits = () => {\n    if (contractDetails.data && totalActiveStake.data) {\n      const balance = new BigNumber(account.balance);\n      const gasPrice = new BigNumber('12000000');\n      const gasLimit = new BigNumber('12000000');\n      const available = balance.minus(gasPrice.times(gasLimit));\n      const dustful = available.minus(new BigNumber(minDust)).toFixed();\n\n      if (contractDetails.data.withDelegationCap === 'true') {\n        const cap = contractDetails.data.delegationCap;\n        const stake = totalActiveStake.data;\n        const remainder = new BigNumber(cap).minus(new BigNumber(stake));\n        const maxed =\n          parseInt(getPercentage(denominated(stake), denominated(cap))) >= 100;\n\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available.toFixed(),\n            limit: dustful,\n            maxed\n          };\n        } else {\n          return {\n            balance: available.toFixed(),\n            limit: remainder.gt(0) ? remainder.toFixed() : '0',\n            maxed\n          };\n        }\n      } else {\n        return {\n          balance: available.toFixed(),\n          limit: dustful,\n          maxed: false\n        };\n      }\n    }\n\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n\n  const getUserClaimableRewards = async (): Promise<void> => {\n    dispatch({\n      type: 'getUserClaimableRewards',\n      userClaimableRewards: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getClaimableRewards'),\n        args: [new AddressValue(new Address(address))]\n      });\n\n      const data = await provider.queryContract(query);\n      const [claimableRewards] = data.getReturnDataParts();\n\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'loaded',\n          error: null,\n          data: claimableRewards\n            ? denominated(decodeBigNumber(claimableRewards).toFixed(), {\n                decimals: 4\n              })\n            : '0'\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchClaimableRewards = () => {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  const reFetchClaimableRewards = () => {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      getUserClaimableRewards();\n    }\n  };\n\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  useEffect(() => {\n    if (pending && !check) {\n      setCheck(true);\n\n      return () => {\n        setCheck(false);\n      };\n    }\n  }, [pending]);\n\n  return {\n    onDelegate,\n    onUndelegate,\n    onRedelegate,\n    onClaimRewards,\n    getStakingLimits\n  };\n};\n\nexport default useStakeData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}