{"ast":null,"code":"import _regeneratorRuntime from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{Address,AddressValue,Query,ContractFunction,decodeBigNumber}from'@multiversx/sdk-core';import{useGetAccountInfo}from'@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';import{useGetActiveTransactionsStatus}from'@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';import{useGetSuccessfulTransactions}from'@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';import{ProxyNetworkProvider}from'@multiversx/sdk-network-providers';import BigNumber from'bignumber.js';import{network,minDust}from'config';import{useDispatch,useGlobalContext}from'context';import{denominated}from'helpers/denominate';import getPercentage from'helpers/getPercentage';import{nominateValToHex}from'helpers/nominate';import useTransaction from'helpers/useTransaction';var useStakeData=function useStakeData(){var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),check=_useState2[0],setCheck=_useState2[1];var _useGetAccountInfo=useGetAccountInfo(),account=_useGetAccountInfo.account,address=_useGetAccountInfo.address;var _useTransaction=useTransaction(),sendTransaction=_useTransaction.sendTransaction;var _useGetActiveTransact=useGetActiveTransactionsStatus(),pending=_useGetActiveTransact.pending;var _useGetSuccessfulTran=useGetSuccessfulTransactions(),hasSuccessfulTransactions=_useGetSuccessfulTran.hasSuccessfulTransactions,successfulTransactionsArray=_useGetSuccessfulTran.successfulTransactionsArray;var _useGlobalContext=useGlobalContext(),contractDetails=_useGlobalContext.contractDetails,userClaimableRewards=_useGlobalContext.userClaimableRewards,totalActiveStake=_useGlobalContext.totalActiveStake;var onDelegate=function onDelegate(callback){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return sendTransaction({value:data.amount,type:'delegate',args:''});case 3:setTimeout(callback,250);_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 9:case\"end\":return _context.stop();}},_callee,null,[[0,6]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var onUndelegate=function onUndelegate(callback){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return sendTransaction({value:'0',type:'unDelegate',args:nominateValToHex(data.amount.toString())});case 3:setTimeout(callback,250);_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 9:case\"end\":return _context2.stop();}},_callee2,null,[[0,6]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var onRedelegate=function onRedelegate(callback){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return sendTransaction({value:'0',type:'reDelegateRewards',args:''});case 3:setTimeout(callback,250);_context3.next=9;break;case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 9:case\"end\":return _context3.stop();}},_callee3,null,[[0,6]]);}));};var onClaimRewards=function onClaimRewards(callback){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return sendTransaction({value:'0',type:'claimRewards',args:''});case 3:setTimeout(callback,250);_context4.next=9;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);case 9:case\"end\":return _context4.stop();}},_callee4,null,[[0,6]]);}));};var getStakingLimits=function getStakingLimits(){if(contractDetails.data&&totalActiveStake.data){var balance=new BigNumber(account.balance);var gasPrice=new BigNumber('12000000');var gasLimit=new BigNumber('12000000');var available=balance.minus(gasPrice.times(gasLimit));var dustful=available.minus(new BigNumber(minDust)).toFixed();if(contractDetails.data.withDelegationCap==='true'){var cap=contractDetails.data.delegationCap;var stake=totalActiveStake.data;var remainder=new BigNumber(cap).minus(new BigNumber(stake));var maxed=parseInt(getPercentage(denominated(stake),denominated(cap)))>=100;if(remainder.isGreaterThan(available)){return{balance:available.toFixed(),limit:dustful,maxed:maxed};}else{return{balance:available.toFixed(),limit:remainder.gt(0)?remainder.toFixed():'0',maxed:maxed};}}else{return{balance:available.toFixed(),limit:dustful,maxed:false};}}return{balance:'',limit:''};};var getUserClaimableRewards=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var provider,query,data,_data$getReturnDataPa,_data$getReturnDataPa2,claimableRewards;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'loading',data:null,error:null}});_context5.prev=1;provider=new ProxyNetworkProvider(network.gatewayAddress);query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getClaimableRewards'),args:[new AddressValue(new Address(address))]});_context5.next=6;return provider.queryContract(query);case 6:data=_context5.sent;_data$getReturnDataPa=data.getReturnDataParts(),_data$getReturnDataPa2=_slicedToArray(_data$getReturnDataPa,1),claimableRewards=_data$getReturnDataPa2[0];dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'loaded',error:null,data:claimableRewards?denominated(decodeBigNumber(claimableRewards).toFixed(),{decimals:4}):'0'}});_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](1);dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'error',data:null,error:_context5.t0}});case 14:case\"end\":return _context5.stop();}},_callee5,null,[[1,11]]);}));return function getUserClaimableRewards(){return _ref5.apply(this,arguments);};}();var fetchClaimableRewards=function fetchClaimableRewards(){if(!userClaimableRewards.data){getUserClaimableRewards();}};var reFetchClaimableRewards=function reFetchClaimableRewards(){if(hasSuccessfulTransactions&&successfulTransactionsArray.length>0){getUserClaimableRewards();}};useEffect(fetchClaimableRewards,[userClaimableRewards.data]);useEffect(reFetchClaimableRewards,[hasSuccessfulTransactions,successfulTransactionsArray.length]);useEffect(function(){if(pending&&!check){setCheck(true);return function(){setCheck(false);};}},[pending]);return{onDelegate:onDelegate,onUndelegate:onUndelegate,onRedelegate:onRedelegate,onClaimRewards:onClaimRewards,getStakingLimits:getStakingLimits};};export default useStakeData;","map":{"version":3,"names":["useEffect","useState","Address","AddressValue","Query","ContractFunction","decodeBigNumber","useGetAccountInfo","useGetActiveTransactionsStatus","useGetSuccessfulTransactions","ProxyNetworkProvider","BigNumber","network","minDust","useDispatch","useGlobalContext","denominated","getPercentage","nominateValToHex","useTransaction","useStakeData","dispatch","_useState","_useState2","_slicedToArray","check","setCheck","_useGetAccountInfo","account","address","_useTransaction","sendTransaction","_useGetActiveTransact","pending","_useGetSuccessfulTran","hasSuccessfulTransactions","successfulTransactionsArray","_useGlobalContext","contractDetails","userClaimableRewards","totalActiveStake","onDelegate","callback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_callee$","_context","prev","next","value","amount","type","args","setTimeout","t0","console","error","stop","_x","apply","arguments","onUndelegate","_ref2","_callee2","_callee2$","_context2","toString","_x2","onRedelegate","_callee3","_callee3$","_context3","onClaimRewards","_callee4","_callee4$","_context4","getStakingLimits","balance","gasPrice","gasLimit","available","minus","times","dustful","toFixed","withDelegationCap","cap","delegationCap","stake","remainder","maxed","parseInt","isGreaterThan","limit","gt","getUserClaimableRewards","_ref5","_callee5","provider","query","_data$getReturnDataPa","_data$getReturnDataPa2","claimableRewards","_callee5$","_context5","status","gatewayAddress","delegationContract","func","queryContract","sent","getReturnDataParts","decimals","fetchClaimableRewards","reFetchClaimableRewards","length"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/components/Stake/hooks/index.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport {\n  Address,\n  AddressValue,\n  Query,\n  ContractFunction,\n  decodeBigNumber\n} from '@multiversx/sdk-core';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport { useGetSuccessfulTransactions } from '@multiversx/sdk-dapp/hooks/transactions/useGetSuccessfulTransactions';\nimport { ProxyNetworkProvider } from '@multiversx/sdk-network-providers';\nimport BigNumber from 'bignumber.js';\n\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nexport type ActionCallbackType = () => void;\nexport interface DelegationPayloadType {\n  amount: string;\n}\n\nconst useStakeData = () => {\n  const dispatch = useDispatch();\n  const [check, setCheck] = useState(false);\n\n  const { account, address } = useGetAccountInfo();\n  const { sendTransaction } = useTransaction();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { hasSuccessfulTransactions, successfulTransactionsArray } =\n    useGetSuccessfulTransactions();\n  const { contractDetails, userClaimableRewards, totalActiveStake } =\n    useGlobalContext();\n\n  const onDelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: data.amount,\n          type: 'delegate',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onUndelegate =\n    (callback: ActionCallbackType) =>\n    async (data: DelegationPayloadType): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'unDelegate',\n          args: nominateValToHex(data.amount.toString())\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onRedelegate =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'reDelegateRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const onClaimRewards =\n    (callback: ActionCallbackType) => async (): Promise<void> => {\n      try {\n        await sendTransaction({\n          value: '0',\n          type: 'claimRewards',\n          args: ''\n        });\n\n        setTimeout(callback, 250);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n  const getStakingLimits = () => {\n    if (contractDetails.data && totalActiveStake.data) {\n      const balance = new BigNumber(account.balance);\n      const gasPrice = new BigNumber('12000000');\n      const gasLimit = new BigNumber('12000000');\n      const available = balance.minus(gasPrice.times(gasLimit));\n      const dustful = available.minus(new BigNumber(minDust)).toFixed();\n\n      if (contractDetails.data.withDelegationCap === 'true') {\n        const cap = contractDetails.data.delegationCap;\n        const stake = totalActiveStake.data;\n        const remainder = new BigNumber(cap).minus(new BigNumber(stake));\n        const maxed =\n          parseInt(getPercentage(denominated(stake), denominated(cap))) >= 100;\n\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available.toFixed(),\n            limit: dustful,\n            maxed\n          };\n        } else {\n          return {\n            balance: available.toFixed(),\n            limit: remainder.gt(0) ? remainder.toFixed() : '0',\n            maxed\n          };\n        }\n      } else {\n        return {\n          balance: available.toFixed(),\n          limit: dustful,\n          maxed: false\n        };\n      }\n    }\n\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n\n  const getUserClaimableRewards = async (): Promise<void> => {\n    dispatch({\n      type: 'getUserClaimableRewards',\n      userClaimableRewards: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getClaimableRewards'),\n        args: [new AddressValue(new Address(address))]\n      });\n\n      const data = await provider.queryContract(query);\n      const [claimableRewards] = data.getReturnDataParts();\n\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'loaded',\n          error: null,\n          data: claimableRewards\n            ? denominated(decodeBigNumber(claimableRewards).toFixed(), {\n                decimals: 4\n              })\n            : '0'\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchClaimableRewards = () => {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  const reFetchClaimableRewards = () => {\n    if (hasSuccessfulTransactions && successfulTransactionsArray.length > 0) {\n      getUserClaimableRewards();\n    }\n  };\n\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [\n    hasSuccessfulTransactions,\n    successfulTransactionsArray.length\n  ]);\n\n  useEffect(() => {\n    if (pending && !check) {\n      setCheck(true);\n\n      return () => {\n        setCheck(false);\n      };\n    }\n  }, [pending]);\n\n  return {\n    onDelegate,\n    onUndelegate,\n    onRedelegate,\n    onClaimRewards,\n    getStakingLimits\n  };\n};\n\nexport default useStakeData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}