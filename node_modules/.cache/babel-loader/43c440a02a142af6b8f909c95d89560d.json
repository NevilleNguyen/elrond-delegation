{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidatorPublicKey = exports.ValidatorSecretKey = exports.BLS = exports.VALIDATOR_PUBKEY_LENGTH = exports.VALIDATOR_SECRETKEY_LENGTH = void 0;\nvar assertions_1 = require(\"./assertions\");\nvar errors_1 = require(\"./errors\");\nvar pem_1 = require(\"./pem\");\nvar bls = require('@multiversx/sdk-bls-wasm');\nexports.VALIDATOR_SECRETKEY_LENGTH = 32;\nexports.VALIDATOR_PUBKEY_LENGTH = 96;\nvar BLS = /*#__PURE__*/function () {\n  function BLS() {\n    _classCallCheck(this, BLS);\n  }\n  _createClass(BLS, null, [{\n    key: \"initIfNecessary\",\n    value: function initIfNecessary() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!BLS.isInitialized) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.next = 4;\n              return bls.init(bls.BLS12_381);\n            case 4:\n              BLS.isInitialized = true;\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"guardInitialized\",\n    value: function guardInitialized() {\n      if (!BLS.isInitialized) {\n        throw new errors_1.ErrInvariantFailed(\"BLS modules are not initalized. Make sure that 'await BLS.initIfNecessary()' is called correctly.\");\n      }\n    }\n  }]);\n  return BLS;\n}();\nexports.BLS = BLS;\nBLS.isInitialized = false;\nvar ValidatorSecretKey = /*#__PURE__*/function () {\n  function ValidatorSecretKey(buffer) {\n    _classCallCheck(this, ValidatorSecretKey);\n    BLS.guardInitialized();\n    assertions_1.guardLength(buffer, exports.VALIDATOR_SECRETKEY_LENGTH);\n    this.secretKey = new bls.SecretKey();\n    this.secretKey.setLittleEndian(Uint8Array.from(buffer));\n    this.publicKey = this.secretKey.getPublicKey();\n  }\n  _createClass(ValidatorSecretKey, [{\n    key: \"generatePublicKey\",\n    value: function generatePublicKey() {\n      var buffer = Buffer.from(this.publicKey.serialize());\n      return new ValidatorPublicKey(buffer);\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(message) {\n      var signatureObject = this.secretKey.sign(message);\n      var signature = Buffer.from(signatureObject.serialize());\n      return signature;\n    }\n  }, {\n    key: \"hex\",\n    value: function hex() {\n      return this.valueOf().toString(\"hex\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return Buffer.from(this.secretKey.serialize());\n    }\n  }], [{\n    key: \"fromPem\",\n    value: function fromPem(text) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return pem_1.parseValidatorKey(text, index);\n    }\n  }]);\n  return ValidatorSecretKey;\n}();\nexports.ValidatorSecretKey = ValidatorSecretKey;\nvar ValidatorPublicKey = /*#__PURE__*/function () {\n  function ValidatorPublicKey(buffer) {\n    _classCallCheck(this, ValidatorPublicKey);\n    assertions_1.guardLength(buffer, exports.VALIDATOR_PUBKEY_LENGTH);\n    this.buffer = buffer;\n  }\n  _createClass(ValidatorPublicKey, [{\n    key: \"hex\",\n    value: function hex() {\n      return this.buffer.toString(\"hex\");\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.buffer;\n    }\n  }]);\n  return ValidatorPublicKey;\n}();\nexports.ValidatorPublicKey = ValidatorPublicKey;","map":{"version":3,"sources":["../src/validatorKeys.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidatorPublicKey = exports.ValidatorSecretKey = exports.BLS = exports.VALIDATOR_PUBKEY_LENGTH = exports.VALIDATOR_SECRETKEY_LENGTH = void 0;\nconst assertions_1 = require(\"./assertions\");\nconst errors_1 = require(\"./errors\");\nconst pem_1 = require(\"./pem\");\nconst bls = require('@multiversx/sdk-bls-wasm');\nexports.VALIDATOR_SECRETKEY_LENGTH = 32;\nexports.VALIDATOR_PUBKEY_LENGTH = 96;\nclass BLS {\n    static initIfNecessary() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (BLS.isInitialized) {\n                return;\n            }\n            yield bls.init(bls.BLS12_381);\n            BLS.isInitialized = true;\n        });\n    }\n    static guardInitialized() {\n        if (!BLS.isInitialized) {\n            throw new errors_1.ErrInvariantFailed(\"BLS modules are not initalized. Make sure that 'await BLS.initIfNecessary()' is called correctly.\");\n        }\n    }\n}\nexports.BLS = BLS;\nBLS.isInitialized = false;\nclass ValidatorSecretKey {\n    constructor(buffer) {\n        BLS.guardInitialized();\n        assertions_1.guardLength(buffer, exports.VALIDATOR_SECRETKEY_LENGTH);\n        this.secretKey = new bls.SecretKey();\n        this.secretKey.setLittleEndian(Uint8Array.from(buffer));\n        this.publicKey = this.secretKey.getPublicKey();\n    }\n    static fromPem(text, index = 0) {\n        return pem_1.parseValidatorKey(text, index);\n    }\n    generatePublicKey() {\n        let buffer = Buffer.from(this.publicKey.serialize());\n        return new ValidatorPublicKey(buffer);\n    }\n    sign(message) {\n        let signatureObject = this.secretKey.sign(message);\n        let signature = Buffer.from(signatureObject.serialize());\n        return signature;\n    }\n    hex() {\n        return this.valueOf().toString(\"hex\");\n    }\n    valueOf() {\n        return Buffer.from(this.secretKey.serialize());\n    }\n}\nexports.ValidatorSecretKey = ValidatorSecretKey;\nclass ValidatorPublicKey {\n    constructor(buffer) {\n        assertions_1.guardLength(buffer, exports.VALIDATOR_PUBKEY_LENGTH);\n        this.buffer = buffer;\n    }\n    hex() {\n        return this.buffer.toString(\"hex\");\n    }\n    valueOf() {\n        return this.buffer;\n    }\n}\nexports.ValidatorPublicKey = ValidatorPublicKey;\n//# sourceMappingURL=validatorKeys.js.map"]},"metadata":{},"sourceType":"script"}