{"ast":null,"code":"import { a as c } from \"./chunk-RLU4NPC4.js\";\nimport { a as p } from \"./chunk-KJE55U6V.js\";\nimport { a as t } from \"./chunk-D3V7IJCH.js\";\nimport { i as u } from \"./chunk-OWVDW4YO.js\";\nimport { k as l, m as d } from \"./chunk-HBP5N4FR.js\";\nd();\nu();\nvar S = function S(_ref) {\n  var e = _ref.input,\n    a = _ref.decodeMethod,\n    i = _ref.identifier;\n  var s = {\n    displayValue: \"\",\n    validationWarnings: []\n  };\n  if (e.includes(\"@\")) {\n    var r = e.split(\"@\"),\n      o = c({\n        parts: r,\n        identifier: i,\n        decodeMethod: a,\n        display: s\n      });\n    return s.displayValue = o.join(\"@\"), s;\n  }\n  if (e.includes(\"\\n\")) {\n    var _r = e.split(\"\\n\"),\n      _o = _r.map(function (n) {\n        var D = l.Buffer.from(String(n), \"base64\");\n        return a === \"raw\" ? n : t(D.toString(\"hex\"), a);\n      }),\n      y = a === \"smart\" ? p({\n        parts: _r,\n        decodedParts: _o,\n        identifier: i\n      }) : _o;\n    return s.displayValue = y.join(\"\\n\"), s;\n  }\n  return s.displayValue = t(e, a), s;\n};\nexport { S as a };","map":{"version":3,"names":["a","c","p","t","i","u","k","l","m","d","S","_ref","e","input","decodeMethod","identifier","s","displayValue","validationWarnings","includes","r","split","o","parts","display","join","map","n","D","Buffer","from","String","toString","y","decodedParts"],"sources":["/Users/neville/Documents/Github/elrond-delegation/node_modules/@multiversx/sdk-dapp/__chunks__/chunk-GYOCH7BN.js"],"sourcesContent":["import{a as c}from\"./chunk-RLU4NPC4.js\";import{a as p}from\"./chunk-KJE55U6V.js\";import{a as t}from\"./chunk-D3V7IJCH.js\";import{i as u}from\"./chunk-OWVDW4YO.js\";import{k as l,m as d}from\"./chunk-HBP5N4FR.js\";d();u();var S=({input:e,decodeMethod:a,identifier:i})=>{let s={displayValue:\"\",validationWarnings:[]};if(e.includes(\"@\")){let r=e.split(\"@\"),o=c({parts:r,identifier:i,decodeMethod:a,display:s});return s.displayValue=o.join(\"@\"),s}if(e.includes(`\n`)){let r=e.split(`\n`),o=r.map(n=>{let D=l.Buffer.from(String(n),\"base64\");return a===\"raw\"?n:t(D.toString(\"hex\"),a)}),y=a===\"smart\"?p({parts:r,decodedParts:o,identifier:i}):o;return s.displayValue=y.join(`\n`),s}return s.displayValue=t(e,a),s};export{S as a};\n//# sourceMappingURL=chunk-GYOCH7BN.js.map\n"],"mappings":"AAAA,SAAOA,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOD,CAAC,IAAIE,CAAC,QAAK,qBAAqB;AAAC,SAAOF,CAAC,IAAIG,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAAC,SAAOC,CAAC,IAAIC,CAAC,EAACC,CAAC,IAAIC,CAAC,QAAK,qBAAqB;AAACA,CAAC,EAAE;AAACJ,CAAC,EAAE;AAAC,IAAIK,CAAC,GAAC,SAAFA,CAACA,CAAAC,IAAA,EAA0C;EAAA,IAAjCC,CAAC,GAAAD,IAAA,CAAPE,KAAK;IAAgBb,CAAC,GAAAW,IAAA,CAAdG,YAAY;IAAcV,CAAC,GAAAO,IAAA,CAAZI,UAAU;EAAO,IAAIC,CAAC,GAAC;IAACC,YAAY,EAAC,EAAE;IAACC,kBAAkB,EAAC;EAAE,CAAC;EAAC,IAAGN,CAAC,CAACO,QAAQ,CAAC,GAAG,CAAC,EAAC;IAAC,IAAIC,CAAC,GAACR,CAAC,CAACS,KAAK,CAAC,GAAG,CAAC;MAACC,CAAC,GAACrB,CAAC,CAAC;QAACsB,KAAK,EAACH,CAAC;QAACL,UAAU,EAACX,CAAC;QAACU,YAAY,EAACd,CAAC;QAACwB,OAAO,EAACR;MAAC,CAAC,CAAC;IAAC,OAAOA,CAAC,CAACC,YAAY,GAACK,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,EAACT,CAAC;EAAA;EAAC,IAAGJ,CAAC,CAACO,QAAQ,MAChc,EAAC;IAAC,IAAIC,EAAC,GAACR,CAAC,CAACS,KAAK,MACf;MAACC,EAAC,GAACF,EAAC,CAACM,GAAG,CAAC,UAAAC,CAAC,EAAE;QAAC,IAAIC,CAAC,GAACrB,CAAC,CAACsB,MAAM,CAACC,IAAI,CAACC,MAAM,CAACJ,CAAC,CAAC,EAAC,QAAQ,CAAC;QAAC,OAAO3B,CAAC,KAAG,KAAK,GAAC2B,CAAC,GAACxB,CAAC,CAACyB,CAAC,CAACI,QAAQ,CAAC,KAAK,CAAC,EAAChC,CAAC,CAAC;MAAA,CAAC,CAAC;MAACiC,CAAC,GAACjC,CAAC,KAAG,OAAO,GAACE,CAAC,CAAC;QAACqB,KAAK,EAACH,EAAC;QAACc,YAAY,EAACZ,EAAC;QAACP,UAAU,EAACX;MAAC,CAAC,CAAC,GAACkB,EAAC;IAAC,OAAON,CAAC,CAACC,YAAY,GAACgB,CAAC,CAACR,IAAI,MACtL,EAACT,CAAC;EAAA;EAAC,OAAOA,CAAC,CAACC,YAAY,GAACd,CAAC,CAACS,CAAC,EAACZ,CAAC,CAAC,EAACgB,CAAC;AAAA,CAAC;AAAC,SAAON,CAAC,IAAIV,CAAC"},"metadata":{},"sourceType":"module"}