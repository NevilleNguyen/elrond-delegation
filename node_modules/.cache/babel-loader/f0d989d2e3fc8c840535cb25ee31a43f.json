{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TokenOperationsFactory = void 0;\nvar constants_1 = require(\"../constants\");\nvar networkParams_1 = require(\"../networkParams\");\nvar transaction_1 = require(\"../transaction\");\nvar transactionPayload_1 = require(\"../transactionPayload\");\nvar codec_1 = require(\"./codec\");\nvar TokenOperationsFactory = /*#__PURE__*/function () {\n  function TokenOperationsFactory(config) {\n    _classCallCheck(this, TokenOperationsFactory);\n    this.config = config;\n    this.trueAsHex = codec_1.utf8ToHex(\"true\");\n  }\n  _createClass(TokenOperationsFactory, [{\n    key: \"issueFungible\",\n    value: function issueFungible(args) {\n      var parts = [\"issue\", codec_1.utf8ToHex(args.tokenName), codec_1.utf8ToHex(args.tokenTicker), codec_1.bigIntToHex(args.initialSupply), codec_1.bigIntToHex(args.numDecimals)].concat(_toConsumableArray(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []), _toConsumableArray(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []), _toConsumableArray(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []), _toConsumableArray(args.canMint ? [codec_1.utf8ToHex(\"canMint\"), this.trueAsHex] : []), _toConsumableArray(args.canBurn ? [codec_1.utf8ToHex(\"canBurn\"), this.trueAsHex] : []), _toConsumableArray(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []), _toConsumableArray(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []), _toConsumableArray(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []));\n      return this.createTransaction({\n        sender: args.issuer,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        value: this.config.issueCost,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitIssue,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"issueSemiFungible\",\n    value: function issueSemiFungible(args) {\n      var parts = [\"issueSemiFungible\", codec_1.utf8ToHex(args.tokenName), codec_1.utf8ToHex(args.tokenTicker)].concat(_toConsumableArray(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []), _toConsumableArray(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []), _toConsumableArray(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []), _toConsumableArray(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []), _toConsumableArray(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []), _toConsumableArray(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []), _toConsumableArray(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []));\n      return this.createTransaction({\n        sender: args.issuer,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        value: this.config.issueCost,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitIssue,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"issueNonFungible\",\n    value: function issueNonFungible(args) {\n      var parts = [\"issueNonFungible\", codec_1.utf8ToHex(args.tokenName), codec_1.utf8ToHex(args.tokenTicker)].concat(_toConsumableArray(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []), _toConsumableArray(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []), _toConsumableArray(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []), _toConsumableArray(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []), _toConsumableArray(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []), _toConsumableArray(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []), _toConsumableArray(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []));\n      return this.createTransaction({\n        sender: args.issuer,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        value: this.config.issueCost,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitIssue,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"registerMetaESDT\",\n    value: function registerMetaESDT(args) {\n      var parts = [\"registerMetaESDT\", codec_1.utf8ToHex(args.tokenName), codec_1.utf8ToHex(args.tokenTicker), codec_1.bigIntToHex(args.numDecimals)].concat(_toConsumableArray(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []), _toConsumableArray(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []), _toConsumableArray(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []), _toConsumableArray(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []), _toConsumableArray(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []), _toConsumableArray(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []), _toConsumableArray(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []));\n      return this.createTransaction({\n        sender: args.issuer,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        value: this.config.issueCost,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitIssue,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"setSpecialRoleOnFungible\",\n    value: function setSpecialRoleOnFungible(args) {\n      var parts = [\"setSpecialRole\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)].concat(_toConsumableArray(args.addRoleLocalMint ? [codec_1.utf8ToHex(\"ESDTRoleLocalMint\")] : []), _toConsumableArray(args.addRoleLocalBurn ? [codec_1.utf8ToHex(\"ESDTRoleLocalBurn\")] : []));\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitSetSpecialRole,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"setSpecialRoleOnSemiFungible\",\n    value: function setSpecialRoleOnSemiFungible(args) {\n      var parts = [\"setSpecialRole\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)].concat(_toConsumableArray(args.addRoleNFTCreate ? [codec_1.utf8ToHex(\"ESDTRoleNFTCreate\")] : []), _toConsumableArray(args.addRoleNFTBurn ? [codec_1.utf8ToHex(\"ESDTRoleNFTBurn\")] : []), _toConsumableArray(args.addRoleNFTAddQuantity ? [codec_1.utf8ToHex(\"ESDTRoleNFTAddQuantity\")] : []), _toConsumableArray(args.addRoleESDTTransferRole ? [codec_1.utf8ToHex(\"ESDTTransferRole\")] : []));\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitSetSpecialRole,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"setSpecialRoleOnMetaESDT\",\n    value: function setSpecialRoleOnMetaESDT(args) {\n      return this.setSpecialRoleOnSemiFungible(args);\n    }\n  }, {\n    key: \"setSpecialRoleOnNonFungible\",\n    value: function setSpecialRoleOnNonFungible(args) {\n      var parts = [\"setSpecialRole\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)].concat(_toConsumableArray(args.addRoleNFTCreate ? [codec_1.utf8ToHex(\"ESDTRoleNFTCreate\")] : []), _toConsumableArray(args.addRoleNFTBurn ? [codec_1.utf8ToHex(\"ESDTRoleNFTBurn\")] : []), _toConsumableArray(args.addRoleNFTUpdateAttributes ? [codec_1.utf8ToHex(\"ESDTRoleNFTUpdateAttributes\")] : []), _toConsumableArray(args.addRoleNFTAddURI ? [codec_1.utf8ToHex(\"ESDTRoleNFTAddURI\")] : []), _toConsumableArray(args.addRoleESDTTransferRole ? [codec_1.utf8ToHex(\"ESDTTransferRole\")] : []));\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitSetSpecialRole,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"nftCreate\",\n    value: function nftCreate(args) {\n      var parts = [\"ESDTNFTCreate\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.initialQuantity), codec_1.utf8ToHex(args.name), codec_1.bigIntToHex(args.royalties), codec_1.utf8ToHex(args.hash), codec_1.bufferToHex(args.attributes)].concat(_toConsumableArray(args.uris.map(codec_1.utf8ToHex)));\n      // Note that the following is an approximation (a reasonable one):\n      var nftData = args.name + args.hash + args.attributes + args.uris.join(\"\");\n      var storageGasLimit = nftData.length * this.config.gasLimitStorePerByte.valueOf();\n      return this.createTransaction({\n        sender: args.creator,\n        receiver: args.creator,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTNFTCreate.valueOf() + storageGasLimit.valueOf(),\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"pause\",\n    value: function pause(args) {\n      var parts = [\"pause\", codec_1.utf8ToHex(args.tokenIdentifier)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitPausing,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"unpause\",\n    value: function unpause(args) {\n      var parts = [\"unPause\", codec_1.utf8ToHex(args.tokenIdentifier)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitPausing,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"freeze\",\n    value: function freeze(args) {\n      var parts = [\"freeze\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitFreezing,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"unfreeze\",\n    value: function unfreeze(args) {\n      var parts = [\"unFreeze\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitFreezing,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"wipe\",\n    value: function wipe(args) {\n      var parts = [\"wipe\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.addressToHex(args.user)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: this.config.esdtContractAddress,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitWiping,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"localMint\",\n    value: function localMint(args) {\n      var parts = [\"ESDTLocalMint\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.supplyToMint)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: args.manager,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTLocalMint,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"localBurn\",\n    value: function localBurn(args) {\n      var parts = [\"ESDTLocalBurn\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.supplyToBurn)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: args.manager,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTLocalBurn,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"updateAttributes\",\n    value: function updateAttributes(args) {\n      var parts = [\"ESDTNFTUpdateAttributes\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.tokenNonce), codec_1.bufferToHex(args.attributes)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: args.manager,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTNFTUpdateAttributes,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"addQuantity\",\n    value: function addQuantity(args) {\n      var parts = [\"ESDTNFTAddQuantity\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.tokenNonce), codec_1.bigIntToHex(args.quantityToAdd)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: args.manager,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTNFTAddQuantity,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"burnQuantity\",\n    value: function burnQuantity(args) {\n      var parts = [\"ESDTNFTBurn\", codec_1.utf8ToHex(args.tokenIdentifier), codec_1.bigIntToHex(args.tokenNonce), codec_1.bigIntToHex(args.quantityToBurn)];\n      return this.createTransaction({\n        sender: args.manager,\n        receiver: args.manager,\n        nonce: args.transactionNonce,\n        gasPrice: args.gasPrice,\n        gasLimitHint: args.gasLimit,\n        executionGasLimit: this.config.gasLimitESDTNFTBurn,\n        dataParts: parts\n      });\n    }\n  }, {\n    key: \"createTransaction\",\n    value: function createTransaction(_ref) {\n      var sender = _ref.sender,\n        receiver = _ref.receiver,\n        nonce = _ref.nonce,\n        value = _ref.value,\n        gasPrice = _ref.gasPrice,\n        gasLimitHint = _ref.gasLimitHint,\n        executionGasLimit = _ref.executionGasLimit,\n        dataParts = _ref.dataParts;\n      var payload = this.buildTransactionPayload(dataParts);\n      var gasLimit = gasLimitHint || this.computeGasLimit(payload, executionGasLimit);\n      var version = new networkParams_1.TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n      var options = new networkParams_1.TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n      return new transaction_1.Transaction({\n        chainID: this.config.chainID,\n        sender: sender,\n        receiver: receiver,\n        gasLimit: gasLimit,\n        gasPrice: gasPrice,\n        nonce: nonce || 0,\n        value: value || 0,\n        data: payload,\n        version: version,\n        options: options\n      });\n    }\n  }, {\n    key: \"buildTransactionPayload\",\n    value: function buildTransactionPayload(parts) {\n      var data = parts.join(constants_1.ARGUMENTS_SEPARATOR);\n      return new transactionPayload_1.TransactionPayload(data);\n    }\n  }, {\n    key: \"computeGasLimit\",\n    value: function computeGasLimit(payload, executionGas) {\n      var dataMovementGas = this.config.minGasLimit.valueOf() + this.config.gasLimitPerByte.valueOf() * payload.length();\n      return dataMovementGas + executionGas.valueOf();\n    }\n  }]);\n  return TokenOperationsFactory;\n}();\nexports.TokenOperationsFactory = TokenOperationsFactory;","map":{"version":3,"sources":["../../src/tokenOperations/tokenOperationsFactory.ts"],"names":[],"mappings":";;;;;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAA4E,IA8J/D,sBAAsB;EAI/B,SAAA,uBAAY,MAAe,EAAA;IAAA,eAAA,OAAA,sBAAA;IACvB,IAAI,CAAC,MAAM,GAAG,MAAM;IACpB,IAAI,CAAC,SAAS,GAAG,OAAA,CAAA,SAAS,CAAC,MAAM,CAAC;EACtC;EAAC,YAAA,CAAA,sBAAA;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,cAAc,IAAwB,EAAA;MAClC,IAAM,KAAK,IACP,OAAO,EACP,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAC3B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA,MAAA,CAAA,kBAAA,CACzB,IAAI,CAAC,SAAS,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CACxE,IAAI,CAAC,UAAU,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAChE,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EACvF;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;QAC5C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,kBAAkB,IAA4B,EAAA;MAC1C,IAAM,KAAK,IACP,mBAAmB,EACnB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA,MAAA,CAAA,kBAAA,CACvB,IAAI,CAAC,SAAS,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5D,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5F,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CACxE,IAAI,CAAC,UAAU,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAChE,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EACvF;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;QAC5C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,iBAAiB,IAA2B,EAAA;MACxC,IAAM,KAAK,IACP,kBAAkB,EAClB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA,MAAA,CAAA,kBAAA,CACvB,IAAI,CAAC,SAAS,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5D,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5F,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CACxE,IAAI,CAAC,UAAU,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAChE,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EACvF;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;QAC5C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,iBAAiB,IAAuB,EAAA;MACpC,IAAM,KAAK,IACP,kBAAkB,EAClB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EACzB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAC3B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAAA,MAAA,CAAA,kBAAA,CACzB,IAAI,CAAC,SAAS,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC9D,IAAI,CAAC,OAAO,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC1D,IAAI,CAAC,QAAQ,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5D,IAAI,CAAC,wBAAwB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,0BAA0B,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC5F,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CACxE,IAAI,CAAC,UAAU,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAA,kBAAA,CAChE,IAAI,CAAC,kBAAkB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EACvF;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa;QAC5C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,yBAAyB,IAAiC,EAAA;MACtD,IAAM,KAAK,IACP,gBAAgB,EAChB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA,MAAA,CAAA,kBAAA,CACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC7D,IAAI,CAAC,gBAAgB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE,EACpE;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB;QACrD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,6BAA6B,IAAqC,EAAA;MAC9D,IAAM,KAAK,IACP,gBAAgB,EAChB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA,MAAA,CAAA,kBAAA,CACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC7D,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,iBAAiB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CACzD,IAAI,CAAC,qBAAqB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,wBAAwB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CACvE,IAAI,CAAC,uBAAuB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAC1E;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB;QACrD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,yBAAyB,IAAqC,EAAA;MAC1D,OAAO,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC;IAClD;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,4BAA4B,IAAoC,EAAA;MAC5D,IAAM,KAAK,IACP,gBAAgB,EAChB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAA,MAAA,CAAA,kBAAA,CACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC7D,IAAI,CAAC,cAAc,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,iBAAiB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CACzD,IAAI,CAAC,0BAA0B,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,6BAA6B,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CACjF,IAAI,CAAC,gBAAgB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,mBAAmB,CAAC,CAAC,GAAG,EAAE,GAAA,kBAAA,CAC7D,IAAI,CAAC,uBAAuB,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAC1E;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB;QACrD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,UAAU,IAAoB,EAAA;MAC1B,IAAM,KAAK,IACP,eAAe,EACf,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,EACjC,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAC3B,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EACpB,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAAA,MAAA,CAAA,kBAAA,CACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAA,CAAA,SAAS,CAAC,EAC9B;MAED;MACA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;MAC5E,IAAM,eAAe,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,EAAE;MAEnF,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC,OAAO,EAAE;QAC1F,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,MAAM,IAAkB,EAAA;MACpB,IAAM,KAAK,GAAG,CACV,OAAO,EACP,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAClC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;QAC9C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,QAAQ,IAAkB,EAAA;MACtB,IAAM,KAAK,GAAG,CACV,SAAS,EACT,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAClC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,eAAe;QAC9C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,OAAO,IAAmB,EAAA;MACtB,IAAM,KAAK,GAAG,CACV,QAAQ,EACR,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1B;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB;QAC/C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,SAAS,IAAmB,EAAA;MACxB,IAAM,KAAK,GAAG,CACV,UAAU,EACV,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1B;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB;QAC/C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,KAAK,IAAiB,EAAA;MAClB,IAAM,KAAK,GAAG,CACV,MAAM,EACN,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAC1B;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QACzC,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,cAAc;QAC7C,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,UAAU,IAAoB,EAAA;MAC1B,IAAM,KAAK,GAAG,CACV,eAAe,EACf,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CACjC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB;QACpD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,UAAU,IAAoB,EAAA;MAC1B,IAAM,KAAK,GAAG,CACV,eAAe,EACf,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CACjC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB;QACpD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,iBAAiB,IAA2B,EAAA;MACxC,IAAM,KAAK,GAAG,CACV,yBAAyB,EACzB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAC5B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAC/B;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,+BAA+B;QAC9D,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,YAAY,IAAsB,EAAA;MAC9B,IAAM,KAAK,GAAG,CACV,oBAAoB,EACpB,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAC5B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAClC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,0BAA0B;QACzD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,aAAa,IAAuB,EAAA;MAChC,IAAM,KAAK,GAAG,CACV,aAAa,EACb,OAAA,CAAA,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,EAC/B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,EAC5B,OAAA,CAAA,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CACnC;MAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAC1B,MAAM,EAAE,IAAI,CAAC,OAAO;QACpB,QAAQ,EAAE,IAAI,CAAC,OAAO;QACtB,KAAK,EAAE,IAAI,CAAC,gBAAgB;QAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,YAAY,EAAE,IAAI,CAAC,QAAQ;QAC3B,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB;QAClD,SAAS,EAAE;OACd,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAEO,SAAA,kBAAA,IAAA,EASP;MAAA,IAT2B,MAAM,GAAA,IAAA,CAAN,MAAM;QAAE,QAAQ,GAAA,IAAA,CAAR,QAAQ;QAAE,KAAK,GAAA,IAAA,CAAL,KAAK;QAAE,KAAK,GAAA,IAAA,CAAL,KAAK;QAAE,QAAQ,GAAA,IAAA,CAAR,QAAQ;QAAE,YAAY,GAAA,IAAA,CAAZ,YAAY;QAAE,iBAAiB,GAAA,IAAA,CAAjB,iBAAiB;QAAE,SAAS,GAAA,IAAA,CAAT,SAAS;MAU5G,IAAM,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC;MACvD,IAAM,QAAQ,GAAG,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,iBAAiB,CAAC;MACjF,IAAM,OAAO,GAAG,IAAI,eAAA,CAAA,kBAAkB,CAAC,WAAA,CAAA,2BAA2B,CAAC;MACnE,IAAM,OAAO,GAAG,IAAI,eAAA,CAAA,kBAAkB,CAAC,WAAA,CAAA,2BAA2B,CAAC;MAEnE,OAAO,IAAI,aAAA,CAAA,WAAW,CAAC;QACnB,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;QAC5B,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,QAAQ,EAAE,QAAQ;QAClB,KAAK,EAAE,KAAK,IAAI,CAAC;QACjB,KAAK,EAAE,KAAK,IAAI,CAAC;QACjB,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,OAAO;QAChB,OAAO,EAAE;OACZ,CAAC;IACN;EAAC;IAAA,GAAA;IAAA,KAAA,EAEO,SAAA,wBAAwB,KAAe,EAAA;MAC3C,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,WAAA,CAAA,mBAAmB,CAAC;MAC5C,OAAO,IAAI,oBAAA,CAAA,kBAAkB,CAAC,IAAI,CAAC;IACvC;EAAC;IAAA,GAAA;IAAA,KAAA,EAEO,SAAA,gBAAgB,OAA2B,EAAE,YAAuB,EAAA;MACxE,IAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE;MACpH,OAAO,eAAe,GAAG,YAAY,CAAC,OAAO,EAAE;IACnD;EAAC;EAAA,OAAA,sBAAA;AAAA;AA/aL,OAAA,CAAA,sBAAA,GAAA,sBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenOperationsFactory = void 0;\nconst constants_1 = require(\"../constants\");\nconst networkParams_1 = require(\"../networkParams\");\nconst transaction_1 = require(\"../transaction\");\nconst transactionPayload_1 = require(\"../transactionPayload\");\nconst codec_1 = require(\"./codec\");\nclass TokenOperationsFactory {\n    constructor(config) {\n        this.config = config;\n        this.trueAsHex = codec_1.utf8ToHex(\"true\");\n    }\n    issueFungible(args) {\n        const parts = [\n            \"issue\",\n            codec_1.utf8ToHex(args.tokenName),\n            codec_1.utf8ToHex(args.tokenTicker),\n            codec_1.bigIntToHex(args.initialSupply),\n            codec_1.bigIntToHex(args.numDecimals),\n            ...(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []),\n            ...(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []),\n            ...(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []),\n            ...(args.canMint ? [codec_1.utf8ToHex(\"canMint\"), this.trueAsHex] : []),\n            ...(args.canBurn ? [codec_1.utf8ToHex(\"canBurn\"), this.trueAsHex] : []),\n            ...(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []),\n            ...(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []),\n            ...(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []),\n        ];\n        return this.createTransaction({\n            sender: args.issuer,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            value: this.config.issueCost,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitIssue,\n            dataParts: parts\n        });\n    }\n    issueSemiFungible(args) {\n        const parts = [\n            \"issueSemiFungible\",\n            codec_1.utf8ToHex(args.tokenName),\n            codec_1.utf8ToHex(args.tokenTicker),\n            ...(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []),\n            ...(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []),\n            ...(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []),\n            ...(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []),\n            ...(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []),\n            ...(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []),\n            ...(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []),\n        ];\n        return this.createTransaction({\n            sender: args.issuer,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            value: this.config.issueCost,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitIssue,\n            dataParts: parts\n        });\n    }\n    issueNonFungible(args) {\n        const parts = [\n            \"issueNonFungible\",\n            codec_1.utf8ToHex(args.tokenName),\n            codec_1.utf8ToHex(args.tokenTicker),\n            ...(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []),\n            ...(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []),\n            ...(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []),\n            ...(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []),\n            ...(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []),\n            ...(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []),\n            ...(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []),\n        ];\n        return this.createTransaction({\n            sender: args.issuer,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            value: this.config.issueCost,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitIssue,\n            dataParts: parts\n        });\n    }\n    registerMetaESDT(args) {\n        const parts = [\n            \"registerMetaESDT\",\n            codec_1.utf8ToHex(args.tokenName),\n            codec_1.utf8ToHex(args.tokenTicker),\n            codec_1.bigIntToHex(args.numDecimals),\n            ...(args.canFreeze ? [codec_1.utf8ToHex(\"canFreeze\"), this.trueAsHex] : []),\n            ...(args.canWipe ? [codec_1.utf8ToHex(\"canWipe\"), this.trueAsHex] : []),\n            ...(args.canPause ? [codec_1.utf8ToHex(\"canPause\"), this.trueAsHex] : []),\n            ...(args.canTransferNFTCreateRole ? [codec_1.utf8ToHex(\"canTransferNFTCreateRole\"), this.trueAsHex] : []),\n            ...(args.canChangeOwner ? [codec_1.utf8ToHex(\"canChangeOwner\"), this.trueAsHex] : []),\n            ...(args.canUpgrade ? [codec_1.utf8ToHex(\"canUpgrade\"), this.trueAsHex] : []),\n            ...(args.canAddSpecialRoles ? [codec_1.utf8ToHex(\"canAddSpecialRoles\"), this.trueAsHex] : []),\n        ];\n        return this.createTransaction({\n            sender: args.issuer,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            value: this.config.issueCost,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitIssue,\n            dataParts: parts\n        });\n    }\n    setSpecialRoleOnFungible(args) {\n        const parts = [\n            \"setSpecialRole\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user),\n            ...(args.addRoleLocalMint ? [codec_1.utf8ToHex(\"ESDTRoleLocalMint\")] : []),\n            ...(args.addRoleLocalBurn ? [codec_1.utf8ToHex(\"ESDTRoleLocalBurn\")] : []),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitSetSpecialRole,\n            dataParts: parts\n        });\n    }\n    setSpecialRoleOnSemiFungible(args) {\n        const parts = [\n            \"setSpecialRole\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user),\n            ...(args.addRoleNFTCreate ? [codec_1.utf8ToHex(\"ESDTRoleNFTCreate\")] : []),\n            ...(args.addRoleNFTBurn ? [codec_1.utf8ToHex(\"ESDTRoleNFTBurn\")] : []),\n            ...(args.addRoleNFTAddQuantity ? [codec_1.utf8ToHex(\"ESDTRoleNFTAddQuantity\")] : []),\n            ...(args.addRoleESDTTransferRole ? [codec_1.utf8ToHex(\"ESDTTransferRole\")] : []),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitSetSpecialRole,\n            dataParts: parts\n        });\n    }\n    setSpecialRoleOnMetaESDT(args) {\n        return this.setSpecialRoleOnSemiFungible(args);\n    }\n    setSpecialRoleOnNonFungible(args) {\n        const parts = [\n            \"setSpecialRole\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user),\n            ...(args.addRoleNFTCreate ? [codec_1.utf8ToHex(\"ESDTRoleNFTCreate\")] : []),\n            ...(args.addRoleNFTBurn ? [codec_1.utf8ToHex(\"ESDTRoleNFTBurn\")] : []),\n            ...(args.addRoleNFTUpdateAttributes ? [codec_1.utf8ToHex(\"ESDTRoleNFTUpdateAttributes\")] : []),\n            ...(args.addRoleNFTAddURI ? [codec_1.utf8ToHex(\"ESDTRoleNFTAddURI\")] : []),\n            ...(args.addRoleESDTTransferRole ? [codec_1.utf8ToHex(\"ESDTTransferRole\")] : []),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitSetSpecialRole,\n            dataParts: parts\n        });\n    }\n    nftCreate(args) {\n        const parts = [\n            \"ESDTNFTCreate\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.initialQuantity),\n            codec_1.utf8ToHex(args.name),\n            codec_1.bigIntToHex(args.royalties),\n            codec_1.utf8ToHex(args.hash),\n            codec_1.bufferToHex(args.attributes),\n            ...args.uris.map(codec_1.utf8ToHex),\n        ];\n        // Note that the following is an approximation (a reasonable one):\n        const nftData = args.name + args.hash + args.attributes + args.uris.join(\"\");\n        const storageGasLimit = nftData.length * this.config.gasLimitStorePerByte.valueOf();\n        return this.createTransaction({\n            sender: args.creator,\n            receiver: args.creator,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTNFTCreate.valueOf() + storageGasLimit.valueOf(),\n            dataParts: parts\n        });\n    }\n    pause(args) {\n        const parts = [\n            \"pause\",\n            codec_1.utf8ToHex(args.tokenIdentifier)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitPausing,\n            dataParts: parts\n        });\n    }\n    unpause(args) {\n        const parts = [\n            \"unPause\",\n            codec_1.utf8ToHex(args.tokenIdentifier)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitPausing,\n            dataParts: parts\n        });\n    }\n    freeze(args) {\n        const parts = [\n            \"freeze\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitFreezing,\n            dataParts: parts\n        });\n    }\n    unfreeze(args) {\n        const parts = [\n            \"unFreeze\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitFreezing,\n            dataParts: parts\n        });\n    }\n    wipe(args) {\n        const parts = [\n            \"wipe\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.addressToHex(args.user)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: this.config.esdtContractAddress,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitWiping,\n            dataParts: parts\n        });\n    }\n    localMint(args) {\n        const parts = [\n            \"ESDTLocalMint\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.supplyToMint),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: args.manager,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTLocalMint,\n            dataParts: parts\n        });\n    }\n    localBurn(args) {\n        const parts = [\n            \"ESDTLocalBurn\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.supplyToBurn),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: args.manager,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTLocalBurn,\n            dataParts: parts\n        });\n    }\n    updateAttributes(args) {\n        const parts = [\n            \"ESDTNFTUpdateAttributes\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.tokenNonce),\n            codec_1.bufferToHex(args.attributes),\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: args.manager,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTNFTUpdateAttributes,\n            dataParts: parts\n        });\n    }\n    addQuantity(args) {\n        const parts = [\n            \"ESDTNFTAddQuantity\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.tokenNonce),\n            codec_1.bigIntToHex(args.quantityToAdd)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: args.manager,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTNFTAddQuantity,\n            dataParts: parts\n        });\n    }\n    burnQuantity(args) {\n        const parts = [\n            \"ESDTNFTBurn\",\n            codec_1.utf8ToHex(args.tokenIdentifier),\n            codec_1.bigIntToHex(args.tokenNonce),\n            codec_1.bigIntToHex(args.quantityToBurn)\n        ];\n        return this.createTransaction({\n            sender: args.manager,\n            receiver: args.manager,\n            nonce: args.transactionNonce,\n            gasPrice: args.gasPrice,\n            gasLimitHint: args.gasLimit,\n            executionGasLimit: this.config.gasLimitESDTNFTBurn,\n            dataParts: parts\n        });\n    }\n    createTransaction({ sender, receiver, nonce, value, gasPrice, gasLimitHint, executionGasLimit, dataParts }) {\n        const payload = this.buildTransactionPayload(dataParts);\n        const gasLimit = gasLimitHint || this.computeGasLimit(payload, executionGasLimit);\n        const version = new networkParams_1.TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n        const options = new networkParams_1.TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n        return new transaction_1.Transaction({\n            chainID: this.config.chainID,\n            sender: sender,\n            receiver: receiver,\n            gasLimit: gasLimit,\n            gasPrice: gasPrice,\n            nonce: nonce || 0,\n            value: value || 0,\n            data: payload,\n            version: version,\n            options: options\n        });\n    }\n    buildTransactionPayload(parts) {\n        const data = parts.join(constants_1.ARGUMENTS_SEPARATOR);\n        return new transactionPayload_1.TransactionPayload(data);\n    }\n    computeGasLimit(payload, executionGas) {\n        const dataMovementGas = this.config.minGasLimit.valueOf() + this.config.gasLimitPerByte.valueOf() * payload.length();\n        return dataMovementGas + executionGas.valueOf();\n    }\n}\nexports.TokenOperationsFactory = TokenOperationsFactory;\n//# sourceMappingURL=tokenOperationsFactory.js.map"]},"metadata":{},"sourceType":"script"}