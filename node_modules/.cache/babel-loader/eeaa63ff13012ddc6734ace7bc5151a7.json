{"ast":null,"code":"import _defineProperty from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useCallback,useEffect}from'react';import{faUsers,faServer,faLeaf,faReceipt,faArrowUp,faCog}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{decodeUnsignedNumber,ContractFunction,Address,Query,decodeString}from'@multiversx/sdk-core';import{useGetActiveTransactionsStatus}from'@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';import{ApiNetworkProvider,ProxyNetworkProvider}from'@multiversx/sdk-network-providers';import axios from'axios';import classNames from'classnames';import{useLocation}from'react-router-dom';import{MultiversX}from'assets/MultiversX';import{Action}from'components/Action';import{network,auctionContract}from'config';import{useGlobalContext,useDispatch}from'context';import{denominated}from'helpers/denominate';import getPercentage from'helpers/getPercentage';import{ChangeDelegationCap}from'./components/ChangeDelegationCap';import{ChangeServiceFee}from'./components/ChangeServiceFee';import calculateAnnualPercentage from'./helpers/calculateAnnualPercentage';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Cards=function Cards(){var _useGlobalContext=useGlobalContext(),totalActiveStake=_useGlobalContext.totalActiveStake,totalNetworkStake=_useGlobalContext.totalNetworkStake,usersNumber=_useGlobalContext.usersNumber,nodesNumber=_useGlobalContext.nodesNumber,networkStatus=_useGlobalContext.networkStatus,contractDetails=_useGlobalContext.contractDetails,networkConfig=_useGlobalContext.networkConfig;var _useGetActiveTransact=useGetActiveTransactionsStatus(),pending=_useGetActiveTransact.pending;var dispatch=useDispatch();var location=useLocation();var getNetworkStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,status,balance;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch({type:'getNetworkStatus',networkStatus:{status:'loading',data:null,error:null}});_context.prev=1;_context.next=4;return Promise.all([new ProxyNetworkProvider(network.gatewayAddress).getNetworkStatus(),axios.get(\"\".concat(network.apiAddress,\"/accounts/\").concat(auctionContract))]);case 4:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);status=_yield$Promise$all2[0];balance=_yield$Promise$all2[1];dispatch({type:'getNetworkStatus',networkStatus:{status:'loaded',error:null,data:_objectSpread(_objectSpread({},status),{},{Balance:balance.data.balance})}});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);dispatch({type:'getNetworkStatus',networkStatus:{status:'error',data:null,error:_context.t0}});case 14:case\"end\":return _context.stop();}},_callee,null,[[1,11]]);}));return function getNetworkStatus(){return _ref.apply(this,arguments);};}();var getUsersNumber=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var provider,query,data,_data$getReturnDataPa,_data$getReturnDataPa2,userNumber;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:dispatch({type:'getUsersNumber',usersNumber:{status:'loading',data:null,error:null}});_context2.prev=1;provider=new ProxyNetworkProvider(network.apiAddress);query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getNumUsers')});_context2.next=6;return provider.queryContract(query);case 6:data=_context2.sent;_data$getReturnDataPa=data.getReturnDataParts(),_data$getReturnDataPa2=_slicedToArray(_data$getReturnDataPa,1),userNumber=_data$getReturnDataPa2[0];dispatch({type:'getUsersNumber',usersNumber:{status:'loaded',data:decodeUnsignedNumber(userNumber).toString(),error:null}});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);dispatch({type:'getUsersNumber',usersNumber:{status:'error',data:null,error:_context2.t0}});case 14:case\"end\":return _context2.stop();}},_callee2,null,[[1,11]]);}));return function getUsersNumber(){return _ref2.apply(this,arguments);};}();var getTotalNetworkStake=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var query,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:dispatch({type:'getTotalNetworkStake',totalNetworkStake:{data:null,error:null,status:'loading'}});_context3.prev=1;query=new ApiNetworkProvider(network.apiAddress,{timeout:4000});_context3.next=5;return query.getNetworkStakeStatistics();case 5:data=_context3.sent;dispatch({type:'getTotalNetworkStake',totalNetworkStake:{status:'loaded',error:null,data:data}});_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);dispatch({type:'getTotalNetworkStake',totalNetworkStake:{status:'error',data:null,error:_context3.t0}});case 12:case\"end\":return _context3.stop();}},_callee3,null,[[1,9]]);}));return function getTotalNetworkStake(){return _ref3.apply(this,arguments);};}();var getContractStakeData=useCallback(function(){if(!totalNetworkStake.data||!totalActiveStake.data){var loading=totalNetworkStake.status==='loading'||totalActiveStake.status==='loading';return{value:loading?\"... \".concat(network.egldLabel):'Stake Unknown',percentage:loading?'...%':'Data Unavailable'};}var formatted={stake:denominated(totalNetworkStake.data.TotalStaked.toFixed()),nodes:denominated(totalActiveStake.data)};return{value:\"\".concat(formatted.nodes,\" \").concat(network.egldLabel),percentage:\"\".concat(getPercentage(formatted.nodes,formatted.stake),\"% of total stake\")};},[totalNetworkStake,totalActiveStake.data]);var getNodesNumber=useCallback(function(){if(!totalNetworkStake.data||!nodesNumber.data){var loading=totalNetworkStake.status==='loading'||nodesNumber.status==='loading';return{value:loading?'...':'Nodes Unknown',percentage:loading?'...% of total nodes':'Data Unavailable'};}var formatted={stake:totalNetworkStake.data.TotalValidators.toString(),nodes:nodesNumber.data.filter(function(key){return decodeString(key)==='staked';}).length.toString()};return{value:formatted.nodes,percentage:\"\".concat(getPercentage(formatted.nodes,formatted.stake),\"% of total nodes\")};},[totalNetworkStake,nodesNumber]);var getDelegationCap=useCallback(function(){if(!contractDetails.data||!totalActiveStake.data){var loading=totalActiveStake.status==='loading'||contractDetails.status==='loading';return{value:loading?\"... \".concat(network.egldLabel):'Cap Unknown',percentage:loading?'...%':'Data Unavailable'};}var formatted={stake:denominated(totalActiveStake.data),value:denominated(contractDetails.data.delegationCap)};return{value:\"\".concat(formatted.value,\" \").concat(network.egldLabel),percentage:\"\".concat(getPercentage(formatted.stake,formatted.value),\"% filled\")};},[totalActiveStake.data,contractDetails.data]);var getAnnualPercentage=function getAnnualPercentage(){var dependencies=[totalActiveStake,nodesNumber,networkStatus,totalNetworkStake,networkConfig,contractDetails];if(dependencies.some(function(dependency){return dependency.status==='loading';})){return'...%';}if(dependencies.every(function(dependency){return dependency.data;})){var percentage=calculateAnnualPercentage({activeStake:totalActiveStake.data,blsKeys:nodesNumber.data,networkStatus:networkStatus.data,networkStake:totalNetworkStake.data,networkConfig:networkConfig.data,serviceFee:parseFloat(contractDetails.data?contractDetails.data.serviceFee.replace('%',''):'0')});return\"\".concat(percentage,\"%\");}return'Unknown APR';};var cards=[{label:'Contract Stake',data:getContractStakeData(),colors:['#2044F5','#1B37C0'],icon:/*#__PURE__*/_jsx(MultiversX,{})},{label:'Number of Users',colors:['#6CADEF','#5B96D2'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUsers}),data:{value:usersNumber.status!=='loaded'?usersNumber.error?'Data Unavailable':'...':usersNumber.data}},{label:'Number of Nodes',icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faServer}),colors:['#36CA8C','#2BA572'],data:getNodesNumber()},{label:'Computed APR',colors:['#FBC34C','#D49712'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faLeaf}),data:{value:getAnnualPercentage(),percentage:'Including Service Fee'}},{label:'Service Fee',modal:/*#__PURE__*/_jsx(ChangeServiceFee,{}),icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faReceipt}),title:'Change service fee',colors:['#F3BF89','#B68350'],data:{value:contractDetails.data?contractDetails.data.serviceFee:contractDetails.error?'Service Fee Unknown':'...%'}},{label:'Delegation Cap',modal:/*#__PURE__*/_jsx(ChangeDelegationCap,{}),description:\"The delegation cap is the maximum amount of \".concat(network.egldLabel,\" your agency can stake from delegators.\"),title:'Delegation Cap',icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowUp}),colors:['#E48570','#C25C45'],data:getDelegationCap()}];var fetchNetworkStatus=function fetchNetworkStatus(){if(!networkStatus.data){getNetworkStatus();}};var fetchUsersNumber=function fetchUsersNumber(){if(!usersNumber.data){getUsersNumber();}};var fetchTotalNetworkStake=function fetchTotalNetworkStake(){if(!totalNetworkStake.data){getTotalNetworkStake();}};useEffect(fetchUsersNumber,[usersNumber.data]);useEffect(fetchNetworkStatus,[networkStatus.data]);useEffect(fetchTotalNetworkStake,[totalNetworkStake.data]);return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.cards,\" cards\"),children:cards.map(function(card){var _card$colors=_slicedToArray(card.colors,2),alpha=_card$colors[0],beta=_card$colors[1];var background=\"linear-gradient(180deg, \".concat(alpha,\" 0%, \").concat(beta,\" 100%)\");var interactive=card.modal&&location.pathname==='/admin';return/*#__PURE__*/_jsxs(\"div\",{className:styles.card,style:{background:background},children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"span\",{children:card.label}),/*#__PURE__*/_jsx(\"div\",{style:{fill:interactive&&!pending?beta:'white'},className:classNames(styles.icon,_defineProperty({},styles.fill,interactive&&!pending)),children:interactive&&!pending?/*#__PURE__*/_jsx(Action,{render:function render(){return card.modal;},title:card.title,description:card.description,trigger:/*#__PURE__*/_jsx(\"span\",{className:classNames(styles.trigger,_defineProperty({},styles.disabled,true)),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCog,size:\"lg\"})})}):card.icon})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.value,children:card.data.value}),card.data.percentage&&/*#__PURE__*/_jsx(\"span\",{children:card.data.percentage})]},card.label);})});};","map":{"version":3,"names":["React","useCallback","useEffect","faUsers","faServer","faLeaf","faReceipt","faArrowUp","faCog","FontAwesomeIcon","decodeUnsignedNumber","ContractFunction","Address","Query","decodeString","useGetActiveTransactionsStatus","ApiNetworkProvider","ProxyNetworkProvider","axios","classNames","useLocation","MultiversX","Action","network","auctionContract","useGlobalContext","useDispatch","denominated","getPercentage","ChangeDelegationCap","ChangeServiceFee","calculateAnnualPercentage","styles","jsx","_jsx","jsxs","_jsxs","Cards","_useGlobalContext","totalActiveStake","totalNetworkStake","usersNumber","nodesNumber","networkStatus","contractDetails","networkConfig","_useGetActiveTransact","pending","dispatch","location","getNetworkStatus","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$Promise$all","_yield$Promise$all2","status","balance","wrap","_callee$","_context","prev","next","type","data","error","Promise","all","gatewayAddress","get","concat","apiAddress","sent","_slicedToArray","_objectSpread","Balance","t0","stop","apply","arguments","getUsersNumber","_ref2","_callee2","provider","query","_data$getReturnDataPa","_data$getReturnDataPa2","userNumber","_callee2$","_context2","address","delegationContract","func","queryContract","getReturnDataParts","toString","getTotalNetworkStake","_ref3","_callee3","_callee3$","_context3","timeout","getNetworkStakeStatistics","getContractStakeData","loading","value","egldLabel","percentage","formatted","stake","TotalStaked","toFixed","nodes","getNodesNumber","TotalValidators","filter","key","length","getDelegationCap","delegationCap","getAnnualPercentage","dependencies","some","dependency","every","activeStake","blsKeys","networkStake","serviceFee","parseFloat","replace","cards","label","colors","icon","modal","title","description","fetchNetworkStatus","fetchUsersNumber","fetchTotalNetworkStake","className","children","map","card","_card$colors","alpha","beta","background","interactive","pathname","style","heading","fill","_defineProperty","render","trigger","disabled","size"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/components/Cards/Cards.tsx"],"sourcesContent":["import React, { useCallback, useEffect, ReactNode } from 'react';\nimport {\n  faUsers,\n  faServer,\n  faLeaf,\n  faReceipt,\n  faArrowUp,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  Address,\n  Query,\n  decodeString\n} from '@multiversx/sdk-core';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport {\n  ApiNetworkProvider,\n  ProxyNetworkProvider\n} from '@multiversx/sdk-network-providers';\nimport axios from 'axios';\nimport classNames from 'classnames';\nimport { useLocation } from 'react-router-dom';\n\nimport { MultiversX } from 'assets/MultiversX';\nimport { Action } from 'components/Action';\nimport { network, auctionContract } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\n\nimport { ChangeDelegationCap } from './components/ChangeDelegationCap';\nimport { ChangeServiceFee } from './components/ChangeServiceFee';\n\nimport calculateAnnualPercentage from './helpers/calculateAnnualPercentage';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: string[];\n  data: {\n    value?: string | null;\n    percentage?: string | undefined;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nexport const Cards = () => {\n  const {\n    totalActiveStake,\n    totalNetworkStake,\n    usersNumber,\n    nodesNumber,\n    networkStatus,\n    contractDetails,\n    networkConfig\n  } = useGlobalContext();\n  const { pending } = useGetActiveTransactionsStatus();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const getNetworkStatus = async (): Promise<void> => {\n    dispatch({\n      type: 'getNetworkStatus',\n      networkStatus: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const [status, balance] = await Promise.all([\n        new ProxyNetworkProvider(network.gatewayAddress).getNetworkStatus(),\n        axios.get(`${network.apiAddress}/accounts/${auctionContract}`)\n      ]);\n\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'loaded',\n          error: null,\n          data: {\n            ...status,\n            Balance: balance.data.balance\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getUsersNumber = async (): Promise<void> => {\n    dispatch({\n      type: 'getUsersNumber',\n      usersNumber: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyNetworkProvider(network.apiAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getNumUsers')\n      });\n\n      const data = await provider.queryContract(query);\n      const [userNumber] = data.getReturnDataParts();\n\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'loaded',\n          data: decodeUnsignedNumber(userNumber).toString(),\n          error: null\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getTotalNetworkStake = async (): Promise<void> => {\n    dispatch({\n      type: 'getTotalNetworkStake',\n      totalNetworkStake: {\n        data: null,\n        error: null,\n        status: 'loading'\n      }\n    });\n\n    try {\n      const query = new ApiNetworkProvider(network.apiAddress, {\n        timeout: 4000\n      });\n\n      const data = await query.getNetworkStakeStatistics();\n\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'loaded',\n          error: null,\n          data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getContractStakeData = useCallback(() => {\n    if (!totalNetworkStake.data || !totalActiveStake.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        totalActiveStake.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Stake Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalNetworkStake.data.TotalStaked.toFixed()),\n      nodes: denominated(totalActiveStake.data)\n    };\n\n    return {\n      value: `${formatted.nodes} ${network.egldLabel}`,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total stake`\n    };\n  }, [totalNetworkStake, totalActiveStake.data]);\n\n  const getNodesNumber = useCallback(() => {\n    if (!totalNetworkStake.data || !nodesNumber.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        nodesNumber.status === 'loading';\n\n      return {\n        value: loading ? '...' : 'Nodes Unknown',\n        percentage: loading ? '...% of total nodes' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: totalNetworkStake.data.TotalValidators.toString(),\n      nodes: nodesNumber.data\n        .filter((key: any) => decodeString(key) === 'staked')\n        .length.toString()\n    };\n\n    return {\n      value: formatted.nodes,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total nodes`\n    };\n  }, [totalNetworkStake, nodesNumber]);\n\n  const getDelegationCap = useCallback(() => {\n    if (!contractDetails.data || !totalActiveStake.data) {\n      const loading =\n        totalActiveStake.status === 'loading' ||\n        contractDetails.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Cap Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalActiveStake.data),\n      value: denominated(contractDetails.data.delegationCap)\n    };\n\n    return {\n      value: `${formatted.value} ${network.egldLabel}`,\n      percentage: `${getPercentage(formatted.stake, formatted.value)}% filled`\n    };\n  }, [totalActiveStake.data, contractDetails.data]);\n\n  const getAnnualPercentage = () => {\n    const dependencies = [\n      totalActiveStake,\n      nodesNumber,\n      networkStatus,\n      totalNetworkStake,\n      networkConfig,\n      contractDetails\n    ];\n\n    if (dependencies.some((dependency) => dependency.status === 'loading')) {\n      return '...%';\n    }\n\n    if (dependencies.every((dependency) => dependency.data)) {\n      const percentage = calculateAnnualPercentage({\n        activeStake: totalActiveStake.data,\n        blsKeys: nodesNumber.data,\n        networkStatus: networkStatus.data,\n        networkStake: totalNetworkStake.data,\n        networkConfig: networkConfig.data,\n        serviceFee: parseFloat(\n          contractDetails.data\n            ? contractDetails.data.serviceFee.replace('%', '')\n            : '0'\n        )\n      });\n\n      return `${percentage}%`;\n    }\n\n    return 'Unknown APR';\n  };\n\n  const cards: CardType[] = [\n    {\n      label: 'Contract Stake',\n      data: getContractStakeData(),\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <MultiversX />\n    },\n    {\n      label: 'Number of Users',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faUsers} />,\n      data: {\n        value:\n          usersNumber.status !== 'loaded'\n            ? usersNumber.error\n              ? 'Data Unavailable'\n              : '...'\n            : usersNumber.data\n      }\n    },\n    {\n      label: 'Number of Nodes',\n      icon: <FontAwesomeIcon icon={faServer} />,\n      colors: ['#36CA8C', '#2BA572'],\n      data: getNodesNumber()\n    },\n    {\n      label: 'Computed APR',\n      colors: ['#FBC34C', '#D49712'],\n      icon: <FontAwesomeIcon icon={faLeaf} />,\n      data: {\n        value: getAnnualPercentage(),\n        percentage: 'Including Service Fee'\n      }\n    },\n    {\n      label: 'Service Fee',\n      modal: <ChangeServiceFee />,\n      icon: <FontAwesomeIcon icon={faReceipt} />,\n      title: 'Change service fee',\n      colors: ['#F3BF89', '#B68350'],\n      data: {\n        value: contractDetails.data\n          ? contractDetails.data.serviceFee\n          : contractDetails.error\n          ? 'Service Fee Unknown'\n          : '...%'\n      }\n    },\n    {\n      label: 'Delegation Cap',\n      modal: <ChangeDelegationCap />,\n      description: `The delegation cap is the maximum amount of ${network.egldLabel} your agency can stake from delegators.`,\n      title: 'Delegation Cap',\n      icon: <FontAwesomeIcon icon={faArrowUp} />,\n      colors: ['#E48570', '#C25C45'],\n      data: getDelegationCap()\n    }\n  ];\n\n  const fetchNetworkStatus = () => {\n    if (!networkStatus.data) {\n      getNetworkStatus();\n    }\n  };\n\n  const fetchUsersNumber = () => {\n    if (!usersNumber.data) {\n      getUsersNumber();\n    }\n  };\n\n  const fetchTotalNetworkStake = () => {\n    if (!totalNetworkStake.data) {\n      getTotalNetworkStake();\n    }\n  };\n\n  useEffect(fetchUsersNumber, [usersNumber.data]);\n  useEffect(fetchNetworkStatus, [networkStatus.data]);\n  useEffect(fetchTotalNetworkStake, [totalNetworkStake.data]);\n\n  return (\n    <div className={`${styles.cards} cards`}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span>{card.label}</span>\n              <div\n                style={{ fill: interactive && !pending ? beta : 'white' }}\n                className={classNames(styles.icon, {\n                  [styles.fill]: interactive && !pending\n                })}\n              >\n                {interactive && !pending ? (\n                  <Action\n                    render={() => card.modal}\n                    title={card.title}\n                    description={card.description}\n                    trigger={\n                      <span\n                        className={classNames(styles.trigger, {\n                          [styles.disabled]: true\n                        })}\n                      >\n                        <FontAwesomeIcon icon={faCog} size='lg' />\n                      </span>\n                    }\n                  />\n                ) : (\n                  card.icon\n                )}\n              </div>\n            </div>\n\n            <div className={styles.value}>{card.data.value}</div>\n\n            {card.data.percentage && <span>{card.data.percentage}</span>}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}