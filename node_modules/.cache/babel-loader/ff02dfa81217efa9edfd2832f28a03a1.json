{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport { Admin } from './pages/Admin';\nimport { Dashboard } from './pages/Dashboard';\nimport { Home } from './pages/Home';\nexport var routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  admin: '/admin'\n};\nvar routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.admin,\n  title: 'Admin',\n  component: Admin\n}];\nvar mappedRoutes = routes.map(function (route) {\n  var title = route.title ? \"\".concat(route.title, \" \\u2022 MultiversX \").concat(dAppName) : \"MultiversX \".concat(dAppName);\n  var requiresAuth = Boolean(route.authenticatedRoute);\n  var wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"names":["dAppName","withPageTitle","Admin","Dashboard","Home","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","admin","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","concat","requiresAuth","Boolean","wrappedComponent"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/routes.ts"],"sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport { Admin } from './pages/Admin';\nimport { Dashboard } from './pages/Dashboard';\nimport { Home } from './pages/Home';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  admin: '/admin'\n};\n\nconst routes: RouteType[] = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.admin,\n    title: 'Admin',\n    component: Admin\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} â€¢ MultiversX ${dAppName}`\n    : `MultiversX ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,aAAa,MAAM,wBAAwB;AAElD,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,IAAI,QAAQ,cAAc;AASnC,OAAO,IAAMC,UAAU,GAAG;EACxBC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAE,YAAY;EACvBC,WAAW,EAAE,cAAc;EAC3BC,MAAM,EAAE,SAAS;EACjBC,MAAM,EAAE,SAAS;EACjBC,aAAa,EAAE,gBAAgB;EAC/BC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,MAAmB,GAAG,CAC1B;EACEC,IAAI,EAAET,UAAU,CAACC,IAAI;EACrBS,KAAK,EAAE,MAAM;EACbC,SAAS,EAAEZ;AACb,CAAC,EACD;EACEU,IAAI,EAAET,UAAU,CAACE,SAAS;EAC1BQ,KAAK,EAAE,WAAW;EAClBC,SAAS,EAAEb,SAAS;EACpBc,kBAAkB,EAAE;AACtB,CAAC,EACD;EACEH,IAAI,EAAET,UAAU,CAACO,KAAK;EACtBG,KAAK,EAAE,OAAO;EACdC,SAAS,EAAEd;AACb,CAAC,CACF;AAED,IAAMgB,YAAY,GAAGL,MAAM,CAACM,GAAG,CAAC,UAACC,KAAK,EAAK;EACzC,IAAML,KAAK,GAAGK,KAAK,CAACL,KAAK,MAAAM,MAAA,CAClBD,KAAK,CAACL,KAAK,yBAAAM,MAAA,CAAiBrB,QAAQ,kBAAAqB,MAAA,CACzBrB,QAAQ,CAAE;EAE5B,IAAMsB,YAAY,GAAGC,OAAO,CAACH,KAAK,CAACH,kBAAkB,CAAC;EACtD,IAAMO,gBAAgB,GAAGvB,aAAa,CAACc,KAAK,EAAEK,KAAK,CAACJ,SAAS,CAAC;EAE9D,OAAO;IACLF,IAAI,EAAEM,KAAK,CAACN,IAAI;IAChBE,SAAS,EAAEQ,gBAAgB;IAC3BP,kBAAkB,EAAEK;EACtB,CAAC;AACH,CAAC,CAAC;AAEF,eAAeJ,YAAY"},"metadata":{},"sourceType":"module"}