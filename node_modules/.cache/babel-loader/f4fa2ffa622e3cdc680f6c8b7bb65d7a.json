{"ast":null,"code":"import _defineProperty from \"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _jsxFileName = \"/Users/neville/Documents/Github/elrond-delegation/src/components/Stake/components/Delegate/Delegate.tsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport { Action, Submit } from 'components/Action';\nimport { delegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { denominated } from 'helpers/denominate';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Delegate = function Delegate() {\n  _s();\n  var _useGetAccountInfo = useGetAccountInfo(),\n    account = _useGetAccountInfo.account;\n  var _useStakeData = useStakeData(),\n    onDelegate = _useStakeData.onDelegate,\n    getStakingLimits = _useStakeData.getStakingLimits;\n  var _useGetActiveTransact = useGetActiveTransactionsStatus(),\n    pending = _useGetActiveTransact.pending;\n  var _getStakingLimits = getStakingLimits(),\n    limit = _getStakingLimits.limit,\n    balance = _getStakingLimits.balance,\n    maxed = _getStakingLimits.maxed;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\".concat(styles.wrapper, \" delegate-wrapper\"),\n    children: /*#__PURE__*/_jsxDEV(Action, {\n      title: \"Delegate Now\",\n      description: \"Select the amount of \".concat(network.egldLabel, \" you want to delegate.\"),\n      disabled: pending,\n      trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames(styles.trigger, _defineProperty({}, styles.disabled, pending)),\n        children: \"Delegate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, _this),\n      render: function render(onClose) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.delegate,\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validationSchema: object().shape({\n              amount: delegateValidator(balance, limit)\n            }),\n            onSubmit: onDelegate(onClose),\n            initialValues: {\n              amount: '1'\n            },\n            children: function children(_ref) {\n              var errors = _ref.errors,\n                values = _ref.values,\n                touched = _ref.touched,\n                handleChange = _ref.handleChange,\n                handleBlur = _ref.handleBlur,\n                handleSubmit = _ref.handleSubmit,\n                setFieldValue = _ref.setFieldValue;\n              var onMax = function onMax(event) {\n                event.preventDefault();\n                setFieldValue('amount', denominated(limit, {\n                  addCommas: false\n                }));\n              };\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.field,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"amount\",\n                    children: [network.egldLabel, \" Amount\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.group,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      name: \"amount\",\n                      step: \"any\",\n                      required: true,\n                      autoComplete: \"off\",\n                      min: 1,\n                      value: values.amount,\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      disabled: maxed,\n                      className: classNames(styles.input, _defineProperty({}, styles.invalid, errors.amount && touched.amount))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"/#\",\n                      onClick: onMax,\n                      className: classNames(styles.max, _defineProperty({}, styles.disabled, maxed)),\n                      children: \"Max\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.description,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Balance:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, _this), \" \", denominated(account.balance), ' ', network.egldLabel]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, _this), (errors.amount && touched.amount || maxed) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.error,\n                    children: maxed ? 'Max delegation cap reached, staking unavailable.' : errors.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Submit, {\n                  save: \"Continue\",\n                  onClose: function onClose() {\n                    setFieldValue('amount', '1');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n_s(Delegate, \"afrQcBpjaebOvbT/DMdHTG9anyc=\", false, function () {\n  return [useGetAccountInfo, useStakeData, useGetActiveTransactionsStatus];\n});\n_c = Delegate;\nvar _c;\n$RefreshReg$(_c, \"Delegate\");","map":{"version":3,"names":["React","useGetAccountInfo","useGetActiveTransactionsStatus","classNames","Formik","object","Action","Submit","delegateValidator","useStakeData","network","denominated","styles","jsxDEV","_jsxDEV","Delegate","_s","_useGetAccountInfo","account","_useStakeData","onDelegate","getStakingLimits","_useGetActiveTransact","pending","_getStakingLimits","limit","balance","maxed","className","concat","wrapper","children","title","description","egldLabel","disabled","trigger","_defineProperty","fileName","_jsxFileName","lineNumber","columnNumber","_this","render","onClose","delegate","validationSchema","shape","amount","onSubmit","initialValues","_ref","errors","values","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onMax","event","preventDefault","addCommas","field","htmlFor","group","type","name","step","required","autoComplete","min","value","onBlur","onChange","input","invalid","href","onClick","max","error","save","_c","$RefreshReg$"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/components/Stake/components/Delegate/Delegate.tsx"],"sourcesContent":["import React, { MouseEvent } from 'react';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\n\nimport { Action, Submit } from 'components/Action';\nimport { delegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData, { ActionCallbackType } from 'components/Stake/hooks';\nimport { network } from 'config';\n\nimport { denominated } from 'helpers/denominate';\n\nimport styles from './styles.module.scss';\n\nexport const Delegate = () => {\n  const { account } = useGetAccountInfo();\n  const { onDelegate, getStakingLimits } = useStakeData();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { limit, balance, maxed } = getStakingLimits();\n\n  return (\n    <div className={`${styles.wrapper} delegate-wrapper`}>\n      <Action\n        title='Delegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to delegate.`}\n        disabled={pending}\n        trigger={\n          <div\n            className={classNames(styles.trigger, {\n              [styles.disabled]: pending\n            })}\n          >\n            Delegate\n          </div>\n        }\n        render={(onClose: ActionCallbackType) => (\n          <div className={styles.delegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: delegateValidator(balance, limit)\n              })}\n              onSubmit={onDelegate(onClose)}\n              initialValues={{\n                amount: '1'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setFieldValue(\n                    'amount',\n                    denominated(limit, { addCommas: false })\n                  );\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={1}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          disabled={maxed}\n                          className={classNames(styles.input, {\n                            [styles.invalid]: errors.amount && touched.amount\n                          })}\n                        />\n\n                        <a\n                          href='/#'\n                          onClick={onMax}\n                          className={classNames(styles.max, {\n                            [styles.disabled]: maxed\n                          })}\n                        >\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {denominated(account.balance)}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {((errors.amount && touched.amount) || maxed) && (\n                        <span className={styles.error}>\n                          {maxed\n                            ? 'Max delegation cap reached, staking unavailable.'\n                            : errors.amount}\n                        </span>\n                      )}\n                    </div>\n\n                    <Submit\n                      save='Continue'\n                      onClose={() => {\n                        setFieldValue('amount', '1');\n                      }}\n                    />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}