{"ast":null,"code":"import _defineProperty from\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import React from'react';import{useGetAccountInfo}from'@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';import{useGetActiveTransactionsStatus}from'@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';import classNames from'classnames';import{Formik}from'formik';import{object}from'yup';import{Action,Submit}from'components/Action';import{delegateValidator}from'components/Stake//helpers/delegationValidators';import useStakeData from'components/Stake/hooks';import{network}from'config';import{denominated}from'helpers/denominate';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Delegate=function Delegate(){var _useGetAccountInfo=useGetAccountInfo(),account=_useGetAccountInfo.account;var _useStakeData=useStakeData(),onDelegate=_useStakeData.onDelegate,getStakingLimits=_useStakeData.getStakingLimits;var _useGetActiveTransact=useGetActiveTransactionsStatus(),pending=_useGetActiveTransact.pending;var _getStakingLimits=getStakingLimits(),limit=_getStakingLimits.limit,balance=_getStakingLimits.balance,maxed=_getStakingLimits.maxed;return/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(styles.wrapper,\" delegate-wrapper\"),children:/*#__PURE__*/_jsx(Action,{title:\"Delegate Now\",description:\"Select the amount of \".concat(network.egldLabel,\" you want to delegate.\"),disabled:pending,trigger:/*#__PURE__*/_jsx(\"div\",{className:classNames(styles.trigger,_defineProperty({},styles.disabled,pending)),children:\"Delegate\"}),render:function render(onClose){return/*#__PURE__*/_jsx(\"div\",{className:styles.delegate,children:/*#__PURE__*/_jsx(Formik,{validationSchema:object().shape({amount:delegateValidator(balance,limit)}),onSubmit:onDelegate(onClose),initialValues:{amount:'1'},children:function children(_ref){var errors=_ref.errors,values=_ref.values,touched=_ref.touched,handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,handleSubmit=_ref.handleSubmit,setFieldValue=_ref.setFieldValue;var onMax=function onMax(event){event.preventDefault();setFieldValue('amount',denominated(limit,{addCommas:false}));};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.field,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[network.egldLabel,\" Amount\"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.group,children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"amount\",step:\"any\",required:true,autoComplete:\"off\",min:1,value:values.amount,onBlur:handleBlur,onChange:handleChange,disabled:maxed,className:classNames(styles.input,_defineProperty({},styles.invalid,errors.amount&&touched.amount))}),/*#__PURE__*/_jsx(\"a\",{href:\"/#\",onClick:onMax,className:classNames(styles.max,_defineProperty({},styles.disabled,maxed)),children:\"Max\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:styles.description,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Balance:\"}),\" \",denominated(account.balance),' ',network.egldLabel]}),(errors.amount&&touched.amount||maxed)&&/*#__PURE__*/_jsx(\"span\",{className:styles.error,children:maxed?'Max delegation cap reached, staking unavailable.':errors.amount})]}),/*#__PURE__*/_jsx(Submit,{save:\"Continue\",onClose:function onClose(){setFieldValue('amount','1');}})]});}})});}})});};","map":{"version":3,"names":["React","useGetAccountInfo","useGetActiveTransactionsStatus","classNames","Formik","object","Action","Submit","delegateValidator","useStakeData","network","denominated","styles","jsx","_jsx","jsxs","_jsxs","Delegate","_useGetAccountInfo","account","_useStakeData","onDelegate","getStakingLimits","_useGetActiveTransact","pending","_getStakingLimits","limit","balance","maxed","className","concat","wrapper","children","title","description","egldLabel","disabled","trigger","_defineProperty","render","onClose","delegate","validationSchema","shape","amount","onSubmit","initialValues","_ref","errors","values","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onMax","event","preventDefault","addCommas","field","htmlFor","group","type","name","step","required","autoComplete","min","value","onBlur","onChange","input","invalid","href","onClick","max","error","save"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/components/Stake/components/Delegate/Delegate.tsx"],"sourcesContent":["import React, { MouseEvent } from 'react';\n\nimport { useGetAccountInfo } from '@multiversx/sdk-dapp/hooks/account/useGetAccountInfo';\nimport { useGetActiveTransactionsStatus } from '@multiversx/sdk-dapp/hooks/transactions/useGetActiveTransactionsStatus';\nimport classNames from 'classnames';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\n\nimport { Action, Submit } from 'components/Action';\nimport { delegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData, { ActionCallbackType } from 'components/Stake/hooks';\nimport { network } from 'config';\n\nimport { denominated } from 'helpers/denominate';\n\nimport styles from './styles.module.scss';\n\nexport const Delegate = () => {\n  const { account } = useGetAccountInfo();\n  const { onDelegate, getStakingLimits } = useStakeData();\n  const { pending } = useGetActiveTransactionsStatus();\n  const { limit, balance, maxed } = getStakingLimits();\n\n  return (\n    <div className={`${styles.wrapper} delegate-wrapper`}>\n      <Action\n        title='Delegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to delegate.`}\n        disabled={pending}\n        trigger={\n          <div\n            className={classNames(styles.trigger, {\n              [styles.disabled]: pending\n            })}\n          >\n            Delegate\n          </div>\n        }\n        render={(onClose: ActionCallbackType) => (\n          <div className={styles.delegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: delegateValidator(balance, limit)\n              })}\n              onSubmit={onDelegate(onClose)}\n              initialValues={{\n                amount: '1'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: MouseEvent): void => {\n                  event.preventDefault();\n                  setFieldValue(\n                    'amount',\n                    denominated(limit, { addCommas: false })\n                  );\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={1}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          disabled={maxed}\n                          className={classNames(styles.input, {\n                            [styles.invalid]: errors.amount && touched.amount\n                          })}\n                        />\n\n                        <a\n                          href='/#'\n                          onClick={onMax}\n                          className={classNames(styles.max, {\n                            [styles.disabled]: maxed\n                          })}\n                        >\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {denominated(account.balance)}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {((errors.amount && touched.amount) || maxed) && (\n                        <span className={styles.error}>\n                          {maxed\n                            ? 'Max delegation cap reached, staking unavailable.'\n                            : errors.amount}\n                        </span>\n                      )}\n                    </div>\n\n                    <Submit\n                      save='Continue'\n                      onClose={() => {\n                        setFieldValue('amount', '1');\n                      }}\n                    />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}