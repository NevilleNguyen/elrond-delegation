{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _regeneratorRuntime = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProxyNetworkProvider = void 0;\nvar axios_1 = __importDefault(require(\"axios\"));\nvar accounts_1 = require(\"./accounts\");\nvar config_1 = require(\"./config\");\nvar constants_1 = require(\"./constants\");\nvar contractQueryRequest_1 = require(\"./contractQueryRequest\");\nvar contractQueryResponse_1 = require(\"./contractQueryResponse\");\nvar errors_1 = require(\"./errors\");\nvar networkConfig_1 = require(\"./networkConfig\");\nvar networkStatus_1 = require(\"./networkStatus\");\nvar tokenDefinitions_1 = require(\"./tokenDefinitions\");\nvar tokens_1 = require(\"./tokens\");\nvar transactions_1 = require(\"./transactions\");\nvar transactionStatus_1 = require(\"./transactionStatus\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nvar ProxyNetworkProvider = /*#__PURE__*/function () {\n  function ProxyNetworkProvider(url, config) {\n    _classCallCheck(this, ProxyNetworkProvider);\n    this.url = url;\n    this.config = Object.assign(Object.assign({}, config_1.defaultAxiosConfig), config);\n  }\n  _createClass(ProxyNetworkProvider, [{\n    key: \"getNetworkConfig\",\n    value: function getNetworkConfig() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, networkConfig;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.doGetGeneric(\"network/config\");\n            case 2:\n              response = _context.sent;\n              networkConfig = networkConfig_1.NetworkConfig.fromHttpResponse(response.config);\n              return _context.abrupt(\"return\", networkConfig);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStatus\",\n    value: function getNetworkStatus() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, networkStatus;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.doGetGeneric(\"network/status/4294967295\");\n            case 2:\n              response = _context2.sent;\n              networkStatus = networkStatus_1.NetworkStatus.fromHttpResponse(response.status);\n              return _context2.abrupt(\"return\", networkStatus);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"getNetworkStakeStatistics\",\n    value: function getNetworkStakeStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              throw new Error(\"Method not implemented.\");\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"getNetworkGeneralStatistics\",\n    value: function getNetworkGeneralStatistics() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              throw new Error(\"Method not implemented.\");\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, account;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.doGetGeneric(\"address/\".concat(address.bech32()));\n            case 2:\n              response = _context5.sent;\n              account = accounts_1.AccountOnNetwork.fromHttpResponse(response.account);\n              return _context5.abrupt(\"return\", account);\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokensOfAccount\",\n    value: function getFungibleTokensOfAccount(address, _pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var url, response, responseItems, responseItemsFiltered, tokens;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              url = \"address/\".concat(address.bech32(), \"/esdt\");\n              _context6.next = 3;\n              return this.doGetGeneric(url);\n            case 3:\n              response = _context6.sent;\n              responseItems = Object.values(response.esdts); // Skip NFTs / SFTs.\n              responseItemsFiltered = responseItems.filter(function (item) {\n                return !item.nonce;\n              });\n              tokens = responseItemsFiltered.map(function (item) {\n                return tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item);\n              }); // TODO: Fix sorting\n              tokens.sort(function (a, b) {\n                return a.identifier.localeCompare(b.identifier);\n              });\n              return _context6.abrupt(\"return\", tokens);\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokensOfAccount\",\n    value: function getNonFungibleTokensOfAccount(address, _pagination) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var url, response, responseItems, responseItemsFiltered, tokens;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              url = \"address/\".concat(address.bech32(), \"/esdt\");\n              _context7.next = 3;\n              return this.doGetGeneric(url);\n            case 3:\n              response = _context7.sent;\n              responseItems = Object.values(response.esdts); // Skip fungible tokens.\n              responseItemsFiltered = responseItems.filter(function (item) {\n                return item.nonce >= 0;\n              });\n              tokens = responseItemsFiltered.map(function (item) {\n                return tokens_1.NonFungibleTokenOfAccountOnNetwork.fromProxyHttpResponse(item);\n              }); // TODO: Fix sorting\n              tokens.sort(function (a, b) {\n                return a.identifier.localeCompare(b.identifier);\n              });\n              return _context7.abrupt(\"return\", tokens);\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getFungibleTokenOfAccount\",\n    value: function getFungibleTokenOfAccount(address, tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.doGetGeneric(\"address/\".concat(address.bech32(), \"/esdt/\").concat(tokenIdentifier));\n            case 2:\n              response = _context8.sent;\n              tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response.tokenData);\n              return _context8.abrupt(\"return\", tokenData);\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleTokenOfAccount\",\n    value: function getNonFungibleTokenOfAccount(address, collection, nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var response, tokenData;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.doGetGeneric(\"address/\".concat(address.bech32(), \"/nft/\").concat(collection, \"/nonce/\").concat(nonce.valueOf()));\n            case 2:\n              response = _context9.sent;\n              tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromProxyHttpResponseByNonce(response.tokenData);\n              return _context9.abrupt(\"return\", tokenData);\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n    }\n  }, {\n    key: \"getTransaction\",\n    value: function getTransaction(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        var url, response, transaction;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              url = this.buildUrlWithQueryParameters(\"transaction/\".concat(txHash), {\n                withResults: \"true\"\n              });\n              _context10.next = 3;\n              return this.doGetGeneric(url);\n            case 3:\n              response = _context10.sent;\n              transaction = transactions_1.TransactionOnNetwork.fromProxyHttpResponse(txHash, response.transaction);\n              return _context10.abrupt(\"return\", transaction);\n            case 6:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionStatus\",\n    value: function getTransactionStatus(txHash) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var response, status;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.doGetGeneric(\"transaction/\".concat(txHash, \"/status\"));\n            case 2:\n              response = _context11.sent;\n              status = new transactionStatus_1.TransactionStatus(response.status);\n              return _context11.abrupt(\"return\", status);\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n    }\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return this.doPostGeneric(\"transaction/send\", tx.toSendable());\n            case 2:\n              response = _context12.sent;\n              return _context12.abrupt(\"return\", response.txHash);\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n    }\n  }, {\n    key: \"sendTransactions\",\n    value: function sendTransactions(txs) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {\n        var data, response, hashes, i;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              data = txs.map(function (tx) {\n                return tx.toSendable();\n              });\n              _context13.next = 3;\n              return this.doPostGeneric(\"transaction/send-multiple\", data);\n            case 3:\n              response = _context13.sent;\n              hashes = Array(txs.length).fill(null);\n              for (i = 0; i < txs.length; i++) {\n                hashes[i] = response.txsHashes[i.toString()] || null;\n              }\n              return _context13.abrupt(\"return\", hashes);\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n    }\n  }, {\n    key: \"simulateTransaction\",\n    value: function simulateTransaction(tx) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return this.doPostGeneric(\"transaction/simulate\", tx.toSendable());\n            case 2:\n              response = _context14.sent;\n              return _context14.abrupt(\"return\", response);\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n    }\n  }, {\n    key: \"queryContract\",\n    value: function queryContract(query) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {\n        var request, response;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              request = new contractQueryRequest_1.ContractQueryRequest(query).toHttpRequest();\n              _context15.next = 4;\n              return this.doPostGeneric(\"vm-values/query\", request);\n            case 4:\n              response = _context15.sent;\n              return _context15.abrupt(\"return\", contractQueryResponse_1.ContractQueryResponse.fromHttpResponse(response.data));\n            case 8:\n              _context15.prev = 8;\n              _context15.t0 = _context15[\"catch\"](0);\n              throw new errors_1.ErrContractQuery(_context15.t0);\n            case 11:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[0, 8]]);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfFungibleToken\",\n    value: function getDefinitionOfFungibleToken(tokenIdentifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var properties, definition;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this.getTokenProperties(tokenIdentifier);\n            case 2:\n              properties = _context16.sent;\n              definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromResponseOfGetTokenProperties(tokenIdentifier, properties);\n              return _context16.abrupt(\"return\", definition);\n            case 5:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n    }\n  }, {\n    key: \"getTokenProperties\",\n    value: function getTokenProperties(identifier) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        var encodedIdentifier, queryResponse, properties;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              encodedIdentifier = Buffer.from(identifier).toString(\"hex\");\n              _context17.next = 3;\n              return this.queryContract({\n                address: constants_1.EsdtContractAddress,\n                func: \"getTokenProperties\",\n                getEncodedArguments: function getEncodedArguments() {\n                  return [encodedIdentifier];\n                }\n              });\n            case 3:\n              queryResponse = _context17.sent;\n              properties = queryResponse.getReturnDataParts();\n              return _context17.abrupt(\"return\", properties);\n            case 6:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n    }\n  }, {\n    key: \"getDefinitionOfTokenCollection\",\n    value: function getDefinitionOfTokenCollection(collection) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee18() {\n        var properties, definition;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.getTokenProperties(collection);\n            case 2:\n              properties = _context18.sent;\n              definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromResponseOfGetTokenProperties(collection, properties);\n              return _context18.abrupt(\"return\", definition);\n            case 5:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n    }\n  }, {\n    key: \"getNonFungibleToken\",\n    value: function getNonFungibleToken(_collection, _nonce) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee19() {\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              throw new Error(\"Method not implemented.\");\n            case 1:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19);\n      }));\n    }\n  }, {\n    key: \"doGetGeneric\",\n    value: function doGetGeneric(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee20() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return this.doGet(resourceUrl);\n            case 2:\n              response = _context20.sent;\n              return _context20.abrupt(\"return\", response);\n            case 4:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n    }\n  }, {\n    key: \"doPostGeneric\",\n    value: function doPostGeneric(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee21() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return this.doPost(resourceUrl, payload);\n            case 2:\n              response = _context21.sent;\n              return _context21.abrupt(\"return\", response);\n            case 4:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n    }\n  }, {\n    key: \"doGet\",\n    value: function doGet(resourceUrl) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee22() {\n        var url, response, payload;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n              _context22.prev = 1;\n              _context22.next = 4;\n              return axios_1.default.get(url, this.config);\n            case 4:\n              response = _context22.sent;\n              payload = response.data.data;\n              return _context22.abrupt(\"return\", payload);\n            case 9:\n              _context22.prev = 9;\n              _context22.t0 = _context22[\"catch\"](1);\n              this.handleApiError(_context22.t0, resourceUrl);\n            case 12:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this, [[1, 9]]);\n      }));\n    }\n  }, {\n    key: \"doPost\",\n    value: function doPost(resourceUrl, payload) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        var url, response, responsePayload;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              url = \"\".concat(this.url, \"/\").concat(resourceUrl);\n              _context23.prev = 1;\n              _context23.next = 4;\n              return axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), {\n                headers: Object.assign({\n                  \"Content-Type\": \"application/json\"\n                }, this.config.headers)\n              }));\n            case 4:\n              response = _context23.sent;\n              responsePayload = response.data.data;\n              return _context23.abrupt(\"return\", responsePayload);\n            case 9:\n              _context23.prev = 9;\n              _context23.t0 = _context23[\"catch\"](1);\n              this.handleApiError(_context23.t0, resourceUrl);\n            case 12:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this, [[1, 9]]);\n      }));\n    }\n  }, {\n    key: \"buildUrlWithQueryParameters\",\n    value: function buildUrlWithQueryParameters(endpoint, params) {\n      var searchParams = new URLSearchParams();\n      for (var _i = 0, _Object$entries = Object.entries(params); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n        if (value) {\n          searchParams.append(key, value);\n        }\n      }\n      return \"\".concat(endpoint, \"?\").concat(searchParams.toString());\n    }\n  }, {\n    key: \"handleApiError\",\n    value: function handleApiError(error, resourceUrl) {\n      if (!error.response) {\n        throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n      }\n      var errorData = error.response.data;\n      var originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n      throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n  }]);\n  return ProxyNetworkProvider;\n}();\nexports.ProxyNetworkProvider = ProxyNetworkProvider;","map":{"version":3,"sources":["../src/proxyNetworkProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyNetworkProvider = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst accounts_1 = require(\"./accounts\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst contractQueryRequest_1 = require(\"./contractQueryRequest\");\nconst contractQueryResponse_1 = require(\"./contractQueryResponse\");\nconst errors_1 = require(\"./errors\");\nconst networkConfig_1 = require(\"./networkConfig\");\nconst networkStatus_1 = require(\"./networkStatus\");\nconst tokenDefinitions_1 = require(\"./tokenDefinitions\");\nconst tokens_1 = require(\"./tokens\");\nconst transactions_1 = require(\"./transactions\");\nconst transactionStatus_1 = require(\"./transactionStatus\");\n// TODO: Find & remove duplicate code between \"ProxyNetworkProvider\" and \"ApiNetworkProvider\".\nclass ProxyNetworkProvider {\n    constructor(url, config) {\n        this.url = url;\n        this.config = Object.assign(Object.assign({}, config_1.defaultAxiosConfig), config);\n    }\n    getNetworkConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"network/config\");\n            let networkConfig = networkConfig_1.NetworkConfig.fromHttpResponse(response.config);\n            return networkConfig;\n        });\n    }\n    getNetworkStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(\"network/status/4294967295\");\n            let networkStatus = networkStatus_1.NetworkStatus.fromHttpResponse(response.status);\n            return networkStatus;\n        });\n    }\n    getNetworkStakeStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Implement wrt.:\n            // https://github.com/multiversx/mx-api-service/blob/main/src/endpoints/stake/stake.service.ts\n            throw new Error(\"Method not implemented.\");\n        });\n    }\n    getNetworkGeneralStatistics() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Implement wrt. (full implementation may not be possible):\n            // https://github.com/multiversx/mx-api-service/blob/main/src/endpoints/network/network.service.ts\n            throw new Error(\"Method not implemented.\");\n        });\n    }\n    getAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`address/${address.bech32()}`);\n            let account = accounts_1.AccountOnNetwork.fromHttpResponse(response.account);\n            return account;\n        });\n    }\n    getFungibleTokensOfAccount(address, _pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `address/${address.bech32()}/esdt`;\n            let response = yield this.doGetGeneric(url);\n            let responseItems = Object.values(response.esdts);\n            // Skip NFTs / SFTs.\n            let responseItemsFiltered = responseItems.filter(item => !item.nonce);\n            let tokens = responseItemsFiltered.map(item => tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getNonFungibleTokensOfAccount(address, _pagination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `address/${address.bech32()}/esdt`;\n            let response = yield this.doGetGeneric(url);\n            let responseItems = Object.values(response.esdts);\n            // Skip fungible tokens.\n            let responseItemsFiltered = responseItems.filter(item => item.nonce >= 0);\n            let tokens = responseItemsFiltered.map(item => tokens_1.NonFungibleTokenOfAccountOnNetwork.fromProxyHttpResponse(item));\n            // TODO: Fix sorting\n            tokens.sort((a, b) => a.identifier.localeCompare(b.identifier));\n            return tokens;\n        });\n    }\n    getFungibleTokenOfAccount(address, tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`address/${address.bech32()}/esdt/${tokenIdentifier}`);\n            let tokenData = tokens_1.FungibleTokenOfAccountOnNetwork.fromHttpResponse(response.tokenData);\n            return tokenData;\n        });\n    }\n    getNonFungibleTokenOfAccount(address, collection, nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`address/${address.bech32()}/nft/${collection}/nonce/${nonce.valueOf()}`);\n            let tokenData = tokens_1.NonFungibleTokenOfAccountOnNetwork.fromProxyHttpResponseByNonce(response.tokenData);\n            return tokenData;\n        });\n    }\n    getTransaction(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = this.buildUrlWithQueryParameters(`transaction/${txHash}`, { withResults: \"true\" });\n            let response = yield this.doGetGeneric(url);\n            let transaction = transactions_1.TransactionOnNetwork.fromProxyHttpResponse(txHash, response.transaction);\n            return transaction;\n        });\n    }\n    getTransactionStatus(txHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGetGeneric(`transaction/${txHash}/status`);\n            let status = new transactionStatus_1.TransactionStatus(response.status);\n            return status;\n        });\n    }\n    sendTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPostGeneric(\"transaction/send\", tx.toSendable());\n            return response.txHash;\n        });\n    }\n    sendTransactions(txs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = txs.map(tx => tx.toSendable());\n            const response = yield this.doPostGeneric(\"transaction/send-multiple\", data);\n            const hashes = Array(txs.length).fill(null);\n            for (let i = 0; i < txs.length; i++) {\n                hashes[i] = response.txsHashes[i.toString()] || null;\n            }\n            return hashes;\n        });\n    }\n    simulateTransaction(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPostGeneric(\"transaction/simulate\", tx.toSendable());\n            return response;\n        });\n    }\n    queryContract(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let request = new contractQueryRequest_1.ContractQueryRequest(query).toHttpRequest();\n                let response = yield this.doPostGeneric(\"vm-values/query\", request);\n                return contractQueryResponse_1.ContractQueryResponse.fromHttpResponse(response.data);\n            }\n            catch (error) {\n                throw new errors_1.ErrContractQuery(error);\n            }\n        });\n    }\n    getDefinitionOfFungibleToken(tokenIdentifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = yield this.getTokenProperties(tokenIdentifier);\n            let definition = tokenDefinitions_1.DefinitionOfFungibleTokenOnNetwork.fromResponseOfGetTokenProperties(tokenIdentifier, properties);\n            return definition;\n        });\n    }\n    getTokenProperties(identifier) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let encodedIdentifier = Buffer.from(identifier).toString(\"hex\");\n            let queryResponse = yield this.queryContract({\n                address: constants_1.EsdtContractAddress,\n                func: \"getTokenProperties\",\n                getEncodedArguments: () => [encodedIdentifier]\n            });\n            let properties = queryResponse.getReturnDataParts();\n            return properties;\n        });\n    }\n    getDefinitionOfTokenCollection(collection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let properties = yield this.getTokenProperties(collection);\n            let definition = tokenDefinitions_1.DefinitionOfTokenCollectionOnNetwork.fromResponseOfGetTokenProperties(collection, properties);\n            return definition;\n        });\n    }\n    getNonFungibleToken(_collection, _nonce) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error(\"Method not implemented.\");\n        });\n    }\n    doGetGeneric(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doGet(resourceUrl);\n            return response;\n        });\n    }\n    doPostGeneric(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let response = yield this.doPost(resourceUrl, payload);\n            return response;\n        });\n    }\n    doGet(resourceUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.url}/${resourceUrl}`;\n            try {\n                let response = yield axios_1.default.get(url, this.config);\n                let payload = response.data.data;\n                return payload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    doPost(resourceUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = `${this.url}/${resourceUrl}`;\n            try {\n                let response = yield axios_1.default.post(url, payload, Object.assign(Object.assign({}, this.config), { headers: Object.assign({ \"Content-Type\": \"application/json\" }, this.config.headers) }));\n                let responsePayload = response.data.data;\n                return responsePayload;\n            }\n            catch (error) {\n                this.handleApiError(error, resourceUrl);\n            }\n        });\n    }\n    buildUrlWithQueryParameters(endpoint, params) {\n        let searchParams = new URLSearchParams();\n        for (let [key, value] of Object.entries(params)) {\n            if (value) {\n                searchParams.append(key, value);\n            }\n        }\n        return `${endpoint}?${searchParams.toString()}`;\n    }\n    handleApiError(error, resourceUrl) {\n        if (!error.response) {\n            throw new errors_1.ErrNetworkProvider(resourceUrl, error.toString(), error);\n        }\n        let errorData = error.response.data;\n        let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n        throw new errors_1.ErrNetworkProvider(resourceUrl, originalErrorMessage, error);\n    }\n}\nexports.ProxyNetworkProvider = ProxyNetworkProvider;\n//# sourceMappingURL=proxyNetworkProvider.js.map"]},"metadata":{},"sourceType":"script"}