{"ast":null,"code":"export var initializer = {\n  nodesNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  nodesStates: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  contractDetails: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  usersNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userClaimableRewards: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  undelegatedStakeList: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalNetworkStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  agencyMetaData: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkConfig: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkStatus: {\n    status: 'idle',\n    data: null,\n    error: null\n  }\n};","map":{"version":3,"names":["initializer","nodesNumber","status","data","error","nodesStates","contractDetails","usersNumber","totalActiveStake","userActiveStake","userClaimableRewards","undelegatedStakeList","totalNetworkStake","agencyMetaData","networkConfig","networkStatus"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/context/state.tsx"],"sourcesContent":["type StatusType = 'idle' | 'loading' | 'loaded' | 'error';\ntype ErrorType = null | string;\n\nexport interface UndelegateStakeListType {\n  value: string;\n  timeLeft: number;\n}\n\nexport interface StateType {\n  nodesNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Uint8Array[];\n  };\n  nodesStates: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Uint8Array[];\n  };\n  contractDetails: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      [key: string]: any;\n      owner: boolean;\n      redelegationCap: string;\n      automaticActivation: string;\n      delegationCap: string;\n      serviceFee: string;\n    };\n  };\n  usersNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  totalActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userClaimableRewards: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  undelegatedStakeList: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | UndelegateStakeListType[];\n  };\n  totalNetworkStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkConfig: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkStatus: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  agencyMetaData: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      name: string;\n      website: string;\n      keybase: string;\n    };\n  };\n}\n\nexport const initializer: StateType = {\n  nodesNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  nodesStates: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  contractDetails: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  usersNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userClaimableRewards: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  undelegatedStakeList: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalNetworkStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  agencyMetaData: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkConfig: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkStatus: {\n    status: 'idle',\n    data: null,\n    error: null\n  }\n};\n"],"mappings":"AAkFA,OAAO,IAAMA,WAAsB,GAAG;EACpCC,WAAW,EAAE;IACXC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,WAAW,EAAE;IACXH,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDE,eAAe,EAAE;IACfJ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDG,WAAW,EAAE;IACXL,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDI,gBAAgB,EAAE;IAChBN,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDK,eAAe,EAAE;IACfP,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDM,oBAAoB,EAAE;IACpBR,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDO,oBAAoB,EAAE;IACpBT,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDQ,iBAAiB,EAAE;IACjBV,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDS,cAAc,EAAE;IACdX,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDU,aAAa,EAAE;IACbZ,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDW,aAAa,EAAE;IACbb,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAE;EACT;AACF,CAAC"},"metadata":{},"sourceType":"module"}