{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _toArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/toArray.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefinitionOfTokenCollectionOnNetwork = exports.DefinitionOfFungibleTokenOnNetwork = void 0;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar primitives_1 = require(\"./primitives\");\nvar DefinitionOfFungibleTokenOnNetwork = /*#__PURE__*/function () {\n  function DefinitionOfFungibleTokenOnNetwork() {\n    _classCallCheck(this, DefinitionOfFungibleTokenOnNetwork);\n    this.identifier = \"\";\n    this.name = \"\";\n    this.ticker = \"\";\n    this.owner = new primitives_1.Address(\"\");\n    this.decimals = 0;\n    this.supply = new bignumber_js_1.default(0);\n    this.isPaused = false;\n    this.canUpgrade = false;\n    this.canMint = false;\n    this.canBurn = false;\n    this.canChangeOwner = false;\n    this.canPause = false;\n    this.canFreeze = false;\n    this.canWipe = false;\n    this.canAddSpecialRoles = false;\n    this.assets = {};\n  }\n  _createClass(DefinitionOfFungibleTokenOnNetwork, null, [{\n    key: \"fromApiHttpResponse\",\n    value: function fromApiHttpResponse(payload) {\n      var result = new DefinitionOfFungibleTokenOnNetwork();\n      result.identifier = payload.identifier || \"\";\n      result.name = payload.name || \"\";\n      result.ticker = payload.ticker || \"\";\n      result.owner = new primitives_1.Address(payload.owner || \"\");\n      result.decimals = payload.decimals || 0;\n      result.supply = new bignumber_js_1.default(payload.supply || \"0\");\n      result.isPaused = payload.isPaused || false;\n      result.canUpgrade = payload.canUpgrade || false;\n      result.canMint = payload.canMint || false;\n      result.canBurn = payload.canBurn || false;\n      result.canChangeOwner = payload.canChangeOwner || false;\n      result.canPause = payload.canPause || false;\n      result.canFreeze = payload.canFreeze || false;\n      result.canWipe = payload.canWipe || false;\n      result.assets = payload.assets || {};\n      return result;\n    }\n    /**\n     * The implementation has been moved here from the following location:\n     * https://github.com/multiversx/mx-sdk-js-core/blob/release/v9/src/token.ts\n     */\n  }, {\n    key: \"fromResponseOfGetTokenProperties\",\n    value: function fromResponseOfGetTokenProperties(identifier, data) {\n      var result = new DefinitionOfFungibleTokenOnNetwork();\n      var _data = _toArray(data),\n        tokenName = _data[0],\n        _tokenType = _data[1],\n        owner = _data[2],\n        supply = _data[3],\n        propertiesBuffers = _data.slice(4);\n      var properties = parseTokenProperties(propertiesBuffers);\n      result.identifier = identifier;\n      result.name = tokenName.toString();\n      result.ticker = identifier;\n      result.owner = primitives_1.Address.fromPubkey(owner);\n      result.decimals = properties.NumDecimals.toNumber();\n      result.supply = new bignumber_js_1.default(supply.toString()).shiftedBy(-result.decimals);\n      result.isPaused = properties.IsPaused;\n      result.canUpgrade = properties.CanUpgrade;\n      result.canMint = properties.CanMint;\n      result.canBurn = properties.CanBurn;\n      result.canChangeOwner = properties.CanChangeOwner;\n      result.canPause = properties.CanPause;\n      result.canFreeze = properties.CanFreeze;\n      result.canWipe = properties.CanWipe;\n      return result;\n    }\n  }]);\n  return DefinitionOfFungibleTokenOnNetwork;\n}();\nexports.DefinitionOfFungibleTokenOnNetwork = DefinitionOfFungibleTokenOnNetwork;\nvar DefinitionOfTokenCollectionOnNetwork = /*#__PURE__*/function () {\n  function DefinitionOfTokenCollectionOnNetwork() {\n    _classCallCheck(this, DefinitionOfTokenCollectionOnNetwork);\n    this.collection = \"\";\n    this.type = \"\";\n    this.name = \"\";\n    this.ticker = \"\";\n    this.owner = new primitives_1.Address(\"\");\n    this.decimals = 0;\n    this.canPause = false;\n    this.canFreeze = false;\n    this.canWipe = false;\n    this.canUpgrade = false;\n    this.canChangeOwner = false;\n    this.canAddSpecialRoles = false;\n    this.canTransferNftCreateRole = false;\n    this.canCreateMultiShard = false;\n  }\n  _createClass(DefinitionOfTokenCollectionOnNetwork, null, [{\n    key: \"fromApiHttpResponse\",\n    value: function fromApiHttpResponse(payload) {\n      var result = new DefinitionOfTokenCollectionOnNetwork();\n      result.collection = payload.collection || \"\";\n      result.type = payload.type || \"\";\n      result.name = payload.name || \"\";\n      result.ticker = payload.ticker || \"\";\n      result.owner = new primitives_1.Address(payload.owner || \"\");\n      result.decimals = payload.decimals || 0;\n      result.canPause = payload.canPause || false;\n      result.canFreeze = payload.canFreeze || false;\n      result.canWipe = payload.canWipe || false;\n      result.canTransferNftCreateRole = payload.canTransferNftCreateRole || false;\n      return result;\n    }\n    /**\n     * The implementation has been moved here from the following location:\n     * https://github.com/multiversx/mx-sdk-js-core/blob/release/v9/src/token.ts\n     */\n  }, {\n    key: \"fromResponseOfGetTokenProperties\",\n    value: function fromResponseOfGetTokenProperties(collection, data) {\n      var result = new DefinitionOfTokenCollectionOnNetwork();\n      var _data2 = _toArray(data),\n        tokenName = _data2[0],\n        tokenType = _data2[1],\n        owner = _data2[2],\n        _ = _data2[3],\n        __ = _data2[4],\n        propertiesBuffers = _data2.slice(5);\n      var properties = parseTokenProperties(propertiesBuffers);\n      result.collection = collection;\n      result.type = tokenType.toString();\n      result.name = tokenName.toString();\n      result.ticker = collection;\n      result.owner = primitives_1.Address.fromPubkey(owner);\n      result.decimals = properties.NumDecimals.toNumber();\n      result.canPause = properties.CanPause;\n      result.canFreeze = properties.CanFreeze;\n      result.canWipe = properties.CanWipe;\n      result.canUpgrade = properties.CanUpgrade;\n      result.canChangeOwner = properties.CanChangeOwner;\n      result.canAddSpecialRoles = properties.CanAddSpecialRoles;\n      result.canTransferNftCreateRole = properties.CanTransferNFTCreateRole;\n      result.canCreateMultiShard = properties.CanCreateMultiShard;\n      return result;\n    }\n  }]);\n  return DefinitionOfTokenCollectionOnNetwork;\n}();\nexports.DefinitionOfTokenCollectionOnNetwork = DefinitionOfTokenCollectionOnNetwork;\n// Token properties have the following format: {PropertyName}-{PropertyValue}.\nfunction parseTokenProperties(propertiesBuffers) {\n  var properties = {};\n  var _iterator = _createForOfIteratorHelper(propertiesBuffers),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var buffer = _step.value;\n      var _buffer$toString$spli = buffer.toString().split(\"-\"),\n        _buffer$toString$spli2 = _slicedToArray(_buffer$toString$spli, 2),\n        name = _buffer$toString$spli2[0],\n        value = _buffer$toString$spli2[1];\n      properties[name] = parseValueOfTokenProperty(value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return properties;\n}\n// This only handles booleans and numbers.\nfunction parseValueOfTokenProperty(value) {\n  switch (value) {\n    case \"true\":\n      return true;\n    case \"false\":\n      return false;\n    default:\n      return new bignumber_js_1.default(value);\n  }\n}","map":{"version":3,"sources":["../src/tokenDefinitions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefinitionOfTokenCollectionOnNetwork = exports.DefinitionOfFungibleTokenOnNetwork = void 0;\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nconst primitives_1 = require(\"./primitives\");\nclass DefinitionOfFungibleTokenOnNetwork {\n    constructor() {\n        this.identifier = \"\";\n        this.name = \"\";\n        this.ticker = \"\";\n        this.owner = new primitives_1.Address(\"\");\n        this.decimals = 0;\n        this.supply = new bignumber_js_1.default(0);\n        this.isPaused = false;\n        this.canUpgrade = false;\n        this.canMint = false;\n        this.canBurn = false;\n        this.canChangeOwner = false;\n        this.canPause = false;\n        this.canFreeze = false;\n        this.canWipe = false;\n        this.canAddSpecialRoles = false;\n        this.assets = {};\n    }\n    static fromApiHttpResponse(payload) {\n        let result = new DefinitionOfFungibleTokenOnNetwork();\n        result.identifier = payload.identifier || \"\";\n        result.name = payload.name || \"\";\n        result.ticker = payload.ticker || \"\";\n        result.owner = new primitives_1.Address(payload.owner || \"\");\n        result.decimals = payload.decimals || 0;\n        result.supply = new bignumber_js_1.default(payload.supply || \"0\");\n        result.isPaused = payload.isPaused || false;\n        result.canUpgrade = payload.canUpgrade || false;\n        result.canMint = payload.canMint || false;\n        result.canBurn = payload.canBurn || false;\n        result.canChangeOwner = payload.canChangeOwner || false;\n        result.canPause = payload.canPause || false;\n        result.canFreeze = payload.canFreeze || false;\n        result.canWipe = payload.canWipe || false;\n        result.assets = payload.assets || {};\n        return result;\n    }\n    /**\n     * The implementation has been moved here from the following location:\n     * https://github.com/multiversx/mx-sdk-js-core/blob/release/v9/src/token.ts\n     */\n    static fromResponseOfGetTokenProperties(identifier, data) {\n        let result = new DefinitionOfFungibleTokenOnNetwork();\n        let [tokenName, _tokenType, owner, supply, ...propertiesBuffers] = data;\n        let properties = parseTokenProperties(propertiesBuffers);\n        result.identifier = identifier;\n        result.name = tokenName.toString();\n        result.ticker = identifier;\n        result.owner = primitives_1.Address.fromPubkey(owner);\n        result.decimals = properties.NumDecimals.toNumber();\n        result.supply = new bignumber_js_1.default(supply.toString()).shiftedBy(-result.decimals);\n        result.isPaused = properties.IsPaused;\n        result.canUpgrade = properties.CanUpgrade;\n        result.canMint = properties.CanMint;\n        result.canBurn = properties.CanBurn;\n        result.canChangeOwner = properties.CanChangeOwner;\n        result.canPause = properties.CanPause;\n        result.canFreeze = properties.CanFreeze;\n        result.canWipe = properties.CanWipe;\n        return result;\n    }\n}\nexports.DefinitionOfFungibleTokenOnNetwork = DefinitionOfFungibleTokenOnNetwork;\nclass DefinitionOfTokenCollectionOnNetwork {\n    constructor() {\n        this.collection = \"\";\n        this.type = \"\";\n        this.name = \"\";\n        this.ticker = \"\";\n        this.owner = new primitives_1.Address(\"\");\n        this.decimals = 0;\n        this.canPause = false;\n        this.canFreeze = false;\n        this.canWipe = false;\n        this.canUpgrade = false;\n        this.canChangeOwner = false;\n        this.canAddSpecialRoles = false;\n        this.canTransferNftCreateRole = false;\n        this.canCreateMultiShard = false;\n    }\n    static fromApiHttpResponse(payload) {\n        let result = new DefinitionOfTokenCollectionOnNetwork();\n        result.collection = payload.collection || \"\";\n        result.type = payload.type || \"\";\n        result.name = payload.name || \"\";\n        result.ticker = payload.ticker || \"\";\n        result.owner = new primitives_1.Address(payload.owner || \"\");\n        result.decimals = payload.decimals || 0;\n        result.canPause = payload.canPause || false;\n        result.canFreeze = payload.canFreeze || false;\n        result.canWipe = payload.canWipe || false;\n        result.canTransferNftCreateRole = payload.canTransferNftCreateRole || false;\n        return result;\n    }\n    /**\n     * The implementation has been moved here from the following location:\n     * https://github.com/multiversx/mx-sdk-js-core/blob/release/v9/src/token.ts\n     */\n    static fromResponseOfGetTokenProperties(collection, data) {\n        let result = new DefinitionOfTokenCollectionOnNetwork();\n        let [tokenName, tokenType, owner, _, __, ...propertiesBuffers] = data;\n        let properties = parseTokenProperties(propertiesBuffers);\n        result.collection = collection;\n        result.type = tokenType.toString();\n        result.name = tokenName.toString();\n        result.ticker = collection;\n        result.owner = primitives_1.Address.fromPubkey(owner);\n        result.decimals = properties.NumDecimals.toNumber();\n        result.canPause = properties.CanPause;\n        result.canFreeze = properties.CanFreeze;\n        result.canWipe = properties.CanWipe;\n        result.canUpgrade = properties.CanUpgrade;\n        result.canChangeOwner = properties.CanChangeOwner;\n        result.canAddSpecialRoles = properties.CanAddSpecialRoles;\n        result.canTransferNftCreateRole = properties.CanTransferNFTCreateRole;\n        result.canCreateMultiShard = properties.CanCreateMultiShard;\n        return result;\n    }\n}\nexports.DefinitionOfTokenCollectionOnNetwork = DefinitionOfTokenCollectionOnNetwork;\n// Token properties have the following format: {PropertyName}-{PropertyValue}.\nfunction parseTokenProperties(propertiesBuffers) {\n    let properties = {};\n    for (let buffer of propertiesBuffers) {\n        let [name, value] = buffer.toString().split(\"-\");\n        properties[name] = parseValueOfTokenProperty(value);\n    }\n    return properties;\n}\n// This only handles booleans and numbers.\nfunction parseValueOfTokenProperty(value) {\n    switch (value) {\n        case \"true\": return true;\n        case \"false\": return false;\n        default: return new bignumber_js_1.default(value);\n    }\n}\n//# sourceMappingURL=tokenDefinitions.js.map"]},"metadata":{},"sourceType":"script"}