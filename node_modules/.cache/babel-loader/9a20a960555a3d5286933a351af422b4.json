{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nvar wordlists = {};\nexports.wordlists = wordlists;\nvar _default;\nexports._default = _default;\ntry {\n  exports._default = _default = require('./wordlists/chinese_simplified.json');\n  wordlists.chinese_simplified = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/chinese_traditional.json');\n  wordlists.chinese_traditional = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/korean.json');\n  wordlists.korean = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/french.json');\n  wordlists.french = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/italian.json');\n  wordlists.italian = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/spanish.json');\n  wordlists.spanish = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/japanese.json');\n  wordlists.japanese = _default;\n  wordlists.JA = _default;\n} catch (err) {}\ntry {\n  exports._default = _default = require('./wordlists/english.json');\n  wordlists.english = _default;\n  wordlists.EN = _default;\n} catch (err) {}","map":{"version":3,"names":["Object","defineProperty","exports","value","wordlists","_default","require","chinese_simplified","err","chinese_traditional","korean","french","italian","spanish","japanese","JA","english","EN"],"sources":["/Users/neville/Documents/Github/elrond-delegation/node_modules/bip39/src/_wordlists.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D;AACA;AACA;AACA,IAAMC,SAAS,GAAG,CAAC,CAAC;AACpBF,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7B,IAAIC,QAAQ;AACZH,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3B,IAAI;EACAH,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,qCAAqC,CAAC;EAC5EF,SAAS,CAACG,kBAAkB,GAAGF,QAAQ;AAC3C,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,sCAAsC,CAAC;EAC7EF,SAAS,CAACK,mBAAmB,GAAGJ,QAAQ;AAC5C,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EAChEF,SAAS,CAACM,MAAM,GAAGL,QAAQ;AAC/B,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EAChEF,SAAS,CAACO,MAAM,GAAGN,QAAQ;AAC/B,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;EACjEF,SAAS,CAACQ,OAAO,GAAGP,QAAQ;AAChC,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;EACjEF,SAAS,CAACS,OAAO,GAAGR,QAAQ;AAChC,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,2BAA2B,CAAC;EAClEF,SAAS,CAACU,QAAQ,GAAGT,QAAQ;EAC7BD,SAAS,CAACW,EAAE,GAAGV,QAAQ;AAC3B,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE;AACd,IAAI;EACAN,OAAO,CAACG,QAAQ,GAAGA,QAAQ,GAAGC,OAAO,CAAC,0BAA0B,CAAC;EACjEF,SAAS,CAACY,OAAO,GAAGX,QAAQ;EAC5BD,SAAS,CAACa,EAAE,GAAGZ,QAAQ;AAC3B,CAAC,CACD,OAAOG,GAAG,EAAE,CAAE"},"metadata":{},"sourceType":"script"}