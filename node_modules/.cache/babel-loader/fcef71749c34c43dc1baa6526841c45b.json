{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserVerifier = void 0;\nvar userKeys_1 = require(\"./userKeys\");\n/**\n * ed25519 signature verification\n */\nvar UserVerifier = /*#__PURE__*/function () {\n  function UserVerifier(publicKey) {\n    _classCallCheck(this, UserVerifier);\n    this.publicKey = publicKey;\n  }\n  _createClass(UserVerifier, [{\n    key: \"verify\",\n    value:\n    /**\n     *\n     * @param data the raw data to be verified (e.g. an already-serialized enveloped message)\n     * @param signature the signature to be verified\n     * @returns true if the signature is valid, false otherwise\n     */\n    function verify(data, signature) {\n      return this.publicKey.verify(data, signature);\n    }\n  }], [{\n    key: \"fromAddress\",\n    value: function fromAddress(address) {\n      var publicKey = new userKeys_1.UserPublicKey(address.pubkey());\n      return new UserVerifier(publicKey);\n    }\n  }]);\n  return UserVerifier;\n}();\nexports.UserVerifier = UserVerifier;","map":{"version":3,"sources":["../src/userVerifier.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AAMA;;AAEG;AAFH,IAGa,YAAY;EAGvB,SAAA,aAAY,SAAwB,EAAA;IAAA,eAAA,OAAA,YAAA;IAClC,IAAI,CAAC,SAAS,GAAG,SAAS;EAC5B;EAAC,YAAA,CAAA,YAAA;IAAA,GAAA;IAAA,KAAA;IAOD;;;;;AAKG;IACH,SAAA,OAAO,IAAY,EAAE,SAAiB,EAAA;MACpC,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC;IAC/C;EAAC;IAAA,GAAA;IAAA,KAAA,EAbD,SAAA,YAAmB,OAAiB,EAAA;MAClC,IAAI,SAAS,GAAG,IAAI,UAAA,CAAA,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;MACnD,OAAO,IAAI,YAAY,CAAC,SAAS,CAAC;IACpC;EAAC;EAAA,OAAA,YAAA;AAAA;AAVH,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserVerifier = void 0;\nconst userKeys_1 = require(\"./userKeys\");\n/**\n * ed25519 signature verification\n */\nclass UserVerifier {\n    constructor(publicKey) {\n        this.publicKey = publicKey;\n    }\n    static fromAddress(address) {\n        let publicKey = new userKeys_1.UserPublicKey(address.pubkey());\n        return new UserVerifier(publicKey);\n    }\n    /**\n     *\n     * @param data the raw data to be verified (e.g. an already-serialized enveloped message)\n     * @param signature the signature to be verified\n     * @returns true if the signature is valid, false otherwise\n     */\n    verify(data, signature) {\n        return this.publicKey.verify(data, signature);\n    }\n}\nexports.UserVerifier = UserVerifier;\n//# sourceMappingURL=userVerifier.js.map"]},"metadata":{},"sourceType":"script"}