{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _slicedToArray = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _classCallCheck = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayVecBinaryCodec = void 0;\nvar typesystem_1 = require(\"../typesystem\");\nvar ArrayVecBinaryCodec = /*#__PURE__*/function () {\n  function ArrayVecBinaryCodec(binaryCodec) {\n    _classCallCheck(this, ArrayVecBinaryCodec);\n    this.binaryCodec = binaryCodec;\n  }\n  _createClass(ArrayVecBinaryCodec, [{\n    key: \"decodeNested\",\n    value: function decodeNested(buffer, type) {\n      var arrayLength = type.length;\n      var typeParameter = type.getFirstTypeParameter();\n      var result = [];\n      var totalLength = 0;\n      for (var i = 0; i < arrayLength; i++) {\n        var _this$binaryCodec$dec = this.binaryCodec.decodeNested(buffer, typeParameter),\n          _this$binaryCodec$dec2 = _slicedToArray(_this$binaryCodec$dec, 2),\n          decoded = _this$binaryCodec$dec2[0],\n          decodedLength = _this$binaryCodec$dec2[1];\n        result.push(decoded);\n        totalLength += decodedLength;\n        buffer = buffer.slice(decodedLength);\n      }\n      return [new typesystem_1.ArrayVec(type, result), totalLength];\n    }\n  }, {\n    key: \"decodeTopLevel\",\n    value: function decodeTopLevel(buffer, type) {\n      var _this$decodeNested = this.decodeNested(buffer, type),\n        _this$decodeNested2 = _slicedToArray(_this$decodeNested, 2),\n        result = _this$decodeNested2[0],\n        _ = _this$decodeNested2[1];\n      return result;\n    }\n  }, {\n    key: \"encodeNested\",\n    value: function encodeNested(array) {\n      var itemsBuffers = [];\n      var _iterator = _createForOfIteratorHelper(array.getItems()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var itemBuffer = this.binaryCodec.encodeNested(item);\n          itemsBuffers.push(itemBuffer);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return Buffer.concat(itemsBuffers);\n    }\n  }, {\n    key: \"encodeTopLevel\",\n    value: function encodeTopLevel(array) {\n      return this.encodeNested(array);\n    }\n  }]);\n  return ArrayVecBinaryCodec;\n}();\nexports.ArrayVecBinaryCodec = ArrayVecBinaryCodec;","map":{"version":3,"sources":["../../../src/smartcontracts/codec/arrayVec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAAmE,IAGtD,mBAAmB;EAG5B,SAAA,oBAAY,WAAwB,EAAA;IAAA,eAAA,OAAA,mBAAA;IAChC,IAAI,CAAC,WAAW,GAAG,WAAW;EAClC;EAAC,YAAA,CAAA,mBAAA;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,aAAa,MAAc,EAAE,IAAkB,EAAA;MAC3C,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM;MAC7B,IAAI,aAAa,GAAG,IAAI,CAAC,qBAAqB,EAAE;MAChD,IAAI,MAAM,GAAiB,EAAE;MAC7B,IAAI,WAAW,GAAG,CAAC;MAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QAClC,IAAA,qBAAA,GAA+B,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,aAAa,CAAC;UAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA;UAA9E,OAAO,GAAA,sBAAA;UAAE,aAAa,GAAA,sBAAA;QAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACpB,WAAW,IAAI,aAAa;QAC5B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;MACvC;MAED,OAAO,CAAC,IAAI,YAAA,CAAA,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC;IACpD;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,eAAe,MAAc,EAAE,IAAkB,EAAA;MAC7C,IAAA,kBAAA,GAAkB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;QAAA,mBAAA,GAAA,cAAA,CAAA,kBAAA;QAA5C,MAAM,GAAA,mBAAA;QAAE,CAAC,GAAA,mBAAA;MACd,OAAO,MAAM;IACjB;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,aAAa,KAAe,EAAA;MACxB,IAAI,YAAY,GAAa,EAAE;MAAC,IAAA,SAAA,GAAA,0BAAA,CAEb,KAAK,CAAC,QAAQ,EAAE;QAAA,KAAA;MAAA;QAAnC,KAAA,SAAA,CAAA,CAAA,MAAA,KAAA,GAAA,SAAA,CAAA,CAAA,IAAA,IAAA,GAAqC;UAAA,IAA1B,IAAI,GAAA,KAAA,CAAA,KAAA;UACX,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC;UACpD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;;MAChC,SAAA,GAAA;QAAA,SAAA,CAAA,CAAA,CAAA,GAAA;MAAA;QAAA,SAAA,CAAA,CAAA;MAAA;MAED,OAAO,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;IACtC;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,eAAe,KAAe,EAAA;MAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IACnC;EAAC;EAAA,OAAA,mBAAA;AAAA;AAzCL,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArrayVecBinaryCodec = void 0;\nconst typesystem_1 = require(\"../typesystem\");\nclass ArrayVecBinaryCodec {\n    constructor(binaryCodec) {\n        this.binaryCodec = binaryCodec;\n    }\n    decodeNested(buffer, type) {\n        let arrayLength = type.length;\n        let typeParameter = type.getFirstTypeParameter();\n        let result = [];\n        let totalLength = 0;\n        for (let i = 0; i < arrayLength; i++) {\n            let [decoded, decodedLength] = this.binaryCodec.decodeNested(buffer, typeParameter);\n            result.push(decoded);\n            totalLength += decodedLength;\n            buffer = buffer.slice(decodedLength);\n        }\n        return [new typesystem_1.ArrayVec(type, result), totalLength];\n    }\n    decodeTopLevel(buffer, type) {\n        let [result, _] = this.decodeNested(buffer, type);\n        return result;\n    }\n    encodeNested(array) {\n        let itemsBuffers = [];\n        for (const item of array.getItems()) {\n            let itemBuffer = this.binaryCodec.encodeNested(item);\n            itemsBuffers.push(itemBuffer);\n        }\n        return Buffer.concat(itemsBuffers);\n    }\n    encodeTopLevel(array) {\n        return this.encodeNested(array);\n    }\n}\nexports.ArrayVecBinaryCodec = ArrayVecBinaryCodec;\n//# sourceMappingURL=arrayVec.js.map"]},"metadata":{},"sourceType":"script"}