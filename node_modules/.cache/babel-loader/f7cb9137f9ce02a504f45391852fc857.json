{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/neville/Documents/Github/elrond-delegation/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar crypto = require('crypto');\nvar MAX_VALUE = 0x7fffffff;\nvar DEFAULT_PROMISE_INTERVAL = 5000;\n/* eslint-disable camelcase */\n\nfunction checkAndInit(key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & N - 1) !== 0) throw Error('N must be > 0 and a power of 2');\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large');\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large');\n  var XY = Buffer.alloc(256 * r);\n  var V = Buffer.alloc(128 * r * N);\n\n  // pseudo global\n  var B32 = new Int32Array(16); // salsa20_8\n  var x = new Int32Array(16); // salsa20_8\n  var _X = Buffer.alloc(64); // blockmix_salsa8\n\n  // pseudo global\n  var B = crypto.pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256');\n  var tickCallback;\n  if (progressCallback) {\n    var totalOps = p * N * 2;\n    var currentOp = 0;\n    tickCallback = function tickCallback() {\n      ++currentOp;\n\n      // send progress notifications once every 1,000 ops\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: currentOp / totalOps * 100.0\n        });\n      }\n    };\n  }\n  return {\n    XY: XY,\n    V: V,\n    B32: B32,\n    x: x,\n    _X: _X,\n    B: B,\n    tickCallback: tickCallback\n  };\n}\nfunction smix(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11) {\n  return _smix.apply(this, arguments);\n}\nfunction _smix() {\n  _smix = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(B, Bi, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval) {\n    var Xi, Yi, i, offset, j;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          promiseInterval = promiseInterval || DEFAULT_PROMISE_INTERVAL;\n          Xi = 0;\n          Yi = 128 * r;\n          B.copy(XY, Xi, Bi, Bi + Yi);\n          i = 0;\n        case 5:\n          if (!(i < N)) {\n            _context.next = 15;\n            break;\n          }\n          XY.copy(V, i * Yi, Xi, Xi + Yi);\n          if (!(i % promiseInterval === 0)) {\n            _context.next = 10;\n            break;\n          }\n          _context.next = 10;\n          return new Promise(function (resolve) {\n            return setImmediate(resolve);\n          });\n        case 10:\n          blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n          if (tickCallback) tickCallback();\n        case 12:\n          i++;\n          _context.next = 5;\n          break;\n        case 15:\n          i = 0;\n        case 16:\n          if (!(i < N)) {\n            _context.next = 28;\n            break;\n          }\n          offset = Xi + (2 * r - 1) * 64;\n          j = XY.readUInt32LE(offset) & N - 1;\n          blockxor(V, j * Yi, XY, Xi, Yi);\n          if (!(i % promiseInterval === 0)) {\n            _context.next = 23;\n            break;\n          }\n          _context.next = 23;\n          return new Promise(function (resolve) {\n            return setImmediate(resolve);\n          });\n        case 23:\n          blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n          if (tickCallback) tickCallback();\n        case 25:\n          i++;\n          _context.next = 16;\n          break;\n        case 28:\n          XY.copy(B, Bi, Xi, Xi + Yi);\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _smix.apply(this, arguments);\n}\nfunction smixSync(B, Bi, r, N, V, XY, _X, B32, x, tickCallback) {\n  var Xi = 0;\n  var Yi = 128 * r;\n  var i;\n  B.copy(XY, Xi, Bi, Bi + Yi);\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi);\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n  for (i = 0; i < N; i++) {\n    var offset = Xi + (2 * r - 1) * 64;\n    var j = XY.readUInt32LE(offset) & N - 1;\n    blockxor(V, j * Yi, XY, Xi, Yi);\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x);\n    if (tickCallback) tickCallback();\n  }\n  XY.copy(B, Bi, Xi, Xi + Yi);\n}\nfunction blockmix_salsa8(BY, Bi, Yi, r, _X, B32, x) {\n  var i;\n  arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64);\n  for (i = 0; i < 2 * r; i++) {\n    blockxor(BY, i * 64, _X, 0, 64);\n    salsa20_8(_X, B32, x);\n    arraycopy(_X, 0, BY, Yi + i * 64, 64);\n  }\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + i * 2 * 64, BY, Bi + i * 64, 64);\n  }\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64);\n  }\n}\nfunction R(a, b) {\n  return a << b | a >>> 32 - b;\n}\nfunction salsa20_8(B, B32, x) {\n  var i;\n  for (i = 0; i < 16; i++) {\n    B32[i] = (B[i * 4 + 0] & 0xff) << 0;\n    B32[i] |= (B[i * 4 + 1] & 0xff) << 8;\n    B32[i] |= (B[i * 4 + 2] & 0xff) << 16;\n    B32[i] |= (B[i * 4 + 3] & 0xff) << 24;\n    // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n  }\n\n  arraycopy(B32, 0, x, 0, 16);\n  for (i = 8; i > 0; i -= 2) {\n    x[4] ^= R(x[0] + x[12], 7);\n    x[8] ^= R(x[4] + x[0], 9);\n    x[12] ^= R(x[8] + x[4], 13);\n    x[0] ^= R(x[12] + x[8], 18);\n    x[9] ^= R(x[5] + x[1], 7);\n    x[13] ^= R(x[9] + x[5], 9);\n    x[1] ^= R(x[13] + x[9], 13);\n    x[5] ^= R(x[1] + x[13], 18);\n    x[14] ^= R(x[10] + x[6], 7);\n    x[2] ^= R(x[14] + x[10], 9);\n    x[6] ^= R(x[2] + x[14], 13);\n    x[10] ^= R(x[6] + x[2], 18);\n    x[3] ^= R(x[15] + x[11], 7);\n    x[7] ^= R(x[3] + x[15], 9);\n    x[11] ^= R(x[7] + x[3], 13);\n    x[15] ^= R(x[11] + x[7], 18);\n    x[1] ^= R(x[0] + x[3], 7);\n    x[2] ^= R(x[1] + x[0], 9);\n    x[3] ^= R(x[2] + x[1], 13);\n    x[0] ^= R(x[3] + x[2], 18);\n    x[6] ^= R(x[5] + x[4], 7);\n    x[7] ^= R(x[6] + x[5], 9);\n    x[4] ^= R(x[7] + x[6], 13);\n    x[5] ^= R(x[4] + x[7], 18);\n    x[11] ^= R(x[10] + x[9], 7);\n    x[8] ^= R(x[11] + x[10], 9);\n    x[9] ^= R(x[8] + x[11], 13);\n    x[10] ^= R(x[9] + x[8], 18);\n    x[12] ^= R(x[15] + x[14], 7);\n    x[13] ^= R(x[12] + x[15], 9);\n    x[14] ^= R(x[13] + x[12], 13);\n    x[15] ^= R(x[14] + x[13], 18);\n  }\n  for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i];\n  for (i = 0; i < 16; i++) {\n    var bi = i * 4;\n    B[bi + 0] = B32[i] >> 0 & 0xff;\n    B[bi + 1] = B32[i] >> 8 & 0xff;\n    B[bi + 2] = B32[i] >> 16 & 0xff;\n    B[bi + 3] = B32[i] >> 24 & 0xff;\n    // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n  }\n}\n\n// naive approach... going back to loop unrolling may yield additional performance\nfunction blockxor(S, Si, D, Di, len) {\n  for (var i = 0; i < len; i++) {\n    D[Di + i] ^= S[Si + i];\n  }\n}\nfunction arraycopy(src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length);\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++];\n    }\n  }\n}\nmodule.exports = {\n  checkAndInit: checkAndInit,\n  smix: smix,\n  smixSync: smixSync\n};","map":{"version":3,"names":["crypto","require","MAX_VALUE","DEFAULT_PROMISE_INTERVAL","checkAndInit","key","salt","N","r","p","dkLen","progressCallback","Error","XY","Buffer","alloc","V","B32","Int32Array","x","_X","B","pbkdf2Sync","tickCallback","totalOps","currentOp","current","total","percent","smix","_x","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_x9","_x10","_x11","_smix","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","Bi","promiseInterval","Xi","Yi","i","offset","j","wrap","_callee$","_context","prev","next","copy","Promise","resolve","setImmediate","blockmix_salsa8","readUInt32LE","blockxor","stop","smixSync","BY","arraycopy","salsa20_8","R","a","b","bi","S","Si","D","Di","len","src","srcPos","dest","destPos","length","isBuffer","module","exports"],"sources":["/Users/neville/Documents/Github/elrond-delegation/node_modules/scryptsy/lib/utils.js"],"sourcesContent":["const crypto = require('crypto')\nconst MAX_VALUE = 0x7fffffff\nconst DEFAULT_PROMISE_INTERVAL = 5000\n/* eslint-disable camelcase */\n\nfunction checkAndInit (key, salt, N, r, p, dkLen, progressCallback) {\n  if (N === 0 || (N & (N - 1)) !== 0) throw Error('N must be > 0 and a power of 2')\n\n  if (N > MAX_VALUE / 128 / r) throw Error('Parameter N is too large')\n  if (r > MAX_VALUE / 128 / p) throw Error('Parameter r is too large')\n\n  let XY = Buffer.alloc(256 * r)\n  let V = Buffer.alloc(128 * r * N)\n\n  // pseudo global\n  let B32 = new Int32Array(16) // salsa20_8\n  let x = new Int32Array(16) // salsa20_8\n  let _X = Buffer.alloc(64) // blockmix_salsa8\n\n  // pseudo global\n  let B = crypto.pbkdf2Sync(key, salt, 1, p * 128 * r, 'sha256')\n\n  let tickCallback\n  if (progressCallback) {\n    let totalOps = p * N * 2\n    let currentOp = 0\n\n    tickCallback = function () {\n      ++currentOp\n\n      // send progress notifications once every 1,000 ops\n      if (currentOp % 1000 === 0) {\n        progressCallback({\n          current: currentOp,\n          total: totalOps,\n          percent: (currentOp / totalOps) * 100.0\n        })\n      }\n    }\n  }\n  return {\n    XY,\n    V,\n    B32,\n    x,\n    _X,\n    B,\n    tickCallback\n  }\n}\n\nasync function smix (B, Bi, r, N, V, XY, _X, B32, x, tickCallback, promiseInterval) {\n  promiseInterval = promiseInterval || DEFAULT_PROMISE_INTERVAL\n  let Xi = 0\n  let Yi = 128 * r\n  let i\n\n  B.copy(XY, Xi, Bi, Bi + Yi)\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve))\n    }\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64\n    let j = XY.readUInt32LE(offset) & (N - 1)\n    blockxor(V, j * Yi, XY, Xi, Yi)\n    if (i % promiseInterval === 0) {\n      await new Promise(resolve => setImmediate(resolve))\n    }\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi)\n}\n\nfunction smixSync (B, Bi, r, N, V, XY, _X, B32, x, tickCallback) {\n  let Xi = 0\n  let Yi = 128 * r\n  let i\n\n  B.copy(XY, Xi, Bi, Bi + Yi)\n\n  for (i = 0; i < N; i++) {\n    XY.copy(V, i * Yi, Xi, Xi + Yi)\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  for (i = 0; i < N; i++) {\n    let offset = Xi + (2 * r - 1) * 64\n    let j = XY.readUInt32LE(offset) & (N - 1)\n    blockxor(V, j * Yi, XY, Xi, Yi)\n    blockmix_salsa8(XY, Xi, Yi, r, _X, B32, x)\n\n    if (tickCallback) tickCallback()\n  }\n\n  XY.copy(B, Bi, Xi, Xi + Yi)\n}\n\nfunction blockmix_salsa8 (BY, Bi, Yi, r, _X, B32, x) {\n  let i\n\n  arraycopy(BY, Bi + (2 * r - 1) * 64, _X, 0, 64)\n\n  for (i = 0; i < 2 * r; i++) {\n    blockxor(BY, i * 64, _X, 0, 64)\n    salsa20_8(_X, B32, x)\n    arraycopy(_X, 0, BY, Yi + (i * 64), 64)\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2) * 64, BY, Bi + (i * 64), 64)\n  }\n\n  for (i = 0; i < r; i++) {\n    arraycopy(BY, Yi + (i * 2 + 1) * 64, BY, Bi + (i + r) * 64, 64)\n  }\n}\n\nfunction R (a, b) {\n  return (a << b) | (a >>> (32 - b))\n}\n\nfunction salsa20_8 (B, B32, x) {\n  let i\n\n  for (i = 0; i < 16; i++) {\n    B32[i] = (B[i * 4 + 0] & 0xff) << 0\n    B32[i] |= (B[i * 4 + 1] & 0xff) << 8\n    B32[i] |= (B[i * 4 + 2] & 0xff) << 16\n    B32[i] |= (B[i * 4 + 3] & 0xff) << 24\n    // B32[i] = B.readUInt32LE(i*4)   <--- this is signficantly slower even in Node.js\n  }\n\n  arraycopy(B32, 0, x, 0, 16)\n\n  for (i = 8; i > 0; i -= 2) {\n    x[4] ^= R(x[0] + x[12], 7)\n    x[8] ^= R(x[4] + x[0], 9)\n    x[12] ^= R(x[8] + x[4], 13)\n    x[0] ^= R(x[12] + x[8], 18)\n    x[9] ^= R(x[5] + x[1], 7)\n    x[13] ^= R(x[9] + x[5], 9)\n    x[1] ^= R(x[13] + x[9], 13)\n    x[5] ^= R(x[1] + x[13], 18)\n    x[14] ^= R(x[10] + x[6], 7)\n    x[2] ^= R(x[14] + x[10], 9)\n    x[6] ^= R(x[2] + x[14], 13)\n    x[10] ^= R(x[6] + x[2], 18)\n    x[3] ^= R(x[15] + x[11], 7)\n    x[7] ^= R(x[3] + x[15], 9)\n    x[11] ^= R(x[7] + x[3], 13)\n    x[15] ^= R(x[11] + x[7], 18)\n    x[1] ^= R(x[0] + x[3], 7)\n    x[2] ^= R(x[1] + x[0], 9)\n    x[3] ^= R(x[2] + x[1], 13)\n    x[0] ^= R(x[3] + x[2], 18)\n    x[6] ^= R(x[5] + x[4], 7)\n    x[7] ^= R(x[6] + x[5], 9)\n    x[4] ^= R(x[7] + x[6], 13)\n    x[5] ^= R(x[4] + x[7], 18)\n    x[11] ^= R(x[10] + x[9], 7)\n    x[8] ^= R(x[11] + x[10], 9)\n    x[9] ^= R(x[8] + x[11], 13)\n    x[10] ^= R(x[9] + x[8], 18)\n    x[12] ^= R(x[15] + x[14], 7)\n    x[13] ^= R(x[12] + x[15], 9)\n    x[14] ^= R(x[13] + x[12], 13)\n    x[15] ^= R(x[14] + x[13], 18)\n  }\n\n  for (i = 0; i < 16; ++i) B32[i] = x[i] + B32[i]\n\n  for (i = 0; i < 16; i++) {\n    let bi = i * 4\n    B[bi + 0] = (B32[i] >> 0 & 0xff)\n    B[bi + 1] = (B32[i] >> 8 & 0xff)\n    B[bi + 2] = (B32[i] >> 16 & 0xff)\n    B[bi + 3] = (B32[i] >> 24 & 0xff)\n    // B.writeInt32LE(B32[i], i*4)  //<--- this is signficantly slower even in Node.js\n  }\n}\n\n// naive approach... going back to loop unrolling may yield additional performance\nfunction blockxor (S, Si, D, Di, len) {\n  for (let i = 0; i < len; i++) {\n    D[Di + i] ^= S[Si + i]\n  }\n}\n\nfunction arraycopy (src, srcPos, dest, destPos, length) {\n  if (Buffer.isBuffer(src) && Buffer.isBuffer(dest)) {\n    src.copy(dest, destPos, srcPos, srcPos + length)\n  } else {\n    while (length--) {\n      dest[destPos++] = src[srcPos++]\n    }\n  }\n}\n\nmodule.exports = {\n  checkAndInit,\n  smix,\n  smixSync\n}\n"],"mappings":"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EAAE,CAAC,CAAC;IAC1BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3BA,CAAC,CAAC,CAAC,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IAC7BA,CAAC,CAAC,EAAE,CAAC,IAAIqD,CAAC,CAACrD,CAAC,CAAC,EAAE,CAAC,GAAGA,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/B;EAEA,KAAKiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAE,EAAEA,CAAC,EAAEnC,GAAG,CAACmC,CAAC,CAAC,GAAGjC,CAAC,CAACiC,CAAC,CAAC,GAAGnC,GAAG,CAACmC,CAAC,CAAC;EAE/C,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IACvB,IAAIuB,EAAE,GAAGvB,CAAC,GAAG,CAAC;IACd/B,CAAC,CAACsD,EAAE,GAAG,CAAC,CAAC,GAAI1D,GAAG,CAACmC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAK;IAChC/B,CAAC,CAACsD,EAAE,GAAG,CAAC,CAAC,GAAI1D,GAAG,CAACmC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAK;IAChC/B,CAAC,CAACsD,EAAE,GAAG,CAAC,CAAC,GAAI1D,GAAG,CAACmC,CAAC,CAAC,IAAI,EAAE,GAAG,IAAK;IACjC/B,CAAC,CAACsD,EAAE,GAAG,CAAC,CAAC,GAAI1D,GAAG,CAACmC,CAAC,CAAC,IAAI,EAAE,GAAG,IAAK;IACjC;EACF;AACF;;AAEA;AACA,SAASc,QAAQA,CAAEU,CAAC,EAAEC,EAAE,EAAEC,CAAC,EAAEC,EAAE,EAAEC,GAAG,EAAE;EACpC,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4B,GAAG,EAAE5B,CAAC,EAAE,EAAE;IAC5B0B,CAAC,CAACC,EAAE,GAAG3B,CAAC,CAAC,IAAIwB,CAAC,CAACC,EAAE,GAAGzB,CAAC,CAAC;EACxB;AACF;AAEA,SAASkB,SAASA,CAAEW,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAE;EACtD,IAAIvE,MAAM,CAACwE,QAAQ,CAACL,GAAG,CAAC,IAAInE,MAAM,CAACwE,QAAQ,CAACH,IAAI,CAAC,EAAE;IACjDF,GAAG,CAACrB,IAAI,CAACuB,IAAI,EAAEC,OAAO,EAAEF,MAAM,EAAEA,MAAM,GAAGG,MAAM,CAAC;EAClD,CAAC,MAAM;IACL,OAAOA,MAAM,EAAE,EAAE;MACfF,IAAI,CAACC,OAAO,EAAE,CAAC,GAAGH,GAAG,CAACC,MAAM,EAAE,CAAC;IACjC;EACF;AACF;AAEAK,MAAM,CAACC,OAAO,GAAG;EACfpF,YAAY,EAAZA,YAAY;EACZyB,IAAI,EAAJA,IAAI;EACJuC,QAAQ,EAARA;AACF,CAAC"},"metadata":{},"sourceType":"script"}