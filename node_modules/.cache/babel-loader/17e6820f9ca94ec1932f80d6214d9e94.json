{"ast":null,"code":"import BigNumber from'bignumber.js';export default function nominate(input,paramDenomination){var parts=input.toString().split('.');var denomination=paramDenomination!==undefined?paramDenomination:18;if(parts[1]){// remove trailing zeros\nwhile(parts[1].substring(parts[1].length-1)==='0'&&parts[1].length>1){parts[1]=parts[1].substring(0,parts[1].length-1);}}var count=parts[1]?denomination-parts[1].length:denomination;count=count<0?0:count;var transformed=parts.join('')+'0'.repeat(count);// remove beginning zeros\nwhile(transformed.substring(0,1)==='0'&&transformed.length>1){transformed=transformed.substring(1);}return transformed;}export var nominateVal=function nominateVal(value){var perc=(parseFloat(value)*100).toString(16);if(perc.length%2!==0){perc='0'+perc;}return perc;};export var nominateValToHex=function nominateValToHex(value){var val=value&&value.length>0?new BigNumber(nominate(value)).toString(16):'0';if(val.length%2!==0){val='0'+val;}return val;};","map":{"version":3,"names":["BigNumber","nominate","input","paramDenomination","parts","toString","split","denomination","undefined","substring","length","count","transformed","join","repeat","nominateVal","value","perc","parseFloat","nominateValToHex","val"],"sources":["/Users/neville/Documents/Github/elrond-delegation/src/helpers/nominate.ts"],"sourcesContent":["import BigNumber from 'bignumber.js';\n\nexport default function nominate(input: string, paramDenomination?: number) {\n  const parts = input.toString().split('.');\n  const denomination = paramDenomination !== undefined ? paramDenomination : 18;\n\n  if (parts[1]) {\n    // remove trailing zeros\n    while (\n      parts[1].substring(parts[1].length - 1) === '0' &&\n      parts[1].length > 1\n    ) {\n      parts[1] = parts[1].substring(0, parts[1].length - 1);\n    }\n  }\n\n  let count = parts[1] ? denomination - parts[1].length : denomination;\n\n  count = count < 0 ? 0 : count;\n\n  let transformed = parts.join('') + '0'.repeat(count);\n\n  // remove beginning zeros\n  while (transformed.substring(0, 1) === '0' && transformed.length > 1) {\n    transformed = transformed.substring(1);\n  }\n\n  return transformed;\n}\n\nexport const nominateVal = (value: string) => {\n  let perc = (parseFloat(value) * 100).toString(16);\n  if (perc.length % 2 !== 0) {\n    perc = '0' + perc;\n  }\n  return perc;\n};\n\nexport const nominateValToHex = (value: string) => {\n  let val =\n    value && value.length > 0\n      ? new BigNumber(nominate(value)).toString(16)\n      : '0';\n\n  if (val.length % 2 !== 0) {\n    val = '0' + val;\n  }\n\n  return val;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,cAAc,CAEpC,cAAe,SAAS,CAAAC,QAAQA,CAACC,KAAa,CAAEC,iBAA0B,CAAE,CAC1E,GAAM,CAAAC,KAAK,CAAGF,KAAK,CAACG,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CACzC,GAAM,CAAAC,YAAY,CAAGJ,iBAAiB,GAAKK,SAAS,CAAGL,iBAAiB,CAAG,EAAE,CAE7E,GAAIC,KAAK,CAAC,CAAC,CAAC,CAAE,CACZ;AACA,MACEA,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,CAACL,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,CAAG,CAAC,CAAC,GAAK,GAAG,EAC/CN,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,CAAG,CAAC,CACnB,CACAN,KAAK,CAAC,CAAC,CAAC,CAAGA,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,CAAC,CAAC,CAAEL,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,CAAG,CAAC,CAAC,CACvD,CACF,CAEA,GAAI,CAAAC,KAAK,CAAGP,KAAK,CAAC,CAAC,CAAC,CAAGG,YAAY,CAAGH,KAAK,CAAC,CAAC,CAAC,CAACM,MAAM,CAAGH,YAAY,CAEpEI,KAAK,CAAGA,KAAK,CAAG,CAAC,CAAG,CAAC,CAAGA,KAAK,CAE7B,GAAI,CAAAC,WAAW,CAAGR,KAAK,CAACS,IAAI,CAAC,EAAE,CAAC,CAAG,GAAG,CAACC,MAAM,CAACH,KAAK,CAAC,CAEpD;AACA,MAAOC,WAAW,CAACH,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,GAAK,GAAG,EAAIG,WAAW,CAACF,MAAM,CAAG,CAAC,CAAE,CACpEE,WAAW,CAAGA,WAAW,CAACH,SAAS,CAAC,CAAC,CAAC,CACxC,CAEA,MAAO,CAAAG,WAAW,CACpB,CAEA,MAAO,IAAM,CAAAG,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAa,CAAK,CAC5C,GAAI,CAAAC,IAAI,CAAG,CAACC,UAAU,CAACF,KAAK,CAAC,CAAG,GAAG,EAAEX,QAAQ,CAAC,EAAE,CAAC,CACjD,GAAIY,IAAI,CAACP,MAAM,CAAG,CAAC,GAAK,CAAC,CAAE,CACzBO,IAAI,CAAG,GAAG,CAAGA,IAAI,CACnB,CACA,MAAO,CAAAA,IAAI,CACb,CAAC,CAED,MAAO,IAAM,CAAAE,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIH,KAAa,CAAK,CACjD,GAAI,CAAAI,GAAG,CACLJ,KAAK,EAAIA,KAAK,CAACN,MAAM,CAAG,CAAC,CACrB,GAAI,CAAAV,SAAS,CAACC,QAAQ,CAACe,KAAK,CAAC,CAAC,CAACX,QAAQ,CAAC,EAAE,CAAC,CAC3C,GAAG,CAET,GAAIe,GAAG,CAACV,MAAM,CAAG,CAAC,GAAK,CAAC,CAAE,CACxBU,GAAG,CAAG,GAAG,CAAGA,GAAG,CACjB,CAEA,MAAO,CAAAA,GAAG,CACZ,CAAC"},"metadata":{},"sourceType":"module"}