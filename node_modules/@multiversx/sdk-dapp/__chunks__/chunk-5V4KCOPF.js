import{d as p,e as l}from"./chunk-3AWBGP7M.js";import{h as a,t as d}from"./chunk-HAVQLHXJ.js";import{o as T}from"./chunk-K2GW23ZC.js";import{j as s,m as i}from"./chunk-HBP5N4FR.js";i();d();T();import{ExtensionProvider as g}from"@multiversx/sdk-extension-provider";import{HWProvider as w}from"@multiversx/sdk-hw-provider";import{OperaProvider as P}from"@multiversx/sdk-opera-provider";import{WalletProvider as c}from"@multiversx/sdk-web-wallet-provider";var u="/dapp/init",W=r=>{switch(r==null?void 0:r.constructor){case c:return"wallet";case p:return"walletconnect";case l:return"walletconnectv2";case w:return"ledger";case g:return"extension";case P:return"opera";case t:return"";default:return"extra"}},y=r=>new c(`${r}${u}`),D=r=>s(void 0,null,function*(){if(!r.isInitialized())throw new Error("Unable to get version. Provider not initialized");let e=r.hwApp,{contractData:n,version:m}=yield e.getAppConfiguration();return{version:m,dataEnabled:n===a}}),o=r=>`Unable to perform ${r}, Provider not initialized`,t=class{init(){return Promise.resolve(!1)}login(e){throw new Error(o(`login with options: ${e}`))}logout(e){throw new Error(o(`logout with options: ${e}`))}getAddress(){throw new Error(o("getAddress"))}isInitialized(){return!1}isConnected(){return Promise.resolve(!1)}sendTransaction(e,n){throw new Error(o(`sendTransaction with transactions: ${e} options: ${n}`))}signTransaction(e,n){throw new Error(o(`signTransaction with transactions: ${e} options: ${n}`))}signTransactions(e,n){throw new Error(o(`signTransactions with transactions: ${e} options: ${n}`))}signMessage(e,n){throw new Error(o(`signTransactions with ${e} and options ${n}`))}sendCustomMessage({method:e,params:n}){throw new Error(o(`sendCustomMessage with method: ${e} params: ${n}`))}sendCustomRequest(e){throw new Error(o(`sendSessionEvent with options: ${e}`))}ping(){return Promise.resolve(!1)}},M=new t;export{u as a,W as b,y as c,D as d,t as e,M as f};
//# sourceMappingURL=chunk-5V4KCOPF.js.map
