import{a as T}from"./chunk-TPHV3KKL.js";import{a as M}from"./chunk-5VPXKALT.js";import{c as v}from"./chunk-QFKT22AW.js";import{a as f}from"./chunk-4Z6EY67I.js";import{j as i,m as d}from"./chunk-HBP5N4FR.js";d();f();d();import{Transaction as N}from"@multiversx/sdk-core";f();var m=e=>()=>{throw new Error(`Unable to perform ${e}, Provider not initialized`)},p=M(),R,P,o=typeof window!="undefined"&&(P=(R=window==null?void 0:window.parent)==null?void 0:R.origin)!=null?P:"*",b=e=>{let s=r=>{let n=r.data;if(!(r.target.origin!=o&&p!="reactNative"))try{n=JSON.parse(n),e(n)}catch(g){console.error("error parsing response")}};document.addEventListener("message",s),window.addEventListener("message",s)},L={init:()=>i(void 0,null,function*(){return!0}),login:()=>i(void 0,null,function*(){return!0}),relogin:()=>i(void 0,null,function*(){try{return y.login[p](),yield new Promise((s,r)=>{function n(g){let{message:w,type:a}=g;if(a==="LOGIN_RESPONSE")try{let{accessToken:t,error:c}=w;c?r(c):(T(t),v(),s(t))}catch(t){r("Unable to login")}document.removeEventListener("message",n)}b(n)})}catch(e){throw console.error("error logging in",e),e}}),logout:()=>(y.logout[p](),new Promise(e=>{e(!0)})),getAddress:m("getAddress"),isInitialized:()=>!0,isConnected:()=>i(void 0,null,function*(){return!0}),sendTransaction:m("sendTransaction"),signMessage:m("signMessage"),signTransactions:e=>i(void 0,null,function*(){try{let s=e.map(n=>n.toPlainObject());return y.signTransactions[p](s),yield new Promise((n,g)=>{window.transactionsSigned=(a,t)=>{if(a=JSON.parse(a),t){g(t),window.transactionsSigned=null;return}n(a.map(c=>N.fromPlainObject(c))),window.transactionsSigned=null};function w(a){let{message:t,type:c}=a;if(c==="SIGN_TRANSACTIONS_RESPONSE"){let{transactions:h,error:l}=t;try{l?g(l):n(h.map(u=>N.fromPlainObject(u)))}catch(u){g("Unable to sign")}}document.removeEventListener("message",w)}b(w)})}catch(s){throw console.error("error sending transaction",s),s}}),signTransaction:function(e){return i(this,null,function*(){return(yield this.signTransactions([e]))[0]})}};var y={signTransactions:{["ios"]:e=>window.webkit.messageHandlers.signTransactions.postMessage(e,o),["reactNative"]:e=>window==null?void 0:window.ReactNativeWebView.postMessage(JSON.stringify({type:"SIGN_TRANSACTIONS_REQUEST",message:e})),["web"]:e=>window==null?void 0:window.postMessage(JSON.stringify({type:"SIGN_TRANSACTIONS_REQUEST",message:e}),o)},signMessage:{["ios"]:e=>window.webkit.messageHandlers.signMessage.postMessage(e),["reactNative"]:e=>window==null?void 0:window.ReactNativeWebView.postMessage(JSON.stringify({type:"SIGN_MESSAGE_REQUEST",message:e})),["web"]:e=>window==null?void 0:window.postMessage(JSON.stringify({type:"SIGN_MESSAGE_REQUEST",message:e}),o)},logout:{["ios"]:()=>window.webkit.messageHandlers.logout.postMessage(),["reactNative"]:()=>window==null?void 0:window.ReactNativeWebView.postMessage(JSON.stringify({type:"LOGOUT_REQUEST"})),["web"]:()=>window==null?void 0:window.postMessage(JSON.stringify({type:"LOGOUT_REQUEST"}),o)},login:{["ios"]:()=>window.webkit.messageHandlers.login.postMessage(),["reactNative"]:()=>window==null?void 0:window.ReactNativeWebView.postMessage(JSON.stringify({type:"LOGIN_REQUEST"})),["web"]:()=>window==null?void 0:window.postMessage(JSON.stringify({type:"LOGIN_REQUEST"}),o)}};export{y as a,o as b,L as c};
//# sourceMappingURL=chunk-2OXZ65MK.js.map
